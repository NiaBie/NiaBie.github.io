<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>ubuntu驱动</title>
      <link href="/2020/08/05/ubuntu%E9%A9%B1%E5%8A%A8/"/>
      <url>/2020/08/05/ubuntu%E9%A9%B1%E5%8A%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="输入设备"><a href="#输入设备" class="headerlink" title="输入设备"></a>输入设备</h1><h2 id="重启驱动"><a href="#重启驱动" class="headerlink" title="重启驱动"></a>重启驱动</h2><ul><li>重启触摸板驱动</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo modprobe -r psmouse</span><br><span class="line">sudo modprobe psmouse</span><br></pre></td></tr></table></figure><p>或</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo rmmod psmouse</span><br><span class="line">sudo modprobe psmouse</span><br></pre></td></tr></table></figure><p>或</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">xinput list</span><br><span class="line">xinput --<span class="built_in">disable</span> &#123;编号&#125;</span><br><span class="line">xinput --<span class="built_in">enable</span> &#123;编号&#125;</span><br></pre></td></tr></table></figure><h2 id="安装mac设备驱动"><a href="#安装mac设备驱动" class="headerlink" title="安装mac设备驱动"></a>安装mac设备驱动</h2><p><a href="https://github.com/Dunedan/mbp-2016-linux#keyboard--touchpad">总览:github</a><br><a href="https://github.com/roadrunner2/macbook12-spi-driver">触摸板/键盘:github</a></p><p>参考代码(不适用于macbook8,1)</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo echo -e &quot;\n# applespi\napplespi\nspi_pxa2xx_platform\nintel_lpss_pci&quot; &gt;&gt; &#x2F;etc&#x2F;initramfs-tools&#x2F;modules</span><br><span class="line">sudo</span><br><span class="line">sudo apt install dkms</span><br><span class="line">sudo git clone https:&#x2F;&#x2F;github.com&#x2F;roadrunner2&#x2F;macbook12-spi-driver.git &#x2F;usr&#x2F;src&#x2F;applespi-0.1</span><br><span class="line">sudo dkms install -m applespi -v 0.1</span><br></pre></td></tr></table></figure><h1 id="网卡"><a href="#网卡" class="headerlink" title="网卡"></a>网卡</h1><h2 id="找不到wifi适配器"><a href="#找不到wifi适配器" class="headerlink" title="找不到wifi适配器"></a>找不到wifi适配器</h2><p>使用手机的USB共享网络上网</p><ol><li>使用<code>ifconfig -a</code>查看接口,如果除<code>lo</code>还有其他接口,跳到下一步</li></ol><p>参考:<a href="https://www.jianshu.com/p/8b29954ab590">简书</a></p><p>打开安装ubuntu的u盘,在<code>/pool/restricted/b/bcmwl</code>下安装目录下的deb文件,将依赖的软件也全部安装(一般会缺少<code>dkms</code>,可以用<code>apt</code>安装,也可以直接到<code>/pool/main/d/dkms</code>下找到安装包)</p><p>如果安装出现问题,请在BIOS中关闭<code>secure boot</code></p><ol start="2"><li>在<code>软件和更新</code>(要联网)中找到<code>附加驱动</code><ul><li>如果出现<code>该设备没有工作</code>,请手动安装选项中的驱动(例如<code>bckport-iwlwifi-dkms</code>或者从<a href="https://pkgs.org/download/backport-iwlwifi-dkms">https://pkgs.org/download/backport-iwlwifi-dkms</a>下载)</li><li><strong>TODO</strong></li></ul></li></ol><p>可能有用的指令</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ifconfig -a</span><br><span class="line">sudo lshw -c network</span><br><span class="line">lspci -v</span><br><span class="line">rfkill list all</span><br><span class="line">mokutil --sb-state</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> ubuntu </tag>
            
            <tag> wlan </tag>
            
            <tag> 驱动 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>绘画工具</title>
      <link href="/2020/07/17/%E7%BB%98%E7%94%BB%E5%B7%A5%E5%85%B7/"/>
      <url>/2020/07/17/%E7%BB%98%E7%94%BB%E5%B7%A5%E5%85%B7/</url>
      
        <content type="html"><![CDATA[<h1 id="基本映射"><a href="#基本映射" class="headerlink" title="基本映射"></a>基本映射</h1><table><thead><tr><th align="center">操作</th><th align="center">photoshop</th><th align="center">sai</th><th align="center">krita</th><th align="center">medibang paint</th></tr></thead><tbody><tr><td align="center">移动</td><td align="center"><code>v</code></td><td align="center">无</td><td align="center"><code>t</code></td><td align="center"><code>v</code></td></tr><tr><td align="center">拖动</td><td align="center"><code>space</code></td><td align="center"><code>space</code></td><td align="center"><code>space</code></td><td align="center"><code>space</code></td></tr><tr><td align="center">自由缩放</td><td align="center"><code>z</code>,<code>ctrl</code>+<code>space</code>,<code>alt</code>+<code>space</code></td><td align="center"><code>ctrl</code>+<code>space</code>(需要设置<code>拖动时的操作</code>)</td><td align="center"><code>ctrl</code>+<code>space</code></td><td align="center"><code>ctrl</code>+<code>space</code></td></tr><tr><td align="center">自由旋转</td><td align="center"><code>r</code></td><td align="center"><code>alt</code>+<code>space</code></td><td align="center"><code>shift</code>+<code>space</code></td><td align="center"><code>alt</code>+<code>space</code></td></tr><tr><td align="center">画笔</td><td align="center"><code>b</code></td><td align="center"><code>n</code></td><td align="center"><code>b</code></td><td align="center"><code>b</code></td></tr><tr><td align="center">矩形选区</td><td align="center"><code>m</code></td><td align="center"><code>m</code></td><td align="center"><code>ctrl</code>+<code>r</code></td><td align="center"><code>m</code></td></tr><tr><td align="center">魔棒选区</td><td align="center"><code>w</code></td><td align="center"><code>e</code></td><td align="center">无</td><td align="center"><code>w</code></td></tr><tr><td align="center">套索</td><td align="center"><code>l</code></td><td align="center"><code>l</code></td><td align="center">无</td><td align="center"><code>l</code></td></tr><tr><td align="center">取消选区</td><td align="center"><code>ctrl</code>+<code>d</code></td><td align="center"><code>ctrl</code>+<code>d</code></td><td align="center"><code>ctrl</code>+<code>shift</code>+<code>a</code></td><td align="center"><code>ctrl</code>+<code>d</code></td></tr><tr><td align="center">橡皮擦</td><td align="center"><code>e</code></td><td align="center"><code>e</code></td><td align="center"><code>e</code>(开关)</td><td align="center"><code>e</code></td></tr><tr><td align="center">取色器</td><td align="center"><code>alt</code></td><td align="center"><code>alt</code></td><td align="center"><code>ctrl</code></td><td align="center"><code>alt</code></td></tr><tr><td align="center">撤销</td><td align="center"><code>ctrl</code>+<code>alt</code>+<code>z</code></td><td align="center"><code>ctrl</code>+<code>z</code></td><td align="center"><code>ctrl</code>+<code>z</code></td><td align="center"><code>ctrl</code>+<code>z</code></td></tr><tr><td align="center">重做</td><td align="center"><code>ctrl</code>+<code>shift</code>+<code>z</code></td><td align="center"><code>ctrl</code>+<code>y</code></td><td align="center"><code>ctrl</code>+<code>shift</code>+<code>z</code></td><td align="center"><code>ctrl</code>+<code>y</code></td></tr></tbody></table>]]></content>
      
      
      
        <tags>
            
            <tag> krita </tag>
            
            <tag> photoshop </tag>
            
            <tag> 绘画 </tag>
            
            <tag> sai </tag>
            
            <tag> medibang paint </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据通信</title>
      <link href="/2020/05/05/%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1/"/>
      <url>/2020/05/05/%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1/</url>
      
        <content type="html"><![CDATA[<h1 id="1-数据通信-数据网络和因特网"><a href="#1-数据通信-数据网络和因特网" class="headerlink" title="1 数据通信,数据网络和因特网"></a>1 数据通信,数据网络和因特网</h1><ul><li>T-1连接:1.544Mbps</li><li>T-3连接:44.736Mbps</li></ul><h1 id="3-数据传输"><a href="#3-数据传输" class="headerlink" title="3 数据传输"></a>3 数据传输</h1><h2 id="3-1-概念和术语"><a href="#3-1-概念和术语" class="headerlink" title="3.1 概念和术语"></a>3.1 概念和术语</h2><h3 id="3-1-1-传输术语"><a href="#3-1-1-传输术语" class="headerlink" title="3.1.1 传输术语"></a>3.1.1 传输术语</h3><ul><li>单工</li><li>半双工</li><li>全双工</li></ul><h3 id="3-1-2-频率-频谱和带宽"><a href="#3-1-2-频率-频谱和带宽" class="headerlink" title="3.1.2 频率,频谱和带宽"></a>3.1.2 频率,频谱和带宽</h3><ul><li>数据率和带宽之间的关系</li></ul><h2 id="3-2-模拟和数字数据传输"><a href="#3-2-模拟和数字数据传输" class="headerlink" title="3.2 模拟和数字数据传输"></a>3.2 模拟和数字数据传输</h2><h3 id="3-2-1-模拟数据和数字数据"><a href="#3-2-1-模拟数据和数字数据" class="headerlink" title="3.2.1 模拟数据和数字数据"></a>3.2.1 模拟数据和数字数据</h3><h3 id="3-2-2-模拟信号和数字信号"><a href="#3-2-2-模拟信号和数字信号" class="headerlink" title="3.2.2 模拟信号和数字信号"></a>3.2.2 模拟信号和数字信号</h3><ul><li>调制解调器</li><li>解编码器</li><li>数字传送器</li></ul><h3 id="3-2-3-模拟传输和数字传输"><a href="#3-2-3-模拟传输和数字传输" class="headerlink" title="3.2.3 模拟传输和数字传输"></a>3.2.3 模拟传输和数字传输</h3><h2 id="3-3-传输损伤"><a href="#3-3-传输损伤" class="headerlink" title="3.3 传输损伤"></a>3.3 传输损伤</h2><h3 id="3-3-1-衰减"><a href="#3-3-1-衰减" class="headerlink" title="3.3.1 衰减"></a>3.3.1 衰减</h3><ul><li>衰减失真:频率越高,衰减越严重,并将导致失真</li></ul><h3 id="3-3-2-时延失真"><a href="#3-3-2-时延失真" class="headerlink" title="3.3.2 时延失真"></a>3.3.2 时延失真</h3><h3 id="3-3-3-噪声"><a href="#3-3-3-噪声" class="headerlink" title="3.3.3 噪声"></a>3.3.3 噪声</h3><p>假设噪声与频率的大小无关,在$B$Hz带宽内的热噪声为$N = kTB$</p><p>$k=$玻尔兹曼常量$=1.38 \times 10^{-23} J/K$</p><p>或用分贝-瓦表示$N=10 \lg k + 10 \lg T + 10 \lg B = -228.6dBW + 10 \lg T + 10 \lg B$</p><h2 id="3-4-信道容量"><a href="#3-4-信道容量" class="headerlink" title="3.4 信道容量"></a>3.4 信道容量</h2><ul><li>数据率:数据能够通信的速率,用比特每秒bps表示</li><li>带宽:在发送器和传输媒体的特性限制下的带宽,用Hz或每秒的周数表示</li><li>噪声</li><li>误码率:即差错发生率</li></ul><h3 id="3-4-1-奈奎斯特带宽"><a href="#3-4-1-奈奎斯特带宽" class="headerlink" title="3.4.1 奈奎斯特带宽"></a>3.4.1 奈奎斯特带宽</h3><p>$B$:信道带宽,为避免串扰,极限码元传输速率为$2B$Baud,$B$单位Hz,Baud为每秒钟传送码元的数目</p><p>奈奎斯特公式:$C = 2B \log_2 M$,$M$是离散信号的个数或电平的个数</p><h3 id="3-4-2-香农容量公式"><a href="#3-4-2-香农容量公式" class="headerlink" title="3.4.2 香农容量公式"></a>3.4.2 香农容量公式</h3><p>信噪比(SNR或S/N):$SNR_{dB} = 10 \lg \dfrac{\text{信号功率}}{\text{噪声功率}}$</p><p>信道的最大容量$C = B \log_2(1 + SNR)$,无误码容量</p><h3 id="3-4-3-表达式-E-b-N-0"><a href="#3-4-3-表达式-E-b-N-0" class="headerlink" title="3.4.3 表达式$E_b/N_0$"></a>3.4.3 表达式$E_b/N_0$</h3><p>每比特信号的能量与每赫兹噪声功率密度之比</p><p>$$ \dfrac{E_b}{N_0} = \dfrac{S / R}{N_0} = \dfrac{S}{kTR} $$</p><p>$S$是信号功率,$R$数据率</p><h1 id="4-传输媒体"><a href="#4-传输媒体" class="headerlink" title="4 传输媒体"></a>4 传输媒体</h1><p>决定数据率和传输距离的许多设计因素都与传输媒体及信号有关</p><ul><li>带宽</li><li>传输损伤</li><li>干扰</li><li>接收器的数量</li></ul><h2 id="4-1-导向传输媒体"><a href="#4-1-导向传输媒体" class="headerlink" title="4.1 导向传输媒体"></a>4.1 导向传输媒体</h2><h3 id="4-1-1-双绞线"><a href="#4-1-1-双绞线" class="headerlink" title="4.1.1 双绞线"></a>4.1.1 双绞线</h3><h3 id="4-1-2-同轴电缆"><a href="#4-1-2-同轴电缆" class="headerlink" title="4.1.2 同轴电缆"></a>4.1.2 同轴电缆</h3><h3 id="4-1-3-光纤"><a href="#4-1-3-光纤" class="headerlink" title="4.1.3 光纤"></a>4.1.3 光纤</h3><h2 id="4-2-无线传输"><a href="#4-2-无线传输" class="headerlink" title="4.2 无线传输"></a>4.2 无线传输</h2><h3 id="4-2-1-天线"><a href="#4-2-1-天线" class="headerlink" title="4.2.1 天线"></a>4.2.1 天线</h3><ul><li>各向同性天线</li><li>抛物面反射天线</li><li>天线增益</li></ul><h3 id="4-2-2-地面微波"><a href="#4-2-2-地面微波" class="headerlink" title="4.2.2 地面微波"></a>4.2.2 地面微波</h3><h3 id="4-2-3-卫星微波"><a href="#4-2-3-卫星微波" class="headerlink" title="4.2.3 卫星微波"></a>4.2.3 卫星微波</h3><h3 id="4-2-4-广播无线电"><a href="#4-2-4-广播无线电" class="headerlink" title="4.2.4 广播无线电"></a>4.2.4 广播无线电</h3><h2 id="4-3-无线传播"><a href="#4-3-无线传播" class="headerlink" title="4.3 无线传播"></a>4.3 无线传播</h2><h3 id="4-3-1-地波传播"><a href="#4-3-1-地波传播" class="headerlink" title="4.3.1 地波传播"></a>4.3.1 地波传播</h3><h3 id="4-3-2-天波传播"><a href="#4-3-2-天波传播" class="headerlink" title="4.3.2 天波传播"></a>4.3.2 天波传播</h3><h3 id="4-3-3-视距传播"><a href="#4-3-3-视距传播" class="headerlink" title="4.3.3 视距传播"></a>4.3.3 视距传播</h3><ul><li><p>折射</p></li><li><p>光学视距和无线电视距</p><ul><li>在没有中间障碍物的情况下,光学视距$d = 3.57 \sqrt{h},h$是天线和地平线之间的距离,以km为单位</li><li>到地平线的有效视距或无线电视距$d = 3.57 \sqrt{Kh},K$是折射引起的调整系数,经验值$K = 4/3a$</li><li>因此,视距传播的两个天线之间的最大距离为$3.57(\sqrt{Kh_1} + \sqrt{Kh_2})$</li></ul></li></ul><h2 id="4-4-视距传输"><a href="#4-4-视距传输" class="headerlink" title="4.4 视距传输"></a>4.4 视距传输</h2><h3 id="4-4-1-自由空间损耗"><a href="#4-4-1-自由空间损耗" class="headerlink" title="4.4.1 自由空间损耗"></a>4.4.1 自由空间损耗</h3><p>表示为发射率$P_t$与天线接收到的功率$P_r$的比值,$\dfrac{P_t}{P_r} = \dfrac{(4\pi d)^2}{\lambda^2} = \dfrac{(4\pi fd)^2}{c^2}$,其中</p><ul><li>$P_t$:发送天线的信号功率</li><li>$P-r$:接收天线的信号功率</li><li>$\lambda$:载波波长<br>可以被改写为$L_{dB} = 10\lg(\dfrac{4\pi d}{\lambda^2})^2$</li></ul><h3 id="4-4-2-大气吸收"><a href="#4-4-2-大气吸收" class="headerlink" title="4.4.2 大气吸收"></a>4.4.2 大气吸收</h3><h3 id="4-4-3-多径"><a href="#4-4-3-多径" class="headerlink" title="4.4.3 多径"></a>4.4.3 多径</h3><h3 id="4-4-4-折射"><a href="#4-4-4-折射" class="headerlink" title="4.4.4 折射"></a>4.4.4 折射</h3><h1 id="5-信号编码技术"><a href="#5-信号编码技术" class="headerlink" title="5 信号编码技术"></a>5 信号编码技术</h1><ul><li><strong>模拟信号传输</strong>的基础是一种连续且频率恒定的信号,成为<strong>载波信号</strong></li><li>基带信号</li></ul><h2 id="5-1-数字数据-数字信号"><a href="#5-1-数字数据-数字信号" class="headerlink" title="5.1 数字数据,数字信号"></a>5.1 数字数据,数字信号</h2><table><thead><tr><th align="center">术语</th><th align="center">单位</th><th align="center">定义</th></tr></thead><tbody><tr><td align="center">数据元素</td><td align="center">比特(bit)</td><td align="center">单个的二进制1或0</td></tr><tr><td align="center">数据率</td><td align="center">比特每秒(bps)</td><td align="center">数据元素传输的速率</td></tr><tr><td align="center">信号元素</td><td align="center">数字:一个固定振幅的电压脉冲;模拟:一个具有固定频率,相位和振幅的脉冲</td><td align="center">在一个信号传输编码中占据最短时间间隔的那部分信号</td></tr><tr><td align="center">信号传输速率或调制速率</td><td align="center">信号元素每秒(波特)</td><td align="center">信号元素传输的速率</td></tr></tbody></table><p>在其他条件保持不变的情况下:</p><ul><li>数据率增加,则比特差错率(BER,也成为误码率)增加</li><li>SNR增加,则差错率减小</li><li>增加带宽可使数据率增加</li></ul><p>数字信号编码格式的定义</p><ul><li>不归零电平(NRZ-L)</li><li>不归零1制(NRZI)</li><li>双极性AMI</li><li>伪三进制码</li><li>曼彻斯特编码</li><li>差分曼彻斯特编码</li><li>8零替换(B8ZS)</li><li>双极性3零码(HDB3)</li></ul><h3 id="5-1-1-不归零码-NRZ"><a href="#5-1-1-不归零码-NRZ" class="headerlink" title="5.1.1 不归零码(NRZ)"></a>5.1.1 不归零码(NRZ)</h3><h3 id="5-1-2-多电平二进制"><a href="#5-1-2-多电平二进制" class="headerlink" title="5.1.2 多电平二进制"></a>5.1.2 多电平二进制</h3><h3 id="5-1-3-双相位"><a href="#5-1-3-双相位" class="headerlink" title="5.1.3 双相位"></a>5.1.3 双相位</h3><h3 id="5-1-4-调制率"><a href="#5-1-4-调制率" class="headerlink" title="5.1.4 调制率"></a>5.1.4 调制率</h3><p>$$ D = \dfrac{R}{L} = \dfrac{R}{\log_2M} $$<br>其中</p><ul><li>$D$:调制率,波特</li><li>$R$:数据率,bps</li><li>$M$:不通信号元素个数,$2^L$</li><li>$L$:每个信号元素中的比特数目</li></ul><h3 id="5-1-5-扰码技术"><a href="#5-1-5-扰码技术" class="headerlink" title="5.1.5 扰码技术"></a>5.1.5 扰码技术</h3><h2 id="5-2-数字数据-模拟信号"><a href="#5-2-数字数据-模拟信号" class="headerlink" title="5.2 数字数据,模拟信号"></a>5.2 数字数据,模拟信号</h2><h3 id="5-2-1-振幅键控"><a href="#5-2-1-振幅键控" class="headerlink" title="5.2.1 振幅键控"></a>5.2.1 振幅键控</h3><h3 id="5-2-2-频移键控"><a href="#5-2-2-频移键控" class="headerlink" title="5.2.2 频移键控"></a>5.2.2 频移键控</h3><h3 id="5-2-3-相移键控"><a href="#5-2-3-相移键控" class="headerlink" title="5.2.3 相移键控"></a>5.2.3 相移键控</h3><h3 id="5-2-4-性能"><a href="#5-2-4-性能" class="headerlink" title="5.2.4 性能"></a>5.2.4 性能</h3><h3 id="5-2-5-正交调幅"><a href="#5-2-5-正交调幅" class="headerlink" title="5.2.5 正交调幅"></a>5.2.5 正交调幅</h3><h2 id="5-3-模拟数据-数字信号"><a href="#5-3-模拟数据-数字信号" class="headerlink" title="5.3 模拟数据,数字信号"></a>5.3 模拟数据,数字信号</h2><h3 id="5-3-1-脉码调制"><a href="#5-3-1-脉码调制" class="headerlink" title="5.3.1 脉码调制"></a>5.3.1 脉码调制</h3><h3 id="5-3-2-增量调制"><a href="#5-3-2-增量调制" class="headerlink" title="5.3.2 增量调制"></a>5.3.2 增量调制</h3><h3 id="5-3-3-性能"><a href="#5-3-3-性能" class="headerlink" title="5.3.3 性能"></a>5.3.3 性能</h3><h2 id="5-4-模拟数据-模拟信号"><a href="#5-4-模拟数据-模拟信号" class="headerlink" title="5.4 模拟数据,模拟信号"></a>5.4 模拟数据,模拟信号</h2><h3 id="5-4-1-调幅"><a href="#5-4-1-调幅" class="headerlink" title="5.4.1 调幅"></a>5.4.1 调幅</h3><h3 id="5-4-2-角度调制"><a href="#5-4-2-角度调制" class="headerlink" title="5.4.2 角度调制"></a>5.4.2 角度调制</h3><h1 id="6-数字数据通信技术"><a href="#6-数字数据通信技术" class="headerlink" title="6 数字数据通信技术"></a>6 数字数据通信技术</h1><h2 id="6-1-异步和同步传输"><a href="#6-1-异步和同步传输" class="headerlink" title="6.1 异步和同步传输"></a>6.1 异步和同步传输</h2><ul><li>起始位</li></ul><h3 id="6-1-1-异步传输"><a href="#6-1-1-异步传输" class="headerlink" title="6.1.1 异步传输"></a>6.1.1 异步传输</h3><h3 id="6-1-2-同步传输"><a href="#6-1-2-同步传输" class="headerlink" title="6.1.2 同步传输"></a>6.1.2 同步传输</h3><h2 id="6-2-差错类型"><a href="#6-2-差错类型" class="headerlink" title="6.2 差错类型"></a>6.2 差错类型</h2><h2 id="6-3-差错检测"><a href="#6-3-差错检测" class="headerlink" title="6.3 差错检测"></a>6.3 差错检测</h2><h3 id="6-3-1-奇偶校验"><a href="#6-3-1-奇偶校验" class="headerlink" title="6.3.1 奇偶校验"></a>6.3.1 奇偶校验</h3><h3 id="6-3-2-循环冗余校验"><a href="#6-3-2-循环冗余校验" class="headerlink" title="6.3.2 循环冗余校验"></a>6.3.2 循环冗余校验</h3><h2 id="6-4-差错纠正"><a href="#6-4-差错纠正" class="headerlink" title="6.4 差错纠正"></a>6.4 差错纠正</h2><h3 id="6-4-1-块码原理"><a href="#6-4-1-块码原理" class="headerlink" title="6.4.1 块码原理"></a>6.4.1 块码原理</h3><h2 id="6-5-线路配置"><a href="#6-5-线路配置" class="headerlink" title="6.5 线路配置"></a>6.5 线路配置</h2><h3 id="6-5-1-拓扑结构"><a href="#6-5-1-拓扑结构" class="headerlink" title="6.5.1 拓扑结构"></a>6.5.1 拓扑结构</h3><h3 id="6-5-2-全双工和半双工"><a href="#6-5-2-全双工和半双工" class="headerlink" title="6.5.2 全双工和半双工"></a>6.5.2 全双工和半双工</h3><h1 id="7-数据链路控制"><a href="#7-数据链路控制" class="headerlink" title="7 数据链路控制"></a>7 数据链路控制</h1><h2 id="7-1-流量控制"><a href="#7-1-流量控制" class="headerlink" title="7.1 流量控制"></a>7.1 流量控制</h2><h3 id="7-1-1-停止等待流量控制"><a href="#7-1-1-停止等待流量控制" class="headerlink" title="7.1.1 停止等待流量控制"></a>7.1.1 停止等待流量控制</h3><ul><li>链路的比特长度$B = R \times \dfrac{d}{V}$<ul><li>$B$:以比特为单位的链路长度.即当比特流完全占满整个链路时,链路上的比特数量</li><li>$R$:链路的数据率,bps</li><li>$d$,链路的长度,m</li><li>$V$传播速率,m/s</li></ul></li><li>传输时间取归一化值1,并且传播时延用变量a表示,$a = \dfrac{B}{L} = \dfrac{d/V}{L/R}$</li></ul><h3 id="7-1-2-滑动窗口流量控制"><a href="#7-1-2-滑动窗口流量控制" class="headerlink" title="7.1.2 滑动窗口流量控制"></a>7.1.2 滑动窗口流量控制</h3><ul><li>捎带</li><li>数据帧</li><li>确认帧</li></ul><h2 id="7-2-差错控制"><a href="#7-2-差错控制" class="headerlink" title="7.2 差错控制"></a>7.2 差错控制</h2><h3 id="7-2-1-停止等待ARQ"><a href="#7-2-1-停止等待ARQ" class="headerlink" title="7.2.1 停止等待ARQ"></a>7.2.1 停止等待ARQ</h3><h3 id="7-2-2-返回N-ARQ"><a href="#7-2-2-返回N-ARQ" class="headerlink" title="7.2.2 返回N ARQ"></a>7.2.2 返回N ARQ</h3><h3 id="7-2-3-选择拒绝ARQ"><a href="#7-2-3-选择拒绝ARQ" class="headerlink" title="7.2.3 选择拒绝ARQ"></a>7.2.3 选择拒绝ARQ</h3><h2 id="7-3-高级数据链路控制-HDLC"><a href="#7-3-高级数据链路控制-HDLC" class="headerlink" title="7.3 高级数据链路控制(HDLC)"></a>7.3 高级数据链路控制(HDLC)</h2><h3 id="7-3-1-基本特点"><a href="#7-3-1-基本特点" class="headerlink" title="7.3.1 基本特点"></a>7.3.1 基本特点</h3><h3 id="7-3-2-帧结构"><a href="#7-3-2-帧结构" class="headerlink" title="7.3.2 帧结构"></a>7.3.2 帧结构</h3><h3 id="7-3-3-运行方式"><a href="#7-3-3-运行方式" class="headerlink" title="7.3.3 运行方式"></a>7.3.3 运行方式</h3><h1 id="8-复用"><a href="#8-复用" class="headerlink" title="8 复用"></a>8 复用</h1><h2 id="8-1-频分复用"><a href="#8-1-频分复用" class="headerlink" title="8.1 频分复用"></a>8.1 频分复用</h2><h3 id="8-1-1-特点"><a href="#8-1-1-特点" class="headerlink" title="8.1.1 特点"></a>8.1.1 特点</h3><h3 id="8-1-2-模拟载波系统"><a href="#8-1-2-模拟载波系统" class="headerlink" title="8.1.2 模拟载波系统"></a>8.1.2 模拟载波系统</h3><h3 id="8-1-3-波分复用"><a href="#8-1-3-波分复用" class="headerlink" title="8.1.3 波分复用"></a>8.1.3 波分复用</h3><h2 id="8-2-同步时分复用"><a href="#8-2-同步时分复用" class="headerlink" title="8.2 同步时分复用"></a>8.2 同步时分复用</h2><h3 id="8-2-1-特点"><a href="#8-2-1-特点" class="headerlink" title="8.2.1 特点"></a>8.2.1 特点</h3><h3 id="8-2-2-TDM链路控制"><a href="#8-2-2-TDM链路控制" class="headerlink" title="8.2.2 TDM链路控制"></a>8.2.2 TDM链路控制</h3><h3 id="8-2-3-数字载波系统"><a href="#8-2-3-数字载波系统" class="headerlink" title="8.2.3 数字载波系统"></a>8.2.3 数字载波系统</h3><h3 id="8-2-4-SONET-SDH"><a href="#8-2-4-SONET-SDH" class="headerlink" title="8.2.4 SONET/SDH"></a>8.2.4 SONET/SDH</h3><h2 id="8-3-统计时分复用"><a href="#8-3-统计时分复用" class="headerlink" title="8.3 统计时分复用"></a>8.3 统计时分复用</h2><h3 id="8-3-1-特点"><a href="#8-3-1-特点" class="headerlink" title="8.3.1 特点"></a>8.3.1 特点</h3><h3 id="8-3-2-性能"><a href="#8-3-2-性能" class="headerlink" title="8.3.2 性能"></a>8.3.2 性能</h3><h3 id="8-3-3-电缆调制解调器"><a href="#8-3-3-电缆调制解调器" class="headerlink" title="8.3.3 电缆调制解调器"></a>8.3.3 电缆调制解调器</h3><h2 id="8-4-非对称数字用户线路"><a href="#8-4-非对称数字用户线路" class="headerlink" title="8.4 非对称数字用户线路"></a>8.4 非对称数字用户线路</h2><h3 id="8-4-1-ADSL设计"><a href="#8-4-1-ADSL设计" class="headerlink" title="8.4.1 ADSL设计"></a>8.4.1 ADSL设计</h3><h3 id="8-4-2-离散多音调"><a href="#8-4-2-离散多音调" class="headerlink" title="8.4.2 离散多音调"></a>8.4.2 离散多音调</h3><h3 id="8-4-3-宽带访问配置"><a href="#8-4-3-宽带访问配置" class="headerlink" title="8.4.3 宽带访问配置"></a>8.4.3 宽带访问配置</h3><h2 id="8-5-xDSL"><a href="#8-5-xDSL" class="headerlink" title="8.5 xDSL"></a>8.5 xDSL</h2>]]></content>
      
      
      <categories>
          
          <category> 数据通信 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>vlfeat笔记</title>
      <link href="/2020/03/23/vlfeat%E7%AC%94%E8%AE%B0/"/>
      <url>/2020/03/23/vlfeat%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="cpp-Linux"><a href="#cpp-Linux" class="headerlink" title="cpp(Linux)"></a>cpp(Linux)</h1><p><a href="https://www.vlfeat.org/api/index.html">官方C API</a></p><p><a href="https://www.vlfeat.org/gcc.html">参考:https://www.vlfeat.org/gcc.html</a></p><p>向<code>/etc/ld.so.conf.d/</code>下任意一个文件(如<code>opencv.conf</code>)添加so库的路径,然后<code>sudo ldconfig</code></p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">extern</span> <span class="string">&quot;C&quot;</span> &#123;</span><br><span class="line">  <span class="meta">#<span class="meta-keyword">include</span></span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">(<span class="keyword">int</span> argc, <span class="keyword">const</span> <span class="keyword">char</span> * argv[])</span> </span>&#123;</span><br><span class="line">  VL_PRINT (<span class="string">&quot;Hello world!&quot;</span>) ;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">g++ vl_test.cpp -o <span class="built_in">test</span> -I$(VL) -L$(VL)/bin/glnxa64 -lvl</span><br></pre></td></tr></table></figure><h2 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h2><h3 id="单独使用sift模块"><a href="#单独使用sift模块" class="headerlink" title="单独使用sift模块"></a>单独使用sift模块</h3><h4 id="使用源文件"><a href="#使用源文件" class="headerlink" title="使用源文件"></a>使用源文件</h4><ol><li>保留<code>vl</code>目录下所有文件</li><li>保留<code>src</code>下的<code>sift.c</code>和<code>generic-driver.h</code></li><li>注释<code>host.h</code>部分代码(约665行)<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* Linux: limit glibc to old versions for compatibility */</span></span><br><span class="line"><span class="comment">// #if defined(VL_COMPILER_GNUC) &amp; defined(VL_OS_LINUX) &amp; ! defined(__DOXYGEN__)</span></span><br><span class="line"><span class="comment">// __asm__(&quot;.symver memcpy,memcpy@GLIBC_2.2.5&quot;);</span></span><br><span class="line"><span class="comment">// #endif</span></span><br></pre></td></tr></table></figure></li><li>在<code>vl</code>下创建一个头文件<code>fuck.h</code><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> FUCK_H</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> VL_DISABLE_AVX</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> VL_DISABLE_SSE2</span></span><br></pre></td></tr></table></figure></li><li>在<code>vl</code>下的<code>host.h</code>,<code>imopv_sse2.c</code>头部添加<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">if</span> ! defined(FUCK_H)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;fuck.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure></li><li><code>CMakeLists.txt</code>编写<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="comment"># vlfeat</span></span><br><span class="line"><span class="keyword">set</span>(vlfeat_dir /home/lynx/fuck_mount/vlfeat/vlfeat_android)</span><br><span class="line"><span class="keyword">include_directories</span>(<span class="variable">$&#123;vlfeat_dir&#125;</span>)</span><br><span class="line"><span class="keyword">aux_source_directory</span>(/home/lynx/fuck_mount/vlfeat/vlfeat_android/src vl_src)</span><br><span class="line"><span class="keyword">aux_source_directory</span>(/home/lynx/fuck_mount/vlfeat/vlfeat_android/vl vl_head)</span><br><span class="line"><span class="keyword">add_library</span>(</span><br><span class="line">  vlfeat_lib</span><br><span class="line"></span><br><span class="line">  SHARED</span><br><span class="line"></span><br><span class="line">  <span class="variable">$&#123;vl_src&#125;</span></span><br><span class="line">  <span class="variable">$&#123;vl_head&#125;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加目标文件/目标库</span></span><br><span class="line"><span class="keyword">add_executable</span>(</span><br><span class="line">  entry</span><br><span class="line"></span><br><span class="line">  source.cpp )</span><br><span class="line"></span><br><span class="line"><span class="comment"># 连接库文件</span></span><br><span class="line"><span class="keyword">target_link_libraries</span>(</span><br><span class="line">  entry</span><br><span class="line"></span><br><span class="line">  <span class="variable">$&#123;OpenCV_LIBS&#125;</span></span><br><span class="line">  <span class="comment"># $&#123;vlfeat_lib&#125;</span></span><br><span class="line">  vlfeat_lib</span><br><span class="line">)</span><br></pre></td></tr></table></figure></li></ol><h3 id="常见错误"><a href="#常见错误" class="headerlink" title="常见错误"></a>常见错误</h3><ol><li>找不到<code>libiomp5.so</code></li></ol><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt-file search libiomp5.so</span><br><span class="line">sudo apt install libomp-7-dev</span><br></pre></td></tr></table></figure><ol start="2"><li><code>cc1</code>报错:…不是目录</li></ol><p>解除挂载的硬盘,<code>make clean</code>后重新编译</p><ol start="3"><li>编译错误</li></ol><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vl&#x2F;mathop.h:92:37: error: ‘vl_infinity_d’ not specified in enclosing ‘parallel’</span><br><span class="line">   92 | #define VL_INFINITY_D (vl_infinity_d.value)</span><br></pre></td></tr></table></figure><p>解决: <code>/vl/kmeans.c</code>(<a href="https://github.com/colmap/colmap/commit/6af3d8b0048cecc3b9fc6f4e78c3214dd038180b">参考</a>)</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// #pragma omp parallel default(none)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> omp parallel \</span></span><br></pre></td></tr></table></figure><ol start="4"><li>matlab模块错误</li></ol><p>如果安装了texlive,那么makefile在检测时会把pdftex检测为matlab,直接把<code>make/matlab.mak</code>内容清空即可</p>]]></content>
      
      
      
        <tags>
            
            <tag> cmake </tag>
            
            <tag> vlfeat </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>eigen安装</title>
      <link href="/2020/03/14/eigen%E5%AE%89%E8%A3%85/"/>
      <url>/2020/03/14/eigen%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
        <tags>
            
            <tag> eigen </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>gdb笔记</title>
      <link href="/2020/03/13/gdb%E7%AC%94%E8%AE%B0/"/>
      <url>/2020/03/13/gdb%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<ul><li>设置<code>main</code>的参数<ul><li><code>set args abc 123</code></li><li><code>run &lt; input</code></li></ul></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> c </tag>
            
            <tag> gdb </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ubuntu使用midi</title>
      <link href="/2020/03/07/ubuntu%E4%BD%BF%E7%94%A8midi/"/>
      <url>/2020/03/07/ubuntu%E4%BD%BF%E7%94%A8midi/</url>
      
        <content type="html"><![CDATA[<h1 id="所需软件"><a href="#所需软件" class="headerlink" title="所需软件"></a>所需软件</h1><ul><li>qsynth:支持soundfonts</li><li>jackd:qsynth需要的驱动程序</li><li>MuseScore:播放midi文件,midi转五线谱,五线谱编辑</li><li>vmpk:midi键盘模拟器</li></ul><p><a href="https://ywnz.com/linuxjc/352.html">(待定)https://ywnz.com/linuxjc/352.html</a></p><h1 id="软件配置"><a href="#软件配置" class="headerlink" title="软件配置"></a>软件配置</h1><p><a href="https://blog.ghostry.cn/mood/688.html">参考:https://blog.ghostry.cn/mood/688.html</a></p><h2 id="MuseScore"><a href="#MuseScore" class="headerlink" title="MuseScore"></a>MuseScore</h2><ul><li>安装</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo add-apt-repository ppa:mscore-ubuntu/mscore-stable</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install musescore</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> midi </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ubuntu英雄联盟</title>
      <link href="/2020/02/27/ubuntu%E8%8B%B1%E9%9B%84%E8%81%94%E7%9B%9F/"/>
      <url>/2020/02/27/ubuntu%E8%8B%B1%E9%9B%84%E8%81%94%E7%9B%9F/</url>
      
        <content type="html"><![CDATA[<h1 id="lutris运行美服等服务器-不包含国服-韩服"><a href="#lutris运行美服等服务器-不包含国服-韩服" class="headerlink" title="lutris运行美服等服务器(不包含国服,韩服)"></a>lutris运行美服等服务器(不包含国服,韩服)</h1><ol><li>安装<code>lutris</code>,并注册账号</li></ol><p><a href="https://lutris.net/downloads/">https://lutris.net/downloads/</a></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo sudo add-apt-repository ppa:lutris-team/lutris</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install lutris</span><br></pre></td></tr></table></figure><ol start="2"><li>安装驱动</li></ol><p><a href="https://github.com/lutris/lutris/wiki/Installing-drivers">https://github.com/lutris/lutris/wiki/Installing-drivers</a></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo add-apt-repository ppa:graphics-drivers/ppa</span><br><span class="line">sudo dpkg --add-architecture i386</span><br><span class="line">sudo apt update</span><br><span class="line">sudo apt install nvidia-driver-430 libnvidia-gl-430 libnvidia-gl-430:i386</span><br></pre></td></tr></table></figure><ol start="3"><li>安装<code>wine</code></li></ol><p><a href="https://github.com/lutris/lutris/wiki/Wine-Dependencies">https://github.com/lutris/lutris/wiki/Wine-Dependencies</a></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo dpkg --add-architecture i386 </span><br><span class="line">wget -nc https://dl.winehq.org/wine-builds/winehq.key</span><br><span class="line">sudo apt-key add winehq.key</span><br><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure><p>添加PPA</p><table><thead><tr><th align="center">版本</th><th align="center">对应命令</th></tr></thead><tbody><tr><td align="center">Ubuntu 19.10</td><td align="center"><code>sudo apt-add-repository &#39;deb https://dl.winehq.org/wine-builds/ubuntu/ eoan main&#39;</code></td></tr><tr><td align="center">Ubuntu 19.04</td><td align="center"><code>sudo apt-add-repository &#39;deb https://dl.winehq.org/wine-builds/ubuntu/ disco main&#39;</code></td></tr><tr><td align="center">Ubuntu 18.10</td><td align="center"><code>sudo apt-add-repository &#39;deb https://dl.winehq.org/wine-builds/ubuntu/ cosmic main&#39;</code></td></tr><tr><td align="center">Ubuntu 18.04 Linux Mint 19.x</td><td align="center"><code>sudo apt-add-repository &#39;deb https://dl.winehq.org/wine-builds/ubuntu/ bionic main&#39;</code></td></tr><tr><td align="center">Ubuntu 16.04 Linux Mint 18.x</td><td align="center"><code>sudo apt-add-repository &#39;deb https://dl.winehq.org/wine-builds/ubuntu/ xenial main&#39;</code></td></tr></tbody></table><p>Install Wine (Ubuntu 19.10 使用 <code>wine-stable</code>):</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get install --install-recommends winehq-stable</span><br></pre></td></tr></table></figure><ol start="4"><li>安装英雄联盟</li></ol><p><a href="https://lutris.net/games/league-of-legends/">https://lutris.net/games/league-of-legends/</a></p><p>在安装过程中所有弹出的安装信息全部点取消</p><h1 id="国服"><a href="#国服" class="headerlink" title="国服"></a>国服</h1><p><a href="https://forum.ubuntu.com.cn/viewtopic.php?t=416235">forum.ubuntu</a><br><a href="https://www.ubuntukylin.com/ukylin/forum.php?mod=viewthread&tid=371">ubuntukylin</a><br><a href="https://bbs.deepin.org/forum.php?mod=viewthread&tid=11754">bbs.deepin</a></p><p><strong>TODO</strong></p>]]></content>
      
      
      
        <tags>
            
            <tag> ubuntu </tag>
            
            <tag> lol </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PyQt5笔记</title>
      <link href="/2020/02/26/PyQt5%E7%AC%94%E8%AE%B0/"/>
      <url>/2020/02/26/PyQt5%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><h2 id="报错"><a href="#报错" class="headerlink" title="报错"></a>报错</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Command &quot;python setup.py egg_info&quot; failed with error code 1 in &#x2F;tmp&#x2F;pip-install-n2fvey5k&#x2F;PyQt5&#x2F;</span><br></pre></td></tr></table></figure><ol><li>下载<code>easy_install</code>,网址<a href="https://pypi.org/project/setuptools/#files">https://pypi.org/project/setuptools/#files</a></li><li>安装:进入目录,<code>sudo python3 setup.py install</code></li><li><code>sudo easy_install -U setuptools</code></li></ol><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Command &quot;&#x2F;usr&#x2F;bin&#x2F;python3 -m pip install --ignore-installed --no-user --prefix &#x2F;tmp&#x2F;pip-build-env-y3vn2gdm --no-warn-script-location --no-binary :none: --only-binary :none: -i https:&#x2F;&#x2F;pypi.org&#x2F;simple -- &quot;sip &gt;&#x3D;5.0.1, &lt;6&quot; &quot;PyQt-builder &gt;&#x3D;1.1.0, &lt;2&quot;&quot; failed with error code 1 in None</span><br></pre></td></tr></table></figure><ol><li><code>pip3 install --upgrade pip</code></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> pip </tag>
            
            <tag> PyQt5 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python爬虫</title>
      <link href="/2020/02/11/python%E7%88%AC%E8%99%AB/"/>
      <url>/2020/02/11/python%E7%88%AC%E8%99%AB/</url>
      
        <content type="html"><![CDATA[<h1 id="requests-静态html-json"><a href="#requests-静态html-json" class="headerlink" title="requests(静态html/json)"></a>requests(静态html/json)</h1><h2 id="参数设置"><a href="#参数设置" class="headerlink" title="参数设置"></a>参数设置</h2><h3 id="cookies"><a href="#cookies" class="headerlink" title="cookies"></a>cookies</h3><h3 id="headers"><a href="#headers" class="headerlink" title="headers"></a>headers</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">headers = &#123;</span><br><span class="line">  <span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Ubuntu Chromium/79.0.3945.79 Chrome/79.0.3945.79 Safari/537.36&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;Host&#x27;</span>:<span class="string">&#x27;music.163.com&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;Referer&#x27;</span>:<span class="string">&#x27;https://music.163.com&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="selenium-phantomjs-js渲染"><a href="#selenium-phantomjs-js渲染" class="headerlink" title="selenium + phantomjs(js渲染)"></a>selenium + phantomjs(js渲染)</h1><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt install phantomjs</span><br><span class="line">python3 -m pip install selenium <span class="comment"># 不要直接用pip3</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> slenium </tag>
            
            <tag> phantomjs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>oj</title>
      <link href="/2020/02/07/oj/"/>
      <url>/2020/02/07/oj/</url>
      
        <content type="html"><![CDATA[<h1 id="树的遍历"><a href="#树的遍历" class="headerlink" title="树的遍历"></a>树的遍历</h1><h2 id="morris算法-中序遍历"><a href="#morris算法-中序遍历" class="headerlink" title="morris算法(中序遍历)"></a>morris算法(中序遍历)</h2><p>空间复杂度$O(1)$</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print_out</span><span class="params">(node *cur)</span></span>;<span class="comment">// 输出节点</span></span><br><span class="line"></span><br><span class="line"><span class="function">node *<span class="title">find_prev</span><span class="params">(node *cur)</span></span>;<span class="comment">// 寻找前驱节点</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">morris</span><span class="params">(node *root)</span> </span>&#123;</span><br><span class="line">  node *cur = root;</span><br><span class="line">  <span class="keyword">while</span> (cur != <span class="literal">NULL</span>) &#123;<span class="comment">// 没有遍历完</span></span><br><span class="line">    <span class="keyword">if</span> (cur-&gt;left == <span class="literal">NULL</span>) &#123;<span class="comment">// 1: cur没有左子节点</span></span><br><span class="line">      print_out(cur);</span><br><span class="line">      cur = cur-&gt;right;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      node *prev = find_prev(cur);</span><br><span class="line">      <span class="keyword">if</span> (prev-&gt;right == <span class="literal">NULL</span>) &#123;<span class="comment">// 2.1: prev没有右子节点</span></span><br><span class="line">        prev-&gt;right = cur;<span class="comment">// 修改树结构</span></span><br><span class="line">        cur = cur-&gt;left</span><br><span class="line">      &#125; <span class="keyword">else</span> <span class="keyword">if</span> (prev-&gt;right == cur) &#123;<span class="comment">// 2.2: prev的右子节点为cur</span></span><br><span class="line">        prev-&gt;right = <span class="literal">NULL</span>;<span class="comment">// 恢复树结构</span></span><br><span class="line">        print_out(cur);</span><br><span class="line">        cur = cur-&gt;right;</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        assert(<span class="number">0</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="图的遍历"><a href="#图的遍历" class="headerlink" title="图的遍历"></a>图的遍历</h1><h2 id="DFS"><a href="#DFS" class="headerlink" title="DFS"></a>DFS</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(node u)</span> </span>&#123;</span><br><span class="line">  u.visit = <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; u.adj.size(); i ++) &#123;</span><br><span class="line">    node v = u.adj[i];</span><br><span class="line">    <span class="keyword">if</span> (v.visit == <span class="number">0</span>) &#123;</span><br><span class="line">      dfs(v);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="BFS"><a href="#BFS" class="headerlink" title="BFS"></a>BFS</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bfs</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  q.push(s);</span><br><span class="line">  <span class="keyword">while</span> (q.empty() == <span class="number">0</span>) &#123;</span><br><span class="line">    node u = q.top();</span><br><span class="line">    q.pop();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; u.adj.size(); i ++) &#123;</span><br><span class="line">      node v = u.adj[i];</span><br><span class="line">      <span class="keyword">if</span> (v.visit == <span class="number">0</span>) &#123;</span><br><span class="line">        v.depth = u.depth + <span class="number">1</span>;</span><br><span class="line">        q.push(v);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="连通度"><a href="#连通度" class="headerlink" title="连通度"></a>连通度</h1><h2 id="tarjan算法"><a href="#tarjan算法" class="headerlink" title="tarjan算法"></a>tarjan算法</h2><p>时间复杂度$O(V+E)$</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">tarjan</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">  s.push(x);</span><br><span class="line">  depth ++;</span><br><span class="line">  dfn[x] = depth;<span class="comment">// dfs标记</span></span><br><span class="line">  low[x] = depth;<span class="comment">// tarjan标记</span></span><br><span class="line">  in_stack[x] = <span class="number">1</span>;<span class="comment">// 是否入栈</span></span><br><span class="line">  <span class="keyword">int</span> u, v;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; near[x].size(); i ++) &#123;</span><br><span class="line">    <span class="keyword">int</span> v = near[x][i].v;</span><br><span class="line">    <span class="keyword">if</span> (dfn[v] == <span class="number">0</span>) &#123;<span class="comment">// 未被标记过</span></span><br><span class="line">      tarjan(v);</span><br><span class="line">      low[x] = my_min(low[x], low[v]);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (in_stack[v] == <span class="number">1</span>) &#123;<span class="comment">// 已经入栈</span></span><br><span class="line">      low[x] = my_min(low[x], dfn[v]);<span class="comment">// my_min(low[x], low[v])l</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (dfn[x] == low[x]) &#123;<span class="comment">// 强连通分量</span></span><br><span class="line">    block ++;<span class="comment">// 连通块数目</span></span><br><span class="line">    <span class="keyword">while</span> (s.empty() == <span class="number">0</span>) &#123;</span><br><span class="line">      v = s.top();</span><br><span class="line">      in_stack[v] = <span class="number">0</span>;</span><br><span class="line">      s.pop();</span><br><span class="line">      <span class="keyword">if</span> (v == x) <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="网络流"><a href="#网络流" class="headerlink" title="网络流"></a>网络流</h1><h2 id="EK算法"><a href="#EK算法" class="headerlink" title="EK算法"></a>EK算法</h2><p>时间复杂度$O(VE^2)$</p><h2 id="dinic算法"><a href="#dinic算法" class="headerlink" title="dinic算法"></a>dinic算法</h2><p>时间复杂度$O(V^2E)$</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">path</span> &#123;</span></span><br><span class="line">  <span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">int</span> u;<span class="comment">// 起点</span></span><br><span class="line">    <span class="keyword">int</span> v;<span class="comment">// 终点</span></span><br><span class="line">    <span class="keyword">int</span> c;<span class="comment">// 容量</span></span><br><span class="line">    <span class="keyword">int</span> f;<span class="comment">// 流量</span></span><br><span class="line">    <span class="keyword">int</span> back;<span class="comment">// 反向边编号</span></span><br><span class="line"></span><br><span class="line">    path() &#123;</span><br><span class="line">      f = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">int</span> T, n, m;</span><br><span class="line"><span class="keyword">int</span> path_num;</span><br><span class="line"><span class="keyword">int</span> s, t;</span><br><span class="line"><span class="keyword">int</span> level[MAXN];<span class="comment">// 分层</span></span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; near[MAXN];<span class="comment">// 邻接表</span></span><br><span class="line">path paths[MAXM];<span class="comment">// 所有edge</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add_path</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> v, <span class="keyword">int</span> c)</span> </span>&#123;</span><br><span class="line">  <span class="comment">// 正向边</span></span><br><span class="line">  paths[path_num].u = u;</span><br><span class="line">  paths[path_num].v = v;</span><br><span class="line">  paths[path_num].c = c;</span><br><span class="line">  paths[path_num].f = <span class="number">0</span>;</span><br><span class="line">  paths[path_num].back = path_num + <span class="number">1</span>;</span><br><span class="line">  near[u].push_back(path_num);</span><br><span class="line">  path_num ++;</span><br><span class="line">  <span class="comment">// 反向边</span></span><br><span class="line">  paths[path_num].u = v;</span><br><span class="line">  paths[path_num].v = u;</span><br><span class="line">  paths[path_num].c = <span class="number">0</span>;</span><br><span class="line">  paths[path_num].f = <span class="number">0</span>;</span><br><span class="line">  paths[path_num].back = path_num - <span class="number">1</span>;</span><br><span class="line">  near[v].push_back(path_num);</span><br><span class="line">  path_num ++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> flow)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (x == t) <span class="keyword">return</span> flow;</span><br><span class="line">  <span class="keyword">int</span> total_flow = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; near[x].size(); i ++) &#123;</span><br><span class="line">    <span class="keyword">int</span> forward = near[x][i];</span><br><span class="line">    <span class="keyword">int</span> v = paths[forward].v;</span><br><span class="line">    <span class="keyword">int</span> w = paths[forward].c - paths[forward].f;</span><br><span class="line">    <span class="keyword">if</span> (w &gt; <span class="number">0</span> &amp;&amp; level[v] == level[x] + <span class="number">1</span>) &#123;</span><br><span class="line">      <span class="keyword">int</span> extend = dfs(v, my_min(w, flow - total_flow));</span><br><span class="line">      <span class="keyword">if</span> (extend &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">int</span> backward = paths[forward].back;</span><br><span class="line">        paths[forward].f += extend;</span><br><span class="line">        paths[backward].f -= extend;</span><br><span class="line">        total_flow += extend;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> total_flow;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">bfs</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt; que;</span><br><span class="line">  <span class="built_in">memset</span>(level, <span class="number">0</span>, <span class="keyword">sizeof</span>(level));</span><br><span class="line">  que.push(s);</span><br><span class="line">  level[s] = <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">while</span> (que.empty() == <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="keyword">int</span> u = que.front();</span><br><span class="line">    que.pop();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; near[u].size(); i ++) &#123;</span><br><span class="line">      <span class="keyword">int</span> forward = near[u][i];</span><br><span class="line">      <span class="keyword">int</span> v = paths[forward].v;</span><br><span class="line">      <span class="keyword">int</span> w = paths[forward].c - paths[forward].f;</span><br><span class="line">      <span class="keyword">if</span> (w &gt; <span class="number">0</span> &amp;&amp; level[v] == <span class="number">0</span>) &#123;</span><br><span class="line">        level[v] = level[u] + <span class="number">1</span>;</span><br><span class="line">        que.push(v);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> level[t];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dinic</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (bfs() == <span class="number">0</span>) <span class="keyword">break</span>;<span class="comment">// 没有增广路</span></span><br><span class="line">    ans += dfs(s, INF);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="匹配算法"><a href="#匹配算法" class="headerlink" title="匹配算法"></a>匹配算法</h1><h2 id="最大匹配-匈牙利算法"><a href="#最大匹配-匈牙利算法" class="headerlink" title="最大匹配:匈牙利算法"></a>最大匹配:匈牙利算法</h2><p>时间复杂度$O(VE)$</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; x_near[];<span class="comment">// x的邻接表</span></span><br><span class="line"><span class="keyword">int</span> y_match[];<span class="comment">// y的配对记录</span></span><br><span class="line"><span class="keyword">int</span> y_visit[];<span class="comment">// 用于dfs的标记</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">match</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i ++) &#123;<span class="comment">// n为x个数</span></span><br><span class="line">    <span class="built_in">memset</span>(y_visit, <span class="number">0</span>, <span class="keyword">sizeof</span>(y_visit));</span><br><span class="line">    <span class="keyword">if</span> (dfs(i)) &#123;</span><br><span class="line">      ans ++;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; x_near[x].size(); i ++) &#123;</span><br><span class="line">    <span class="keyword">int</span> index = x_near[x][i];</span><br><span class="line">    <span class="keyword">if</span> (y_visit[index] == <span class="number">0</span>) &#123;<span class="comment">// 没有被dfs过的y</span></span><br><span class="line">      y_visit[index] = <span class="number">1</span>;</span><br><span class="line">      <span class="keyword">if</span> (y_match[index] == <span class="number">-1</span> || dfs(y_match[index])) &#123;</span><br><span class="line">        <span class="comment">// 如果 (没有配对 || 已经配对的能够增广)</span></span><br><span class="line">        y_match[index] = x;<span class="comment">// 为x找到新的配对</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><embed src="/pdf/match.pdf#zoom=100&scrollbar=0&toolbar=0" class="tikz_sample"><h2 id="最优匹配-KM算法"><a href="#最优匹配-KM算法" class="headerlink" title="最优匹配:KM算法"></a>最优匹配:KM算法</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> n;<span class="comment">// 总数</span></span><br><span class="line"><span class="keyword">int</span> x_ex[MAXN];<span class="comment">// x的期望</span></span><br><span class="line"><span class="keyword">int</span> y_ex[MAXN];<span class="comment">// y的期望</span></span><br><span class="line"><span class="keyword">int</span> x_visit[MAXN];<span class="comment">// 每轮配对时x的标记</span></span><br><span class="line"><span class="keyword">int</span> y_visit[MAXN];<span class="comment">// 每轮配对时y的标记</span></span><br><span class="line"><span class="keyword">int</span> y_match[MAXN];<span class="comment">// 与y配对的x</span></span><br><span class="line"><span class="keyword">int</span> y_slack[MAXN];<span class="comment">// 每轮遍历x改变的期望</span></span><br><span class="line"><span class="keyword">int</span> near[MAXN][MAXN];<span class="comment">// 邻接矩阵</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">KM</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">  assert(x &gt; <span class="number">0</span>);</span><br><span class="line">  x_visit[x] = <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++) &#123;</span><br><span class="line">    <span class="keyword">if</span> (y_visit[i] == <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="keyword">int</span> gap = x_ex[x] + y_ex[i] - near[x][i];<span class="comment">// 两者的期望和与实际值之差</span></span><br><span class="line">      <span class="keyword">if</span> (gap == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="comment">// 符合要求</span></span><br><span class="line">        y_visit[i] = <span class="number">1</span>;<span class="comment">// TODO</span></span><br><span class="line">        <span class="keyword">if</span> (y_match[i] == <span class="number">0</span> || dfs(y_match[i])) &#123;</span><br><span class="line">          <span class="comment">// 没有匹配 || 可以增广</span></span><br><span class="line">          y_match[i] = x;</span><br><span class="line">          <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        y_slack[i] = my_min(y_slack[i], gap);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">KM</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="built_in">memset</span>(x_ex, <span class="number">0</span>, <span class="keyword">sizeof</span>(x_ex));</span><br><span class="line">  <span class="built_in">memset</span>(y_ex, <span class="number">0</span>, <span class="keyword">sizeof</span>(y_ex));<span class="comment">// 无期望</span></span><br><span class="line">  <span class="built_in">memset</span>(y_match, <span class="number">0</span>, <span class="keyword">sizeof</span>(y_match));<span class="comment">// 无配对</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 最大化x期望</span></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; j ++) &#123;</span><br><span class="line">      x_ex[i] = my_max(x_ex[i], near[i][j]);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 为每个x进行匹配</span></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; j ++) &#123;<span class="comment">// 初始期望为无穷</span></span><br><span class="line">      y_slack[j] = INF;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>) &#123;<span class="comment">// 直到找到配对为止</span></span><br><span class="line">      <span class="built_in">memset</span>(x_visit, <span class="number">0</span>, <span class="keyword">sizeof</span>(x_visit));</span><br><span class="line">      <span class="built_in">memset</span>(y_visit, <span class="number">0</span>, <span class="keyword">sizeof</span>(y_visit));</span><br><span class="line"></span><br><span class="line">      <span class="keyword">int</span> extend = dfs(i);</span><br><span class="line">      <span class="keyword">if</span> (extend == <span class="number">1</span>) <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 找出最小的slack</span></span><br><span class="line">      <span class="keyword">int</span> min_slack = INF;</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; j ++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (y_visit[j] == <span class="number">0</span>) &#123;<span class="comment">// 不符合要求的y(交错树之外)</span></span><br><span class="line">          min_slack = my_min(min_slack, y_slack[j]);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 调整x, y的期望</span></span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; j ++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (x_visit[j] == <span class="number">1</span>) &#123;</span><br><span class="line">          x_ex[j] -= min_slack;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (y_visit[j] == <span class="number">1</span>) &#123;</span><br><span class="line">          y_ex[j] += min_slack;</span><br><span class="line">        &#125; </span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 计算和</span></span><br><span class="line">  <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++) &#123;</span><br><span class="line">    ans += near[y_match[i]][i];</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><embed src="/pdf/KM.pdf#zoom=100&scrollbar=0&toolbar=0" class="tikz_sample"><h1 id="字符串匹配"><a href="#字符串匹配" class="headerlink" title="字符串匹配"></a>字符串匹配</h1><h2 id="KMP算法"><a href="#KMP算法" class="headerlink" title="KMP算法"></a>KMP算法</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">kmp</span><span class="params">()</span> </span>&#123;<span class="comment">// a[1], b[1]为起始项</span></span><br><span class="line">  <span class="comment">// 计算前缀表</span></span><br><span class="line">  p_len = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= m; i ++) &#123;<span class="comment">// 注意初始赋值</span></span><br><span class="line">    <span class="keyword">while</span> (p_len &amp;&amp; b[p_len + <span class="number">1</span>] != b[i]) &#123;</span><br><span class="line">      p_len = kmp[p_len];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (b[p_len + <span class="number">1</span>] == b[i]) &#123;</span><br><span class="line">      p_len ++;</span><br><span class="line">      kmp[i] = p_len;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 进行匹配</span></span><br><span class="line">  p_len = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++) &#123;<span class="comment">// 注意初始赋值</span></span><br><span class="line">    <span class="keyword">while</span> (p_len &amp;&amp; b[p_len + <span class="number">1</span>] != a[i]) &#123;</span><br><span class="line">      p_len = kmp[p_len];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (b[p_len + <span class="number">1</span>] == a[i]) &#123;</span><br><span class="line">      p_len ++;</span><br><span class="line">      <span class="keyword">if</span> (p_len == m) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, i - p_len + <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> bfs </tag>
            
            <tag> dfs </tag>
            
            <tag> dijkstra算法 </tag>
            
            <tag> dinic算法 </tag>
            
            <tag> ek算法 </tag>
            
            <tag> floyd算法 </tag>
            
            <tag> km算法 </tag>
            
            <tag> kmp算法 </tag>
            
            <tag> kruskal算法 </tag>
            
            <tag> morris算法 </tag>
            
            <tag> prim算法 </tag>
            
            <tag> tarjan算法 </tag>
            
            <tag> 树的遍历 </tag>
            
            <tag> 匈牙利算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>scrapy笔记</title>
      <link href="/2020/01/09/scrapy%E7%AC%94%E8%AE%B0/"/>
      <url>/2020/01/09/scrapy%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo pip3 install scrapy</span><br></pre></td></tr></table></figure><h2 id="报错"><a href="#报错" class="headerlink" title="报错"></a>报错</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">pyopenssl 19.1.0 has requirement cryptography&gt;&#x3D;2.8, but you&#39;ll have cryptography 2.3 which is incompatible.</span><br></pre></td></tr></table></figure><h1 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">scrapy startproject project_name</span><br></pre></td></tr></table></figure><p>将会创建一个<code>project_name</code>文件夹,文件夹结构</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">project_name&#x2F;-+-project_name&#x2F;-+-spiders&#x2F;---__init__.py</span><br><span class="line">              |               |</span><br><span class="line">              |               +-items.py</span><br><span class="line">              |               |</span><br><span class="line">              |               +-middlewares.py</span><br><span class="line">              |               |</span><br><span class="line">              |               +-pipelines.py</span><br><span class="line">              |               |</span><br><span class="line">              |               +-settings.py</span><br><span class="line">              |               |</span><br><span class="line">              |               &#96;-__init__.py</span><br><span class="line">              |</span><br><span class="line">              &#96;-scrapy.cfg</span><br></pre></td></tr></table></figure><h2 id="构建item模型"><a href="#构建item模型" class="headerlink" title="构建item模型"></a>构建item模型</h2><p><code>project_name/items.py</code></p><h2 id="制作爬虫"><a href="#制作爬虫" class="headerlink" title="制作爬虫"></a>制作爬虫</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">scrapy genspider fuck <span class="string">&quot;itcast.cn&quot;</span> <span class="comment"># 示例网站</span></span><br></pre></td></tr></table></figure><p>将在<code>project_name/spiders/</code>下创建<code>fuck.py</code>并初始化代码框架</p>]]></content>
      
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微电子期末</title>
      <link href="/2020/01/04/%E5%BE%AE%E7%94%B5%E5%AD%90%E6%9C%9F%E6%9C%AB/"/>
      <url>/2020/01/04/%E5%BE%AE%E7%94%B5%E5%AD%90%E6%9C%9F%E6%9C%AB/</url>
      
        <content type="html"><![CDATA[<h1 id="半导体物理基础"><a href="#半导体物理基础" class="headerlink" title="半导体物理基础"></a>半导体物理基础</h1><h3 id="半导体材料"><a href="#半导体材料" class="headerlink" title="半导体材料"></a>半导体材料</h3><ul><li>导体:$\rho &lt; 10^{-4}\Omega\cdot cm$</li><li>绝缘体:$\rho &gt; 10^{9}\Omega\cdot cm$</li></ul><h2 id="本征半导体-空穴及其导电作用"><a href="#本征半导体-空穴及其导电作用" class="headerlink" title="本征半导体,空穴及其导电作用"></a>本征半导体,空穴及其导电作用</h2><ul><li><p>载流子:可以自由移动的带电粒子</p></li><li><p>电导率:与材料单位体积中所含载流子数有关,载流子浓度越高,电导率越高</p></li><li><p>本征激发:当半导体受热或光照激发时,某些电子从外界获得足够的能量而挣脱共价键的束缚,离开原子成为<strong>自由电子</strong>,同时在共价键中留下相同数量的<strong>空穴</strong></p></li><li><p>空穴:共价键中的空位</p></li><li><p>电子空穴对:由热激发而产生的自由电子和空穴对</p></li></ul><p>半导体的重要特性</p><ul><li>在本征半导体中自由电子和空穴总是成对产生,其自由电子-空穴对随温度的增高而显著增加</li><li>空穴的导电作用</li></ul><p>本证半导体的缺点:载流子少,导电性差,温度稳定性差</p><h2 id="杂质半导体"><a href="#杂质半导体" class="headerlink" title="杂质半导体"></a>杂质半导体</h2><p>参入杂质的本征半导体称为杂质半导体</p><h3 id="P型半导体"><a href="#P型半导体" class="headerlink" title="P型半导体"></a>P型半导体</h3><ul><li><p>参入3价杂质元素(如<strong>硼,镓和铟</strong>)的半导体</p></li><li><p><strong>空穴(p)**是多数载流子(**多子</strong>),它主要由掺杂形成;<strong>自由电子(n)**是少数载流子(**少子</strong>),由热激发形成</p></li><li><p>空穴很容易俘获电子,使杂质原子成为<strong>负离子</strong>.3价杂质因而也称为<strong>受主杂质($N_A$)</strong><br>$$ N_A + n = p $$</p></li></ul><h3 id="N型半导体"><a href="#N型半导体" class="headerlink" title="N型半导体"></a>N型半导体</h3><ul><li><p>参入5价杂质元素(如<strong>磷</strong>)的半导体</p></li><li><p>**自由电子(n)**是多数载流子,主要由杂质原子提供;**空穴(p)**是少数载流子,由热激发形成</p></li><li><p>提供自由电子的5价杂质原子因带正电荷而成为<strong>正离子</strong>.因此5价杂质原子也称为<strong>施主杂质($N_D$)</strong><br>$$ n = p + N_D $$</p></li></ul><h2 id="载流子的漂移与扩散"><a href="#载流子的漂移与扩散" class="headerlink" title="载流子的漂移与扩散"></a>载流子的漂移与扩散</h2><ul><li><p>漂移电流:在电场作用下,载流子(自由电子/空穴)在电场作用下的漂移运动形成的电流</p></li><li><p>扩散电流:因浓度差,载流子从浓度高处向浓度低处扩散运动,形成的电流</p></li></ul><h2 id="PN结"><a href="#PN结" class="headerlink" title="PN结"></a>PN结</h2><p>对于P型半导体和N型半导体的结合面,离子薄层形成的<strong>空间电荷区</strong>称为<strong>PN结</strong></p><p>在空间电荷区,由于缺少多子,所以也称<strong>耗尽层</strong></p><h3 id="PN结的单向导电性"><a href="#PN结的单向导电性" class="headerlink" title="PN结的单向导电性"></a>PN结的单向导电性</h3><ul><li><p>当外加电压使PN结中<strong>P</strong>区的电位高于<strong>N</strong>区的电位,称为加<strong>正向电压</strong>,简称<strong>正偏</strong>;反之称为加<strong>反向电压</strong>,简称<strong>反偏</strong></p></li><li><p>PN结加正向电压时,呈现低电阻,具有较大的<strong>正向扩散电流</strong></p></li><li><p>PN结加反向电压时,呈现高电阻,具有很小的<strong>反向漂移电流</strong></p></li><li><p>PN结$V$-$I$特性表达式:<strong>$i_D=I_S(e^{v_D/V_r}-1)$</strong><br>$I_S$:反向饱和电流<br>$V_T$:温度的电压当量.在常温下$V_T=\dfrac{kT}{q}=26mV$</p></li></ul><h3 id="PN结的反向击穿"><a href="#PN结的反向击穿" class="headerlink" title="PN结的反向击穿"></a>PN结的反向击穿</h3><ul><li>电击穿(可逆)<ul><li>雪崩击穿:有正温度系数</li><li>齐纳击穿:有负温度系数</li></ul></li><li>热击穿(不可逆)</li></ul><h3 id="PN结的电容效应"><a href="#PN结的电容效应" class="headerlink" title="PN结的电容效应"></a>PN结的电容效应</h3><ul><li><p>扩散电容$C_D$:<strong>TODO</strong></p></li><li><p>势垒电容$C_B$:<strong>TODO</strong></p></li></ul><h1 id="二极管"><a href="#二极管" class="headerlink" title="二极管"></a>二极管</h1><h2 id="二极管的-V-I-特性"><a href="#二极管的-V-I-特性" class="headerlink" title="二极管的$V$-$I$特性"></a>二极管的$V$-$I$特性</h2><p>二极管的伏安特性曲线可表示:$i_D=I_S(e^{v_D/V_T}-1)$</p><ul><li>硅二极管的死区电压$V_{th}=0.5-0.8V$左右</li><li>锗二极管的死区电压$V_{th}=0.1-0.3V$左右</li></ul><h2 id="二极管的主要参数"><a href="#二极管的主要参数" class="headerlink" title="二极管的主要参数"></a>二极管的主要参数</h2><ul><li><p>最大整流电流$I_F$</p></li><li><p>反向击穿电压$V_{BR}$和最大反向工作电压$V_{RM}$:实际工作时,最大反向工作电压一般只按反向击穿电压的一半计算</p></li><li><p>反向电流$I_R$在室温下,最大反向工作电压下的反向电流值.硅二极管的反向电流一般在$nA$级;锗二极管在$\mu A$级</p></li><li><p>极间电容$C_d=C_B+C_D$(<strong>TODO</strong>)</p></li><li><p>反向恢复时间$T_{RR}$</p></li><li><p>正向压降$V_F$:*二极管能够导通的正向最低电压.*硅二极管约$0.6-0.8V$,锗二极管约$0.2-0.3V$</p></li></ul><h2 id="二极管电路的简化模型分析方法"><a href="#二极管电路的简化模型分析方法" class="headerlink" title="二极管电路的简化模型分析方法"></a>二极管电路的简化模型分析方法</h2><h3 id="理想模型"><a href="#理想模型" class="headerlink" title="理想模型"></a>理想模型</h3><h3 id="恒压降模型"><a href="#恒压降模型" class="headerlink" title="恒压降模型"></a>恒压降模型</h3><p>管压降恒定:</p><ul><li>硅管$0.7V$ </li><li>锗管$0.3V$</li></ul><h3 id="折线模型"><a href="#折线模型" class="headerlink" title="折线模型"></a>折线模型</h3><p>硅管:</p><ul><li>门槛电压$V_{th}=0.5V$</li><li>导通电流为1$mA$时,管压降为$0.7V$</li><li>$r_D=200\Omega$</li></ul><h3 id="小信号模型"><a href="#小信号模型" class="headerlink" title="小信号模型"></a>小信号模型</h3><p>常温下微变电阻$(300K)r_d=\dfrac{V_T}{I_D}=\dfrac{26(mV)}{I_D}$</p><h3 id="模型分析法应用举例"><a href="#模型分析法应用举例" class="headerlink" title="模型分析法应用举例"></a>模型分析法应用举例</h3><h4 id="限幅电路"><a href="#限幅电路" class="headerlink" title="限幅电路"></a>限幅电路</h4><h4 id="开关电路"><a href="#开关电路" class="headerlink" title="开关电路"></a>开关电路</h4><h4 id="低电压稳压电路"><a href="#低电压稳压电路" class="headerlink" title="低电压稳压电路"></a><em>低电压稳压电路</em></h4><h4 id="小信号工作情况分析"><a href="#小信号工作情况分析" class="headerlink" title="小信号工作情况分析"></a>小信号工作情况分析</h4><p><strong>TODO</strong></p><h4 id="齐纳二极管"><a href="#齐纳二极管" class="headerlink" title="齐纳二极管"></a><em>齐纳二极管</em></h4><h1 id="半导体三极管"><a href="#半导体三极管" class="headerlink" title="半导体三极管"></a>半导体三极管</h1><h2 id="三极管的结构和符号"><a href="#三极管的结构和符号" class="headerlink" title="三极管的结构和符号"></a>三极管的结构和符号</h2><ul><li>集电极$c$ollector,集电区,集电结</li><li>基极$b$ase,基区</li><li>发射极$e$mitter,发射区,发射结</li></ul><h2 id="放大状态下三极管的工作原理"><a href="#放大状态下三极管的工作原理" class="headerlink" title="放大状态下三极管的工作原理"></a>放大状态下三极管的工作原理</h2><p>实现放大的外部条件:发射结正偏,集电结反偏</p><p>实现放大的内部条件:发射区杂质浓度远大于基区杂质浓度,且基区很薄</p><p>共基极直流放大系数$\bar{\alpha}=\dfrac{\text{传输到集电极的电流}}{\text{发射极注入电流}}=\dfrac{I_{C}-I_{CBO}}{I_{E}}\approx\dfrac{I_C}{I_E}$</p><p>共射极直流放大系数$\bar{\beta}=\dfrac{\bar{\alpha}}{1-\bar{\alpha}}$</p><p>反向饱和电流/穿透电流$I_{CEO}=(1+\bar{\beta})I_{CBO}$</p><p>当$I_C &gt;&gt; I_{CEO}$时,忽略$I_{CEO}$,则$\bar{\beta}\approx\dfrac{I_C}{I_B}$</p><h2 id="三极管的三种组态"><a href="#三极管的三种组态" class="headerlink" title="三极管的三种组态"></a>三极管的三种组态</h2><ul><li>共发射极接法:CE</li><li>共基极接法:CB</li><li>共集电极接法:CC</li></ul><h2 id="BJT的-I-V-特性曲线"><a href="#BJT的-I-V-特性曲线" class="headerlink" title="BJT的$I$-$V$特性曲线"></a>BJT的$I$-$V$特性曲线</h2><h3 id="输入特性曲线"><a href="#输入特性曲线" class="headerlink" title="输入特性曲线"></a>输入特性曲线</h3><p>$$i_B=f(v_{BE})|_{v_{CE}=const}$$</p><ul><li>死区</li><li>非线性区</li><li>近似线性区</li></ul><h3 id="输出特性曲线"><a href="#输出特性曲线" class="headerlink" title="输出特性曲线"></a>输出特性曲线</h3><p>$$i_C=f(v_{CE})|_{i_B=const}$$</p><ul><li><p><strong>饱和区</strong>:$i_C$明显受$v_{CE}$控制的区域,该区域内,一般$v_{CE} &lt; 0.7V$(硅管).此时,发射结正偏,集电结正偏或反偏电压很小</p></li><li><p>截止区:$i_C$接近0的区域,相当$i_B=0$的曲线的下方.此时,$v_{BE}$小于死区电压</p></li><li><p>放大区:$i_C$平行于$v_{CE}$轴的区域,曲线基本平行等距.此时,发射结正偏,集电结反偏</p></li><li><p>Early效应<br>输出特性比较平坦的部分随着$V_{CE}$的增加略向上倾斜</p></li></ul><h2 id="BJT的主要参数"><a href="#BJT的主要参数" class="headerlink" title="BJT的主要参数"></a>BJT的主要参数</h2><ol><li><p>电流放大系数</p><ul><li><p>共发射极直流电流放大系数$\bar{\beta}=\dfrac{I_C-I_{CEO}}{I_B}\approx\dfrac{I_C}{I_B}|_{v_{CE}=const}$</p></li><li><p>共发射极交流电流放大系数$\beta=\dfrac{\Delta I_C}{\Delta I_B}|_{v_{CE}=const}$</p></li><li><p>共基极直流电流放大系数$\bar{\alpha}=\dfrac{I_C-I_{CBO}}{I_E}\approx\dfrac{I_C}{I_E}$</p></li><li><p>共基极交流电流放大系数$\alpha=\dfrac{\Delta I_C}{\Delta I_E}|_{v_{CB}=const}$<br>当$I_{CBO}$和$I_{CEO}$很小时,$\bar{\alpha}\approx\alpha,\bar{\beta}\approx\beta$,可以不加区分</p></li></ul></li><li><p>极间反向电流</p></li><li><p>极限参数</p><ul><li>集电极最大允许电流$I_{CM}$</li><li>集电极最大允许功率损耗$P_{CM}=I_CV_{CE}$</li><li>反向击穿电压</li><li>$V_{(BR)CBO}$:发射极开路时的集电结反向击穿电压</li><li>$V_{(BR)EBO}$:集电极开路时的发射结的反向击穿电压</li><li>$V_{(BR)CEO}$:基极开路时的集电极和发射极间的击穿电压</li></ul></li></ol><h2 id="温度对BJT参数及特性的影响"><a href="#温度对BJT参数及特性的影响" class="headerlink" title="温度对BJT参数及特性的影响"></a><em>温度对BJT参数及特性的影响</em></h2><h3 id="温度对BJT参数的影响"><a href="#温度对BJT参数的影响" class="headerlink" title="温度对BJT参数的影响"></a><em>温度对BJT参数的影响</em></h3><h3 id="温度对BJT特性曲线的影响"><a href="#温度对BJT特性曲线的影响" class="headerlink" title="温度对BJT特性曲线的影响"></a><em>温度对BJT特性曲线的影响</em></h3><h1 id="三极管放大电路"><a href="#三极管放大电路" class="headerlink" title="三极管放大电路"></a>三极管放大电路</h1><h2 id="共射极放大电路的工作原理"><a href="#共射极放大电路的工作原理" class="headerlink" title="共射极放大电路的工作原理"></a>共射极放大电路的工作原理</h2><h3 id="静态"><a href="#静态" class="headerlink" title="静态"></a>静态</h3><p><strong>静态工作点(TODO)</strong></p><h3 id="动态"><a href="#动态" class="headerlink" title="动态"></a>动态</h3><h2 id="BJT放大电路的图解分析法"><a href="#BJT放大电路的图解分析法" class="headerlink" title="BJT放大电路的图解分析法"></a>BJT放大电路的图解分析法</h2><h3 id="静态工作点的图解分析"><a href="#静态工作点的图解分析" class="headerlink" title="静态工作点的图解分析"></a>静态工作点的图解分析</h3><ul><li>负载线<ul><li>输入:$V_{BE}=V_{BB}-i_BR_b$</li><li>输出:$V_{CE}=V_{CC}-i_CR_c$</li></ul></li></ul><h3 id="动态工作情况的图解分析"><a href="#动态工作情况的图解分析" class="headerlink" title="动态工作情况的图解分析"></a>动态工作情况的图解分析</h3><h3 id="静态工作点对波形失真的影响"><a href="#静态工作点对波形失真的影响" class="headerlink" title="静态工作点对波形失真的影响"></a>静态工作点对波形失真的影响</h3><h3 id="放大电路的动态范围"><a href="#放大电路的动态范围" class="headerlink" title="放大电路的动态范围"></a>放大电路的动态范围</h3><h2 id="温度对工作点的影响-定性"><a href="#温度对工作点的影响-定性" class="headerlink" title="温度对工作点的影响(定性)"></a>温度对工作点的影响(定性)</h2><ol><li>温度变化对$I_{CBO}$的影响</li></ol><p>$I_{CBO}=I_{CBO(T_0=25^{\circ}C)}\cdot e^{k(T-T_0)}$</p><p>温度$T$上升$\to$输出特性曲线上移</p><ol start="2"><li>温度变化对输入特性曲线的影响</li></ol><p>$V_{BE}=V_{BE(T_0=25^{\circ}C)}-(T-T_0)\times2.2\times10^{-3}V$</p><p>温度$T$上升$\to$输入特性曲线左移</p><ol start="3"><li>温度变化对$\beta$的影响</li></ol><p>温度每升高1$^{\circ}C,\beta$要增加$0.5\%\sim1.0\%$</p><p>温度$T$上升$\to$输出特性曲线族间距增大</p><h2 id="基极分压式射极偏置电路"><a href="#基极分压式射极偏置电路" class="headerlink" title="基极分压式射极偏置电路"></a>基极分压式射极偏置电路</h2><ul><li>工作原理</li></ul><p><strong>TODO</strong></p><h1 id="场效应管"><a href="#场效应管" class="headerlink" title="场效应管"></a>场效应管</h1><h2 id="场效应管的分类"><a href="#场效应管的分类" class="headerlink" title="场效应管的分类"></a>场效应管的分类</h2><ol><li>MOSFET(IGFET)绝缘栅型<ol><li>增强型<ul><li>N沟道</li><li>P沟道</li></ul></li><li>耗尽型<ul><li>N沟道</li><li>P沟道</li></ul></li></ol></li><li>JFET结型(耗尽型)<ol><li>N沟道</li><li>P沟道</li></ol></li></ol><p>耗尽型:场效应管没有加偏置电压时,就有导电沟道存在<br>增强型:场效应管没有加偏置电压时,没有导电沟道</p><h3 id="结构"><a href="#结构" class="headerlink" title="结构"></a>结构</h3><ul><li>源极$s$ource</li><li>栅极$g$ate</li><li>漏极$d$rain</li></ul><h3 id="特性曲线"><a href="#特性曲线" class="headerlink" title="特性曲线"></a>特性曲线</h3><h4 id="输出特性曲线-1"><a href="#输出特性曲线-1" class="headerlink" title="输出特性曲线"></a>输出特性曲线</h4><ol><li>截止区</li><li>可变电阻区(非饱和区)</li><li>饱和区(恒流区,放大区):必须让FET工作在饱和区(放大区)才有放大作用</li></ol><ul><li>N沟道:$v_{GS},v_{DS}\uparrow,i_D\uparrow$</li><li>P沟道:$v_{GS},v_{DS}\downarrow,|i_D|\uparrow$</li></ul><h4 id="转移特性曲线"><a href="#转移特性曲线" class="headerlink" title="转移特性曲线"></a>转移特性曲线</h4><ul><li>N沟道:$v_{GS},i_D\uparrow$</li><li>P沟道:$v_{GS},|i_D|\uparrow$</li></ul><h3 id="主要参数"><a href="#主要参数" class="headerlink" title="主要参数"></a>主要参数</h3><ol><li>$V_T$:(增强型参数)开启电压<br>$V_{TN}$:N沟道增强型开启电压</li><li>$V_P$:(耗尽型/结型参数)夹断电压</li><li>饱和漏电流$I_{DSS}$(耗尽型):在$V_{GS}=0$的情况下,当$V_{DS} &gt; V_P$时的漏极电流称为<strong>饱和漏极电流</strong>.通常令$|V_{DS}|=10V,V_{GS}=0V$时测出的$i_D$就是$I_{DSS}$.在转移特性上,就是$V_{GS}=0$时的漏极电流</li><li>直流输入电阻$R_{GS}$:在漏源之间短路的条件下,漏源之间加一定电压时的栅源直流电阻就是直流输入电阻</li></ol><h2 id="N沟道增强型MOSFET"><a href="#N沟道增强型MOSFET" class="headerlink" title="N沟道增强型MOSFET"></a>N沟道增强型MOSFET</h2><h3 id="工作原理"><a href="#工作原理" class="headerlink" title="工作原理"></a>工作原理</h3><ol><li><p>$V_{GS}$对沟道的控制作用</p><ul><li>当$V_{GS}\le0$时<br>无导电沟道.$d,s$间加电压时,也无电流产生</li><li>当$0 &lt; V_{GS} &lt; V_{TN}$时<br>产生电场,但未形成导电沟道(反型层),$d,s$间加电压后,没有电流产生</li><li>当$V_{GS} &gt; V_{TN}$时<br>在电场作用下产生导电沟道,$d,s$间加电压后,将有电流产生.$V_{GS}$越大,导电沟道越厚</li></ul></li><li><p>$V_{DS}$对沟道的控制作用<br>当$V_{GS}$一定($V_{GS} &gt; V_{TN}$)时</p><ul><li>$V_{DS}$增加$\to I_D$增加$\to$沟道电位梯度增加$\to$靠近漏极$d$处的电位升高$\to(d)$电场强度减小$\to(d)$沟道变薄</li><li>当$V_{DS}$增加到使$V_{GD}=V_{TN}$时,在紧靠漏极处出现预夹断</li><li>预夹断后,$V_{DS}$增加$\to$夹断区延长$\to$沟道电阻增加$\to I_D$基本不变</li></ul></li><li><p>$V_{DS}$和$V_{GS}$同时作用时<br>$V_{DS}$一定,$V_{GS}$变化时,给定一个$V_{GS}$,就有一条不同的$i_D$-$V_{DS}$曲线</p></li></ol><h2 id="N沟道耗尽型MOSFET"><a href="#N沟道耗尽型MOSFET" class="headerlink" title="N沟道耗尽型MOSFET"></a>N沟道耗尽型MOSFET</h2><h2 id="P沟道MOSFET"><a href="#P沟道MOSFET" class="headerlink" title="P沟道MOSFET"></a><em>P沟道MOSFET</em></h2><h2 id="沟道长度调制等几种效应"><a href="#沟道长度调制等几种效应" class="headerlink" title="沟道长度调制等几种效应"></a>沟道长度调制等几种效应</h2><ol><li><p>沟道长度调制效应<br>饱和区的曲线并不是平坦的</p></li><li><p>衬底调制效应(体效应)</p><ul><li>衬底未与源极并接时,衬底与源极间的偏压$V_{BS}$将影响实际的开启/夹断电压和转移特性<ul><li>阈值电压升高</li><li><strong>TODO</strong></li></ul></li><li>为保证导电沟道与衬底之间的PN结反偏,要求<ul><li>N沟道:$V_{BS}\le0$</li><li>P沟道:$V_{BS}\ge0$</li></ul></li></ul></li><li><p>击穿效应</p><ol><li>漏衬击穿:外加的漏源电压过高,将导致漏极到衬底的PN结击穿</li><li>栅极击穿:栅极电压过高,绝缘层击穿<ul><li>通常在MOS管的栅源间接入双向稳压管,限制栅极电压</li></ul></li></ol></li></ol><h2 id="JFET的结构和工作原理"><a href="#JFET的结构和工作原理" class="headerlink" title="JFET的结构和工作原理"></a>JFET的结构和工作原理</h2><h3 id="工作原理-1"><a href="#工作原理-1" class="headerlink" title="工作原理"></a>工作原理</h3><ol><li><p>$V_{GS}$对沟道的控制作用<br>当$V_{GS} &lt; 0$时:PN结反偏$\to$耗尽层加厚$\to$沟道变窄<br>$V_{GS}$继续减小,沟道继续变窄<br>当沟道夹断时,对应的栅源电压$V_{GS}$称为<strong>夹断电压$V_P$或$V_{GS(off)}$</strong><br>对于N沟道的JFET,$V_P &lt; 0$</p></li><li><p>$V_{DS}$对沟道的控制作用<br>当$V_{GS}=0$时:$V_{DS}$增加$\to g,d$间PN结的反向电压增加,使靠近漏极处的耗尽层加宽,沟道变窄,从上至下呈楔形分布<br>当$V_{DS}$增加到使$V_{GD}=V_P$时,在紧靠漏极处出现预夹断.此时$V_{DS}$增加$\to$夹断区延长$\to$沟道电阻增加$\to i_D$基本不变</p></li><li><p>$V_{GS}$和$V_{DS}$同时作用时<br>当$V_P &lt; V_{GS} &lt; 0$时,导电沟道更容易夹断,对于同样的$V_{DS},i_D$的值比$V_{GS}=0$时的值要小<br>在预夹断处:$V_{GD}=V_{GS}-V_{DS}=V_P$</p></li></ol><h2 id="FET和BJT重要特性的比较"><a href="#FET和BJT重要特性的比较" class="headerlink" title="FET和BJT重要特性的比较"></a>FET和BJT重要特性的比较</h2><ol><li><p>对应关系</p></li><li><p>输入对输出的控制</p><ul><li>BJT:基-射极间电压$V_{BE}$控制集电极电流$i_C$</li><li>MOS管:栅源电压$V_{GS}$控制漏极$i_D$</li><li>在放大区域内,MOS管的$i_D$与$V_{GS}$之间是平方关系,而BJT的$i_C$与$V_{BE}$之间是指数关系.所以通常BJT的跨导要大于MOS管的跨导</li><li>因MOS管的栅极电流$i_G=0$而BJT的基极电流$i_B\not=0$,且电压$V_{BE}$首先影响$i_B$(或$i_E$)然后通过$i_B$()实现对$i_E$()的控制,故常将BJT称为电流控制器件,MOS管称为电压控制器件</li></ul></li><li><p>跨导:<strong>TODO</strong></p></li><li><p>输出电阻:<strong>TODO</strong></p></li><li><p>MOS管的$K_n$与BJT的$\beta$或$\alpha$:<strong>TODO</strong></p></li></ol><h1 id="场效应管放大电路"><a href="#场效应管放大电路" class="headerlink" title="场效应管放大电路"></a>场效应管放大电路</h1><h2 id="基本共源极放大电路的组成"><a href="#基本共源极放大电路的组成" class="headerlink" title="基本共源极放大电路的组成"></a>基本共源极放大电路的组成</h2><p><strong>TODO</strong></p><h2 id="基本共源放大电路的工作原理"><a href="#基本共源放大电路的工作原理" class="headerlink" title="基本共源放大电路的工作原理"></a>基本共源放大电路的工作原理</h2><p><strong>TODO</strong></p><h2 id="用图解方法确定静态工作点-Q"><a href="#用图解方法确定静态工作点-Q" class="headerlink" title="用图解方法确定静态工作点$Q$"></a>用图解方法确定静态工作点$Q$</h2><p><strong>TODO</strong></p><h1 id="放大电路模型"><a href="#放大电路模型" class="headerlink" title="放大电路模型"></a>放大电路模型</h1><h2 id="信号"><a href="#信号" class="headerlink" title="信号"></a>信号</h2><ul><li>信号:信息的载体</li><li>电信号:用电量来描述信息的变化</li></ul><h2 id="模拟信号和数字信号"><a href="#模拟信号和数字信号" class="headerlink" title="模拟信号和数字信号"></a>模拟信号和数字信号</h2><ul><li>时间连续,数值连续:模拟信号</li><li>事件离散,数值连续:AD(analog,digital)转换新号</li><li>时间连续,数值离散:DA转换新号</li><li>事件离散,数值离散:数字信号</li></ul><h2 id="放大电路"><a href="#放大电路" class="headerlink" title="放大电路"></a>放大电路</h2><h2 id="放大电路的符号及模拟信号放大"><a href="#放大电路的符号及模拟信号放大" class="headerlink" title="放大电路的符号及模拟信号放大"></a>放大电路的<strong>符号</strong>及模拟信号放大</h2><h2 id="放大电路模型-1"><a href="#放大电路模型-1" class="headerlink" title="放大电路模型"></a>放大电路模型</h2><h3 id="电压放大模型"><a href="#电压放大模型" class="headerlink" title="电压放大模型"></a>电压放大模型</h3><p>$A_v=\dfrac{v_o}{v_i}=A_{vo}\dfrac{R_L}{R_o+R_L}$</p><ol><li>负载大小会影响增益的大小</li><li>减小负载的影响</li><li>减小输入回路对信号的衰减影响</li></ol><h3 id="电流放大模型"><a href="#电流放大模型" class="headerlink" title="电流放大模型"></a>电流放大模型</h3><p>$A_i=\dfrac{i_o}{i_i}=A_{is}\dfrac{R_o}{R_o+R_L}$</p><ol><li>减小负载的影响</li><li>减小对信号源的衰减</li></ol><h3 id="互阻放大模型"><a href="#互阻放大模型" class="headerlink" title="互阻放大模型"></a>互阻放大模型</h3><p><strong>TODO</strong></p><h3 id="互导放大模型"><a href="#互导放大模型" class="headerlink" title="互导放大模型"></a>互导放大模型</h3><p><strong>TODO</strong></p><h3 id="隔离放大电路模型"><a href="#隔离放大电路模型" class="headerlink" title="隔离放大电路模型"></a>隔离放大电路模型</h3><p><strong>TODO</strong></p><h2 id="放大电路的主要性能指标"><a href="#放大电路的主要性能指标" class="headerlink" title="放大电路的主要性能指标"></a>放大电路的主要性能指标</h2><h3 id="输入电阻"><a href="#输入电阻" class="headerlink" title="输入电阻"></a>输入电阻</h3><p>$R_i=\dfrac{v_i}{i_i}$</p><p><strong>决定了放大电路从信号源吸取信号幅值的大小</strong></p><ul><li>电压放大和互导放大-&gt;输入信号为电压-&gt; $R_i$大</li><li>电流放大和互阻放大-&gt;输入信号为电流-&gt; $R_i$小</li></ul><h3 id="输出电阻"><a href="#输出电阻" class="headerlink" title="输出电阻"></a>输出电阻</h3><p>$R_o=\dfrac{v_t}{i_t}|_{v_s=0,R_L=\infty}$</p><p><strong>决定了放大电路带负载的能力</strong></p><ul><li>电压放大和互阻放大-&gt;输出信号为电压-&gt; $R_o$小</li><li>电流放大和互导放大-&gt;输出信号为电流-&gt; $R_o$大</li></ul><h3 id="增益"><a href="#增益" class="headerlink" title="增益"></a>增益</h3><ul><li>电压增益$A_v=\dfrac{v_o}{v_i}$</li><li>电流增益$A_i=\dfrac{i_o}{i_i}$</li><li>互阻增益$A_r=\dfrac{v_o}{i_i}$</li><li>互导增益$A_g=\dfrac{i_o}{v_i}$</li></ul><p>其中$A_v,A_i$常用分贝$(dB)$表示</p><ul><li>电压增益$=20\lg|A_v|$</li><li>电流增益$=20\lg|A_i|$</li><li>功率增益$=10\lg A_p$</li></ul><h3 id="频率响应-基本概念-及带宽-识图"><a href="#频率响应-基本概念-及带宽-识图" class="headerlink" title="频率响应(基本概念)及带宽(识图)"></a>频率响应(<strong>基本概念</strong>)及带宽(<strong>识图</strong>)</h3><ul><li><p>频率响应:在输入正弦信号下,输出随输入信号频率连续变化的稳态响应</p></li><li><p>频率失真</p><ul><li>幅度失真:对不同频率信号增益不同产生的失真</li><li>相位失真:对不同频率的信号相移不同产生的失真</li></ul></li></ul><h3 id="非线性失真"><a href="#非线性失真" class="headerlink" title="非线性失真"></a>非线性失真</h3><p>由元件非线性特性引起的失真<br>在频谱图上表现为新的频率分量产生</p><ul><li>频谱图</li></ul><h1 id="运算放大器"><a href="#运算放大器" class="headerlink" title="运算放大器"></a>运算放大器</h1><ul><li><strong>符号</strong></li><li><strong>电路模型</strong></li></ul><h2 id="集成电路运算放大器"><a href="#集成电路运算放大器" class="headerlink" title="集成电路运算放大器"></a>集成电路运算放大器</h2><ul><li>当$A_{V_O}(v_P-v_N)\ge V_+$时,$v_O=V_+$</li><li>当$A_{V_O}(v_P-v_N)\le V_-$时,$v_O=V_-$</li><li>电压传输特性$v_O=f(V_P-V_N)$</li></ul><h3 id="运算放大器的电压传输特性"><a href="#运算放大器的电压传输特性" class="headerlink" title="运算放大器的电压传输特性"></a>运算放大器的电压传输特性</h3><p>设$v_p &gt; v_N$</p><ol><li>线性区</li></ol><p>$V_- &lt; A_{V_O}(v_p-v_N) &lt; V_+$<br>$v_O=A_{V_O}(v_p-v_N)$</p><ol start="2"><li>饱和区<ul><li>$A_{V_O}(v_p-v_N)\ge V_+$<br>$v_O=+V_{om}=V_+$</li><li>$A_{V_O}(v_p-v_N)\le V_-$<br>$v_O=-V_{om}=V_-$</li></ul></li></ol><h2 id="理想运算放大器"><a href="#理想运算放大器" class="headerlink" title="理想运算放大器"></a>理想运算放大器</h2><h3 id="理想运算放大器特点"><a href="#理想运算放大器特点" class="headerlink" title="理想运算放大器特点"></a>理想运算放大器特点</h3><ul><li>开环差模电压增益$A_{V_O}=\infty$</li><li>差模输入电阻$r_{id}=\infty$</li><li>输出电阻$r_O=0$</li></ul><h2 id="反馈-概念"><a href="#反馈-概念" class="headerlink" title="反馈(概念)"></a>反馈(<strong>概念</strong>)</h2><p>讲系统的输出返回到输入端并以某种方式改变输入,进而影响系统功能的过程</p><ul><li>正反馈</li><li>负反馈</li></ul><h2 id="反馈的电压增益"><a href="#反馈的电压增益" class="headerlink" title="反馈的电压增益"></a>反馈的电压增益</h2><p>深度负反馈</p><ul><li>$1+A_{V_O}F_V &gt;&gt; 1$</li><li>闭环增益$A\approx\dfrac{1}{F}$(反馈系数)</li></ul><p>$A_V=\dfrac{v_o}{v_i}\approx\dfrac{1}{F_V}=1+\dfrac{R_2}{R_1}$</p><h2 id="虚短和虚断"><a href="#虚短和虚断" class="headerlink" title="虚短和虚断"></a>虚短和虚断</h2><p>$A_V=\dfrac{v_o}{v_i}\approx\dfrac{1}{F_V}=\dfrac{v_o}{v_f}=\dfrac{v_o}{v_N} \Rightarrow v_i\approx v_f$或$v_P\approx v_N$</p><ul><li>虚短:在深度负反馈作用下,$v_N$自动跟踪$v_P$,净输入电压$(v_P-v_N)\to0$,即$P$端与$N$端相当于短路</li><li>虚断:由于$(v_P\approx v_N)$,而运放的输入电阻阻值又很高,因此流经两输入端之间的电流$i_P=i_N\approx0$</li></ul><h2 id="同相放大电路"><a href="#同相放大电路" class="headerlink" title="同相放大电路"></a>同相放大电路</h2><ol><li>电压增益</li></ol><p>根据<strong>虚短</strong>和<strong>虚断</strong>的概念</p><ul><li>$v_n=v_p=v_i$</li><li>$\dfrac{v_n-0}{R_1}=\dfrac{v_o-v_n}{R_2}$<br>$\to A_V=\dfrac{v_o}{v_i}=\dfrac{R_1+R_2}{R_1}=1+\dfrac{R_2}{R_1}$</li></ul><ol start="2"><li>输入电阻</li></ol><p>$R_i=\dfrac{v_i}{i_i}\to\infty$</p><ol start="3"><li>输出电阻</li></ol><p>$R_O=r_O\parallel[(R_1\parallel r_i)+R_2]\to0$</p><h2 id="同相放大电路-电压跟随器"><a href="#同相放大电路-电压跟随器" class="headerlink" title="同相放大电路-电压跟随器"></a>同相放大电路-<strong>电压跟随器</strong></h2><p>$v_o=v_n\approx v_p=v_i$</p><h2 id="反相放大电路"><a href="#反相放大电路" class="headerlink" title="反相放大电路"></a>反相放大电路</h2><ol><li>电压增益</li></ol><p>根据<strong>虚短</strong>和<strong>虚断</strong>的概念</p><ul><li>$v_n\approx v_p=0$(<strong>虚地</strong>)</li><li>$\dfrac{v_i-v_n}{R_1}=\dfrac{v_n-v_O}{R_2}$<br>$\to A_V=\dfrac{v_O}{v_i}=-\dfrac{R_2}{R_1}$(负号表示输出与输入反向)</li></ul><ol start="2"><li>输入电阻</li></ol><p>$R_i=\dfrac{v_i}{i_i}=\dfrac{v_i}{v_i/R_1}=R_1$</p><ol start="3"><li>输出电阻</li></ol><p>$R_O=r_O\parallel R_2\to0$</p><h2 id="求差电路"><a href="#求差电路" class="headerlink" title="求差电路"></a>求差电路</h2><p>$R_4=R_1,R_2=R_3$</p><ul><li><p>电压增益:$A_v=\dfrac{v_o}{v_{i2}-v_{i1}}$</p></li><li><p>输入电阻:$R_i=\dfrac{v_{i2}-v_{i1}}{i_2}$</p></li><li><p>输出电阻:$R_o\to0$</p></li></ul><h2 id="求和电路"><a href="#求和电路" class="headerlink" title="求和电路"></a>求和电路</h2><p>$R_1=R_2=R_3$</p><p>输出再接一级反向电路</p><h1 id="数字逻辑"><a href="#数字逻辑" class="headerlink" title="数字逻辑"></a>数字逻辑</h1><h2 id="数字信号"><a href="#数字信号" class="headerlink" title="数字信号"></a>数字信号</h2><ol><li><p>模拟信号:时间和数值均连续变化的电信号,如正弦波,三角波</p></li><li><p>数字信号:在时间上和数值上均是离散的信号</p></li><li><p>模拟信号的数字表示:由于数字信号便与存储,分析和传输,通常将模拟信号转换为数字信号</p></li></ol><h2 id="数字信号的描述方法"><a href="#数字信号的描述方法" class="headerlink" title="数字信号的描述方法"></a>数字信号的描述方法</h2><ol><li><p>二值数字逻辑和逻辑电平</p><ul><li>二值数字逻辑:0,1数码<ul><li>二进制数:表示数量</li><li>二值逻辑:表示事物状态</li></ul></li><li>表示方式:在电路中用低,高电平表示0,1两种逻辑状态</li></ul></li><li><p>数字波形:信号逻辑电平对时间的图形表示</p><ul><li>主要参数<ul><li>周期($T$):两个相邻脉冲之间的时间间隔</li><li>脉冲宽度($t_w$):脉冲幅值的50%所跨越的时间</li><li>占空比($Q$):脉冲宽度栈整个周期的百分比</li><li>上升/下降时间($t_r/t_f$):从脉冲幅值10%到90%锁经历的时间</li></ul></li></ul></li></ol><h2 id="二值逻辑变量与基本逻辑运算"><a href="#二值逻辑变量与基本逻辑运算" class="headerlink" title="二值逻辑变量与基本逻辑运算"></a>二值逻辑变量与基本逻辑运算</h2><ul><li>逻辑符号/逻辑表达式</li></ul><h1 id="逻辑门电路"><a href="#逻辑门电路" class="headerlink" title="逻辑门电路"></a>逻辑门电路</h1><h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><h2 id="一般特性"><a href="#一般特性" class="headerlink" title="一般特性"></a>一般特性</h2><ol><li><p>输入和输出的高,低电平</p><ul><li>$V_{IL(max)}$:输入低电平的上限值</li><li>$V_{IH(min)}$:输入高电平的下限值</li><li>$V_{OL(max)}$:输出低电平的上限值</li><li>$V_{OH(min)}$:输出高电平的下限值</li></ul></li><li><p>噪声容限</p></li></ol><p>在保证输出电平不变的条件下,输出电平允许波动的范围</p><p>负载门输入高电平时的噪声容限:$V_{NH}-$当前级门输出高电平的最小值时允许负向噪声电压的最大值<br>$V_{NH}=V_{OH(min)}-V_{IH(min)}$</p><p>负载门输入低电平时的噪声容限:$V_{NL}-$当前级门输出低电平的最大值时允许正向噪声电压的最大值<br>$V_{NL}=V_{IL(max)}-V_{OL(max)}$</p><ol start="3"><li>传输延迟时间</li></ol><p><strong>开关速度</strong>的参数,说明门电路在输入脉冲波形的作用下,其输出波形相对于输入波形延迟了多长的时间</p><ol start="4"><li><p>功耗</p><ul><li>静态功耗:电路没有状态转换时的功耗,即门电路空载时电源总电流$I_D$与电源电压$V_{DD}$的乘积</li><li>动态功耗:电路在输出状态转换时的功耗</li><li>对于TTL门电路,<strong>静态功耗</strong>是主要的.CMOS电路的静态功耗非常低,有<strong>动态功耗</strong></li></ul></li><li><p>延时-功耗积<br>是速度功耗综合性的指标,用符号$DP$表示<br>$DP=\dfrac{t_{pLH}+t_{pHL}}{2}P_D$</p></li><li><p>扇入与扇出数</p><ul><li>扇入数:取决于逻辑门的输入端的个数</li><li>扇出数:在正常工作情况下,所能带同类门电路的最大数目</li></ul></li></ol><h2 id="MOS开关及其等效电路"><a href="#MOS开关及其等效电路" class="headerlink" title="MOS开关及其等效电路"></a>MOS开关及其等效电路</h2><p>当$v_1 &lt; V_T$:MOS管截止,输出高电平<br>当$v_1 &gt; V_T$并且比较大:MOS管工作在可变电阻区,输出低电平</p><ul><li><p>当输入为低电平时<br>MOS管截止,相当于开关断开,输出为高电平</p></li><li><p>当输入为高电平时<br>MOS管工作在可变电阻区,相当于开关闭合,输出为低电平</p></li></ul><p>MOS管相当于一个由$V_{GS}$控制的无触点开关</p><h2 id="CMOS反向器"><a href="#CMOS反向器" class="headerlink" title="CMOS反向器"></a>CMOS反向器</h2><h2 id="CMOS逻辑门"><a href="#CMOS逻辑门" class="headerlink" title="CMOS逻辑门"></a>CMOS逻辑门</h2><h2 id="CMOS传输门"><a href="#CMOS传输门" class="headerlink" title="CMOS传输门"></a>CMOS传输门</h2><p><strong>TODO</strong></p><h2 id="TTL"><a href="#TTL" class="headerlink" title="TTL"></a>TTL</h2><ul><li>TTL反向器</li><li>TTL与非门</li><li>TTL或非门</li></ul><h1 id="半导体存储器-基本概念"><a href="#半导体存储器-基本概念" class="headerlink" title="半导体存储器(基本概念)"></a>半导体存储器(<strong>基本概念</strong>)</h1><ul><li><p>RAM(随机存取存储器):在运行状态可以随时进行读或写操作.存储的数据必须有电源供应才能保存,一旦掉电,数据全部丢失</p></li><li><p>ROM(只读存储器):在正常工作状态只能读出信息.断电后信息不会丢失</p></li><li><p>字长(位数)</p></li><li><p>字数</p></li><li><p>地址</p></li><li><p>存储容量=字数$\times$位数</p></li><li><p>掩摸ROM</p><ul><li>存储矩阵的每个交叉点是一个<strong>存储单元</strong>,存储单元中有期间存入1,无器件存入0</li><li>出厂时已经固定,适合大量生产,便宜,非易失性</li></ul></li><li><p>可变长ROM(PROM)</p><ul><li>存储单元与掩摸ROM不同</li><li>熔丝由易熔合金制成,出厂时每个节点上都有,编程时讲不用的熔断.一次性编程,不能改写</li></ul></li><li><p>可擦除的的可编程ROM(EPROM)</p><ul><li>存储单元与掩摸ROM不同</li><li>用紫外线擦除的PROM(UVEPROM)</li><li>SIMOS 叠栅注入MOS管<ul><li>若$G_f$上充负电荷,则$G_c$处于正常逻辑高电平下不导通</li><li>若$G_f$上为充负电荷,则$G_c$处于正常逻辑高电平下导通</li><li>写入:雪崩注入.$D$-$S$间加高压($20-25V$),发生雪崩击穿,同时在$G_c$上加$25V,50ms$宽的正脉冲,吸引高速电子穿过$SiO_2$到达$G_f$,形成注入电荷</li><li>擦除:通过照射产生电子-空穴对,提供泄放通道.紫外线照射20-30分钟,阳光下一周,荧光灯下3年</li></ul></li></ul></li><li><p>电可擦除的可编程ROM(E$^2$PROM)</p><ul><li>微客服UVEPROM擦除慢,操作不便的缺点,采用FLOTOX(浮栅隧道氧化层MOS管)</li><li>$G_f$与$D$之间有小的隧道区,$SiO_2$厚度$&lt; 2\times10^{-8}m$</li><li>当场强大到一定大小($10^7V/cm$)时,电子会穿越隧道</li><li><strong>TODO</strong></li></ul></li><li><p>快闪存储器(Flash Memory)</p></li><li><p>静态随机存储器SRAM</p><ul><li>存储单元:6个N沟道增强型MOS管</li></ul></li><li><p>动态随机存储器DRAM</p><ul><li>利用<strong>MOS管栅极电容</strong>可以存储电荷的原理</li></ul></li><li><p>SRAM和DRAM的区别</p><ul><li>SRAM:速度快,贵</li></ul></li></ul><h1 id="微电子学的新发展-基本概念"><a href="#微电子学的新发展-基本概念" class="headerlink" title="微电子学的新发展(基本概念)"></a>微电子学的新发展(<strong>基本概念</strong>)</h1><ul><li><p>冯诺依曼架构:用数学模型和算法来描述和模仿神经元的行为和相互关系,但计算仍然运行在传统的计算机上</p></li><li><p>非冯诺依曼架构:用电子器件模拟生物神经元的功能,构建新的神经计算机</p></li><li><p>忆阻器:$V(t)=M(q(t))I(t)$.功能如同电阻,但在关掉电源后,仍能记忆先前通过的电荷量.忆阻器的电阻值取决于多少电荷经过了这个器件:让电荷以一个方向流过,电阻会增加;让点何以相反的方向流过,电阻就会减小</p><ul><li>工作原理:一块极薄的二氧化钛($TiO_2$)被夹在两个电极中间,分成2个部分,一般是正常的二氧化钛,另一半进行了掺杂,少了几个氧原子($TiO_{2-x}$),掺杂的那一半带正电.当电流从掺杂的一边通向正常的一边时,在电场的影响下缺氧的掺杂物会往正常的一侧游移,使得掺杂的部分会占较高的比重,整体的电阻降低</li><li>特点<ul><li>输入输出关系是非线性的</li><li>输入和输出都是连续的,其存储的精度理论上是无限的</li><li>无源电路元器件,方便将其应用在电路中,形成混合型电路</li><li>非易失性</li><li>高集成密度,高读写速度,低功耗,多值计算</li></ul></li><li>应用前景<ul><li><strong>TODO</strong></li><li>存算一体</li></ul></li></ul></li><li><p>石墨烯:一种由碳原子构成的单层片状结构的新材料</p><ul><li>极薄极轻,比表面积$2630m^2/g$</li><li>导热率为$3000-5000W/mK$</li><li>极强的力学性能</li><li>优良的导电性</li><li>制备方法<ul><li>物理方法<ul><li>机械剥离法</li><li>液相或气相直接剥离法</li></ul></li><li>化学方法<ul><li>表面析出生长法</li><li>氧化石墨还原法</li><li>化学气相沉积法</li><li>化学合成法</li></ul></li></ul></li><li>应用前景<ul><li>低成本石墨烯电池</li><li>可折叠弯曲屏</li><li>石墨烯传感器</li><li>石墨烯过滤器</li><li>石墨烯生物器件</li><li>石墨烯感光元件</li><li>太阳能电池</li><li>柔性微处理器</li></ul></li><li>由石墨烯到二维材料<ol><li>结构有序</li><li>在二维平面生长</li><li>在第三维度超薄</li></ol></li></ul></li><li><p>自旋场效应晶体管</p><ul><li>电子的电荷与自旋:在半导体材料中有<strong>电子</strong>和<strong>空穴</strong>两种载流子,极化电子优<strong>自旋向上</strong>和<strong>向下</strong>两种载流子</li><li>电子的自旋极化:<strong>TODO</strong></li></ul></li><li><p>柔性电子学</p><ul><li>概念:涵盖有机电子,塑料电子,生物电子,纳米电子,印刷电子等技术,是将有机/无机材料电子器件制作在柔性/可延性基板上的新兴电子技术.相对于传统电子,柔性电子具有更大的灵活性.</li><li>应用场景:<strong>TODO</strong>,柔性显示,有机电致发光显示与照明,化学与生物传感器,柔性光伏,柔性逻辑与存储,柔性电池,可穿戴设备</li><li>柔性电子器件的材料<ul><li>碳纳米管</li><li>金属氧化物半导体薄膜</li><li>金属纳米薄膜,金属纳米线</li><li>有机高分子薄膜</li><li>水凝胶离子导体</li><li>液态金属</li></ul></li><li>柔性电子制造方法<ul><li>转移印刷</li><li>喷墨印刷</li><li>纤维结构形成</li></ul></li><li>可拉伸结构的设计:<strong>TODO</strong></li></ul></li></ul><hr><h1 id="提纲"><a href="#提纲" class="headerlink" title="提纲"></a>提纲</h1><h2 id="半导体三极管-1"><a href="#半导体三极管-1" class="headerlink" title="半导体三极管"></a>半导体三极管</h2><ul><li>输入特性曲线</li><li>输出特性曲线<ul><li>区域,含义</li></ul></li><li>主要参数</li></ul><h2 id="三极管放大电路-1"><a href="#三极管放大电路-1" class="headerlink" title="三极管放大电路"></a>三极管放大电路</h2><ul><li>共射极放大电路<ul><li>工作原理</li><li>计算静态工作点</li><li>负载线</li><li>失真和静态工作点的关系</li><li>温度对工作点的影响(定性)</li><li>基极分压式射极偏置电路(认识,工作原理)</li></ul></li></ul><h2 id="场效应管-1"><a href="#场效应管-1" class="headerlink" title="场效应管"></a>场效应管</h2><ul><li>不同类型的管子<ul><li>符号</li><li>结构</li><li>工作原理</li><li>特性曲线<ul><li>输出(分区)</li><li>转移</li></ul></li><li>几种效应</li><li>主要(直流)参数</li></ul></li></ul><h2 id="场效应管放大电路-1"><a href="#场效应管放大电路-1" class="headerlink" title="场效应管放大电路"></a>场效应管放大电路</h2><ul><li>基本共源极放大电路<ul><li>工作原理(不要求公式)</li></ul></li><li>图解法求静态工作点<ul><li>负载线与输出特性曲线</li></ul></li></ul><h2 id="放大电路模型-2"><a href="#放大电路模型-2" class="headerlink" title="放大电路模型"></a>放大电路模型</h2><ul><li>基本定义</li><li>符号</li><li>增益的定义</li><li>几种模型</li><li>性能指标<ul><li>输入电阻</li><li>输出电阻</li><li>增益</li><li>频率响应和带宽:基本概念,识图</li><li>非线性失真:概念,识图(不要求计算)</li></ul></li></ul><h2 id="运算放大器-1"><a href="#运算放大器-1" class="headerlink" title="运算放大器"></a>运算放大器</h2><ul><li>组成单元</li><li>结构框图</li><li>符号</li><li>电路模型</li><li>参数特点</li><li>理想运放</li><li>反馈:概念</li><li>深度负反馈:概念</li><li>虚短,虚断</li><li>几种电路<ul><li>基本形式</li><li>特征</li></ul></li></ul><h2 id="数字逻辑-1"><a href="#数字逻辑-1" class="headerlink" title="数字逻辑"></a>数字逻辑</h2><ul><li>概念</li><li>逻辑符号,逻辑表达式</li></ul><h2 id="逻辑门电路-不要求分析"><a href="#逻辑门电路-不要求分析" class="headerlink" title="逻辑门电路(不要求分析)"></a>逻辑门电路(不要求分析)</h2><ul><li>基本参数</li><li>反向器,与非门,或非门,传输门</li><li>TTL(反向器)(认识)</li></ul>]]></content>
      
      
      <categories>
          
          <category> 微电子 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 微电子 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据库复习提纲</title>
      <link href="/2019/12/26/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/"/>
      <url>/2019/12/26/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/</url>
      
        <content type="html"><![CDATA[<h1 id="1-数据库系统概述"><a href="#1-数据库系统概述" class="headerlink" title="1 数据库系统概述"></a>1 数据库系统概述</h1><h2 id="1-1-基本概念"><a href="#1-1-基本概念" class="headerlink" title="1.1 基本概念"></a>1.1 基本概念</h2><ul><li>数据库,数据库管理系统,数据库系统,数据库管理员(相互之间的关系)</li></ul><h2 id="1-2-数据库系统的特点"><a href="#1-2-数据库系统的特点" class="headerlink" title="1.2 数据库系统的特点"></a>1.2 数据库系统的特点</h2><ul><li><em>数据集成化,数据独立性,数据共享,数据冗余,数据安全性,完整性和一致性,并发控制和故障恢复</em></li></ul><h2 id="1-3-数据库内部结构体系"><a href="#1-3-数据库内部结构体系" class="headerlink" title="1.3 数据库内部结构体系"></a>1.3 数据库内部结构体系</h2><ul><li><em>数据模式</em></li><li>三级模式,<em>二级映射</em></li><li><em>三级模式与数据独立性关系</em></li></ul><h1 id="2-数据模型"><a href="#2-数据模型" class="headerlink" title="2 数据模型"></a>2 数据模型</h1><h2 id="2-1-数据模型的基本概念"><a href="#2-1-数据模型的基本概念" class="headerlink" title="2.1 数据模型的基本概念"></a>2.1 数据模型的基本概念</h2><ul><li><em>数据模型及其组成成分:数据结构,数据操作,数据约束</em></li><li><em>数据模型的核心,不同类型数据模型的区分依据</em></li><li>三个抽象层次上的数据模型概念:概念数据模型,逻辑数据模型,物理数据模型</li></ul><h2 id="2-2-数据模型的四个世界"><a href="#2-2-数据模型的四个世界" class="headerlink" title="2.2 数据模型的四个世界"></a><em>2.2 数据模型的四个世界</em></h2><ul><li><em>现实世界,概念世界,信息世界,计算机世界</em></li></ul><h2 id="2-3-概念世界与概念模型"><a href="#2-3-概念世界与概念模型" class="headerlink" title="2.3 概念世界与概念模型"></a>2.3 概念世界与概念模型</h2><ul><li>E-R模型与E-R图(包括扩充E-R模型)<ul><li>实体,属性,联系</li><li>多值属性,组合属性</li><li>联系上的函数对应关系,参与方式</li><li>IS-A联系,弱实体</li></ul></li><li><em>面向对象模型:对象,对象标识符,类,方法,超类和子类,聚合和分解,继承和合成</em></li></ul><h2 id="2-4-信息世界和逻辑模型"><a href="#2-4-信息世界和逻辑模型" class="headerlink" title="2.4 信息世界和逻辑模型"></a>2.4 信息世界和逻辑模型</h2><ul><li>关系模型:关系,属性,值域(域),元组,关系数据库,关键字</li></ul><h2 id="2-5-计算机世界与物理模型"><a href="#2-5-计算机世界与物理模型" class="headerlink" title="2.5 计算机世界与物理模型"></a><em>2.5 计算机世界与物理模型</em></h2><ul><li><em>逻辑模型的物理存储:项,记录,文件,索引,集簇</em></li><li><em>提高文件访问效率的常用方法:索引,集簇,hash</em></li></ul><h1 id="3-关系数据库系统"><a href="#3-关系数据库系统" class="headerlink" title="3 关系数据库系统"></a>3 关系数据库系统</h1><h2 id="3-1-关系数据库系统概述"><a href="#3-1-关系数据库系统概述" class="headerlink" title="3.1 关系数据库系统概述"></a><em>3.1 关系数据库系统概述</em></h2><h2 id="3-2-关系数据库系统的衡量准则"><a href="#3-2-关系数据库系统的衡量准则" class="headerlink" title="3.2 关系数据库系统的衡量准则"></a>3.2 关系数据库系统的衡量准则</h2><ul><li><em>完全关系型的十二条衡量准则</em></li><li><em>空值(NULL)的定义</em></li></ul><h2 id="3-3-关系代数"><a href="#3-3-关系代数" class="headerlink" title="3.3 关系代数"></a>3.3 关系代数</h2><h3 id="3-3-0-关系模型-概念"><a href="#3-3-0-关系模型-概念" class="headerlink" title="3.3.0 关系模型(概念)"></a>3.3.0 关系模型(概念)</h3><ul><li>关系数据结构<ul><li>表结构(表头):表框架,表的元数与基数</li><li><em>关系:关系的性质</em></li><li>关键字:候选关键字,主关键字,外关键字</li><li><em>关系数据库:关系子模式-视图(view)</em></li></ul></li><li>关系操纵<ul><li>数据查询:两个关系的合并,单个关系内的元组选择,单个关系内的属性指定</li><li>元组的删除,插入,修改</li><li>空值的处理</li></ul></li><li>关系中的数据约束<ul><li>实体完整性约束,参照完整性约束,用户定义的完整性</li></ul></li></ul><h3 id="3-3-1-关系的表示"><a href="#3-3-1-关系的表示" class="headerlink" title="3.3.1 关系的表示"></a>3.3.1 关系的表示</h3><ul><li><em>关系的表示</em>,笛卡尔乘积</li></ul><h3 id="3-3-2-关系操纵的表示"><a href="#3-3-2-关系操纵的表示" class="headerlink" title="3.3.2 关系操纵的表示"></a>3.3.2 关系操纵的表示</h3><ul><li>关系代数中的五种基本运算:选择,投影,笛卡尔积,并,差(注意执行条件)</li></ul><h3 id="3-3-3-关系模型与关系代数"><a href="#3-3-3-关系模型与关系代数" class="headerlink" title="3.3.3 关系模型与关系代数"></a><em>3.3.3 关系模型与关系代数</em></h3><h3 id="3-3-4-关系代数中的扩充运算"><a href="#3-3-4-关系代数中的扩充运算" class="headerlink" title="3.3.4 关系代数中的扩充运算"></a>3.3.4 关系代数中的扩充运算</h3><ul><li>交,除法,联接,自然联接,$\theta$-联接</li><li>扩充运算与基本运算之间的关系</li></ul><h3 id="3-3-5-关系代数的应用"><a href="#3-3-5-关系代数的应用" class="headerlink" title="3.3.5 关系代数的应用"></a>3.3.5 关系代数的应用</h3><h3 id="3-3-6-关系演算"><a href="#3-3-6-关系演算" class="headerlink" title="3.3.6 关系演算"></a>3.3.6 关系演算</h3><ul><li>原子公式,公式的定义</li><li>基于关系演算的数据查询表示:单表查询,多表连接查询,复杂查询的表示</li></ul><h2 id="3-4-关系数据库语言SQL"><a href="#3-4-关系数据库语言SQL" class="headerlink" title="3.4 关系数据库语言SQL"></a>3.4 关系数据库语言SQL</h2><h3 id="3-4-1-SQL概貌"><a href="#3-4-1-SQL概貌" class="headerlink" title="3.4.1 SQL概貌"></a><em>3.4.1 SQL概貌</em></h3><ul><li><em>SQL的基本概念与使用方式:表,行,列</em></li></ul><h3 id="3-4-2-数据定义功能"><a href="#3-4-2-数据定义功能" class="headerlink" title="3.4.2 数据定义功能"></a>3.4.2 数据定义功能</h3><h3 id="3-4-3-数据操纵功能"><a href="#3-4-3-数据操纵功能" class="headerlink" title="3.4.3 数据操纵功能"></a>3.4.3 数据操纵功能</h3><ul><li><em>SQL语言与关系代数的关系</em></li><li>基本查询功能:<code>distinct</code>,<code>like</code>,<code>is null</code>,多表联接查询,表的自联接查询</li><li>嵌套查询:<code>in</code>,<code>some</code>/<code>any</code>/<code>all</code>,<code>exists</code>等谓词,相关子查询与独立子查询</li><li>子查询的合并:<code>union</code>/<code>intersect</code>/<code>except [all]</code></li><li>统计查询(<code>group by</code>,<code>having</code>):统计与分组统计查询,空值与空集在统计函数中的处理方法</li><li>复杂数据查询</li><li>查询结果输出<ul><li>结果元组去重:<code>distinct</code></li><li>结果元组排序:<code>order by</code></li></ul></li></ul><h3 id="3-4-4-更新功能"><a href="#3-4-4-更新功能" class="headerlink" title="3.4.4 更新功能"></a>3.4.4 更新功能</h3><ul><li>元组删除</li><li>元组插入:常量元组的插入,带子查询的元组插入</li><li>元组修改</li></ul><h3 id="3-4-5-视图"><a href="#3-4-5-视图" class="headerlink" title="3.4.5 视图"></a>3.4.5 视图</h3><ul><li><em>视图概念,视图与基表的区别</em></li><li>视图的创建与删除</li><li><em>视图的嵌套定义</em></li><li>视图删除中的连锁反应</li><li>可更新视图的判断准则</li><li><em>视图的作用</em></li></ul><h1 id="4-数据库的安全性与完整性保护"><a href="#4-数据库的安全性与完整性保护" class="headerlink" title="4 数据库的安全性与完整性保护"></a>4 数据库的安全性与完整性保护</h1><h2 id="4-1-数据库的安全性保护"><a href="#4-1-数据库的安全性保护" class="headerlink" title="4.1 数据库的安全性保护"></a>4.1 数据库的安全性保护</h2><ul><li>数据库安全的基本概念与内容:主体,客体,身份标识与鉴别,自主访问控制,审计</li><li>SQL对数据库安全的支持<ul><li>SQL中的存储权限</li><li>SQL中的授权命令<code>grant</code>和权限回收命令<code>revoke</code></li></ul></li></ul><h2 id="4-2-数据库的完整性保护"><a href="#4-2-数据库的完整性保护" class="headerlink" title="4.2 数据库的完整性保护"></a>4.2 数据库的完整性保护</h2><ul><li><em>数据库完整性保护的功能:目的与常用实现措施</em></li><li>实体完整性,参照完整性,用户定义完整性</li><li>完整的<code>create table</code>命令<ul><li>基表的创建</li><li>完整性约束的定义:主关键字,外关键字,<code>check</code>约束,<code>unique</code>,<code>not null</code>,<code>default</code></li></ul></li><li>触发器及其创建命令</li></ul><h1 id="5-事务处理-并发控制与故障恢复技术"><a href="#5-事务处理-并发控制与故障恢复技术" class="headerlink" title="5 事务处理,并发控制与故障恢复技术"></a>5 事务处理,并发控制与故障恢复技术</h1><h2 id="5-1-事务处理-概念"><a href="#5-1-事务处理-概念" class="headerlink" title="5.1 事务处理(概念)"></a>5.1 事务处理(概念)</h2><ul><li>事务的定义与ACID性质</li><li><em>事务活动及其状态转换图</em></li><li>事务控制及相关的参数设置语句:事务的提交与回滚,事务的读/写类型与隔离级别</li><li>事务的语句组成成分</li></ul><h2 id="5-2-并发控制技术-概念"><a href="#5-2-并发控制技术-概念" class="headerlink" title="5.2 并发控制技术(概念)"></a>5.2 并发控制技术(概念)</h2><ul><li>事务<ul><li><em>事务的并发性,并发控制</em></li><li>调度,串行调度,可串行化调度,冲突与冲突可串行化,视图可串行化</li><li>冲突可串行化的判定方法</li><li>不正确的事务所导致的数据不一致现象:丢失修改(lost-update),脏读(dirty-read),不可重复读(unrepeatable-read)</li></ul></li><li>封锁<ul><li>共享锁(S锁),排它锁(X锁),锁相容矩阵,锁申请/锁释放算法</li><li>基于封锁技术的并发控制实现方法<ul><li>三级封锁协议,三级封锁协议与数据不一致现象之间的关系</li><li>两阶段封锁协议</li><li>两阶段封锁协议与冲突可串行化的关系</li></ul></li></ul></li><li>多粒度封锁<ul><li>封锁粒度/并发度/并发控制实现开销之间的关系</li><li>多粒度树,多粒度封锁</li><li>基于意向锁的多粒度封锁协议<ul><li>意向锁:IS,IX,SIX</li><li>意向锁锁相容矩阵</li><li>意向锁锁申请/释放算法</li></ul></li></ul></li><li>死锁的监测与预防<ul><li>死锁,活锁</li><li>死锁的检测及其处理办法<ul><li><em>等待图法</em></li><li><em>超时死锁检测法:锁申请等待超时,事务执行超时</em></li><li>时间戳死锁检测法</li></ul></li></ul></li></ul><h2 id="5-3-数据库恢复技术"><a href="#5-3-数据库恢复技术" class="headerlink" title="5.3 数据库恢复技术"></a>5.3 数据库恢复技术</h2><ul><li>数据库恢复的含义,方法和常用措施</li><li>数据库故障的分类</li><li>数据库故障恢复三大技术:数据转储,日志,数据库镜像</li><li>数据转储:静态转储/动态转储,海量转储/增量转储</li><li>日志<ul><li>日志的内容,组成,作用与记载原则</li><li>在日志中设置检查点的作用</li><li>事务的撤销(undo)与重做(redo)</li><li>undo日志</li><li>redo日志</li><li>undo/redo日志</li><li>3种日志的优缺点</li></ul></li><li>恢复策略:小型/中型/大型故障的恢复策略</li></ul><h1 id="6-7"><a href="#6-7" class="headerlink" title="6 7"></a>6 7</h1><h2 id="游标管理"><a href="#游标管理" class="headerlink" title="游标管理"></a>游标管理</h2><ul><li><em>游标的作用</em></li><li><em>游标的定义,打开,使用,关闭</em></li><li><em>可滚动游标的定义及其在数据更新命令中的使用</em></li></ul><h2 id="索引"><a href="#索引" class="headerlink" title="索引"></a>索引</h2><ul><li><em>B+索引的数据结构,搜索算法</em></li></ul><h1 id="8-关系数据库规范化理论"><a href="#8-关系数据库规范化理论" class="headerlink" title="8 关系数据库规范化理论"></a>8 关系数据库规范化理论</h1><h2 id="8-1-概述"><a href="#8-1-概述" class="headerlink" title="8.1 概述"></a>8.1 概述</h2><ul><li><em>模式设计质量的评级指标:数据冗余度,插入/删除等更新异常</em></li><li><em>为什么要研究关系的规范化设计:规范化的目的与手段</em></li></ul><h2 id="8-2-规范化理论"><a href="#8-2-规范化理论" class="headerlink" title="8.2 规范化理论"></a>8.2 规范化理论</h2><h3 id="8-2-1-函数依赖-FD"><a href="#8-2-1-函数依赖-FD" class="headerlink" title="8.2.1 函数依赖(FD)"></a>8.2.1 函数依赖(FD)</h3><ul><li>函数依赖的定义</li><li>如何寻找函数依赖:函数依赖与数据完整性约束的关系</li><li>完全/部分FD,平凡/非平凡FD,直接/传递FD</li><li>Armstrong公理系统:3条基本原则+3条扩充原则</li><li>基于函数依赖的关键字定义</li><li>属性集闭包的计算算法</li><li>关键字的计算算法</li></ul><h3 id="8-2-2-与函数依赖有关的范式"><a href="#8-2-2-与函数依赖有关的范式" class="headerlink" title="8.2.2 与函数依赖有关的范式"></a>8.2.2 与函数依赖有关的范式</h3><ul><li>范式定义:1NF,2NF,3NF,BCNF</li><li><em>理解各级范式与数据冗余度,插入/删除异常的关系</em></li></ul><h3 id="8-2-3-多值依赖与第四范式"><a href="#8-2-3-多值依赖与第四范式" class="headerlink" title="8.2.3 多值依赖与第四范式"></a>8.2.3 多值依赖与第四范式</h3><ul><li>多值依赖,平凡多值依赖,非平凡多值依赖</li><li>多值依赖与函数依赖的关系</li><li>4NF</li></ul><h2 id="8-3-规范化所引起的一些问题"><a href="#8-3-规范化所引起的一些问题" class="headerlink" title="8.3 规范化所引起的一些问题"></a>8.3 规范化所引起的一些问题</h2><ul><li>函数依赖的逻辑蕴含,函数依赖集的等价</li><li>最小函数依赖集及其判定方法</li><li>最小函数依赖集的计算算法</li><li>模式分解的无损联结性,依赖保持性及其判定方法</li><li>直接到3NF且满足无损联结性和依赖保持性的模式分解算法</li><li>从3NF到BCNF,4NF的分解方法</li></ul><h1 id="9-数据库设计"><a href="#9-数据库设计" class="headerlink" title="9 数据库设计"></a>9 数据库设计</h1><h2 id="9-1-数据库设计概述"><a href="#9-1-数据库设计概述" class="headerlink" title="9.1 数据库设计概述"></a>9.1 数据库设计概述</h2><h2 id="9-2-数据库设计的需求分析"><a href="#9-2-数据库设计的需求分析" class="headerlink" title="9.2 数据库设计的需求分析"></a>9.2 数据库设计的需求分析</h2><h2 id="9-3-数据库的概念设计"><a href="#9-3-数据库的概念设计" class="headerlink" title="9.3 数据库的概念设计"></a>9.3 数据库的概念设计</h2><h2 id="9-4-数据库的逻辑设计"><a href="#9-4-数据库的逻辑设计" class="headerlink" title="9.4 数据库的逻辑设计"></a>9.4 数据库的逻辑设计</h2><h2 id="9-5-数据库的物理设计"><a href="#9-5-数据库的物理设计" class="headerlink" title="9.5 数据库的物理设计"></a>9.5 数据库的物理设计</h2>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>计算机网络</title>
      <link href="/2019/12/23/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
      <url>/2019/12/23/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/</url>
      
        <content type="html"><![CDATA[<h1 id="1-计算机网络和因特网"><a href="#1-计算机网络和因特网" class="headerlink" title="1 计算机网络和因特网"></a>1 计算机网络和因特网</h1><h2 id="1-3-网络核心"><a href="#1-3-网络核心" class="headerlink" title="1.3 网络核心"></a>1.3 网络核心</h2><h2 id="1-4-分组交换网中的时延-丢包和吞吐量"><a href="#1-4-分组交换网中的时延-丢包和吞吐量" class="headerlink" title="1.4 分组交换网中的时延,丢包和吞吐量"></a>1.4 分组交换网中的时延,丢包和吞吐量</h2><p>节点总时延($d_{nodal}$)=节点处理时延($d_{proc}$)+排队时延($d_{queue}$)+传输时延($d_{trans}$)+传播时延($d_{prop}$)</p><h3 id="1-4-2-排队时延和丢包"><a href="#1-4-2-排队时延和丢包" class="headerlink" title="1.4.2 排队时延和丢包"></a>1.4.2 排队时延和丢包</h3><ul><li>流量强度</li></ul><h2 id="1-5-协议层次及其服务模型"><a href="#1-5-协议层次及其服务模型" class="headerlink" title="1.5 协议层次及其服务模型"></a>1.5 协议层次及其服务模型</h2><h3 id="1-5-1-分层的体系结构"><a href="#1-5-1-分层的体系结构" class="headerlink" title="1.5.1 分层的体系结构"></a>1.5.1 分层的体系结构</h3><ol><li>协议分层<ol><li>应用层<br>http,smtp,ftp</li><li>运输层<br>tcp,udp</li><li>网络层<br>ip</li><li>链路层<br>CSMA,CSMA/CD,<em>CSMA/CA</em></li><li>物理层</li></ol></li></ol><h3 id="1-5-2-封装"><a href="#1-5-2-封装" class="headerlink" title="1.5.2 封装"></a>1.5.2 封装</h3><ul><li><p>应用层报文</p></li><li><p>运输层报文段</p></li><li><p>网络层数据报</p></li><li><p>链路层帧</p></li><li><p>有效载荷字段</p></li></ul><h1 id="3-运输层"><a href="#3-运输层" class="headerlink" title="3 运输层"></a>3 运输层</h1><h2 id="3-1-概述和运输层服务"><a href="#3-1-概述和运输层服务" class="headerlink" title="3.1 概述和运输层服务"></a>3.1 概述和运输层服务</h2><p>运输层协议死在端系统中而不是在路由器中实现的.在发送端,运输层将接收到的报文转换成运输层分组,该分组称为运输层<strong>报文段(segment)</strong></p><h3 id="3-1-1-运输层和网络层的关系"><a href="#3-1-1-运输层和网络层的关系" class="headerlink" title="3.1.1 运输层和网络层的关系"></a>3.1.1 运输层和网络层的关系</h3><p>网络层提供了<strong>主机</strong>之间的逻辑通信,而运输层为运行在不同主机上的进程之间提供了逻辑通信</p><h3 id="3-1-2-因特网运输层概述"><a href="#3-1-2-因特网运输层概述" class="headerlink" title="3.1.2 因特网运输层概述"></a>3.1.2 因特网运输层概述</h3><ul><li><p>UDP(用户数据报协议):他为调用它的应用程序提供了一种不可靠,无连接的服务</p></li><li><p>TCP(传输控制协议):他为调用它的应用程序提供了一种可靠的,面向连接的服务</p></li></ul><p>将TCP和UDP的分组统称为<strong>报文段(segment)</strong>,而将**数据报(datagram)**名称留给网络层分组</p><p>ip的服务模型时<strong>尽力而为交付服务(best-effort delivery service)</strong>.这意味着ip尽他最大的努力在通信的主机之间交付报文段,<strong>但他并不作任何确保</strong>.特别是不确保报文段的交付,不保证报文段的按序交付,不保证报文段中数据的完整性.由于这些原因,ip被称为<strong>不可靠服务</strong></p><h2 id="3-2-多路复用与多路分解-概念"><a href="#3-2-多路复用与多路分解-概念" class="headerlink" title="3.2 多路复用与多路分解(概念)"></a>3.2 多路复用与多路分解(概念)</h2><p>将运输层报文段中的数据交付到正确的套接字的工作称为<strong>多路分解</strong>(demultiplexing)</p><p>在源主机从不同套接字中收集数据块,并未每个数据块封装上首部信息(将在以后用于分解)从而生成报文段,然后将报文段传递到网络层,所有这些工作称为<strong>多路复用</strong>(multiplexing)</p><h2 id="3-3-无连接运输-UDP-概念"><a href="#3-3-无连接运输-UDP-概念" class="headerlink" title="3.3 无连接运输:UDP(概念)"></a>3.3 无连接运输:UDP(概念)</h2><p>有许多应用更适合用UDP,原因主要以下几点</p><ul><li>关于发送什么数据以及何时发送的应用层控制更为精细</li><li>无需连接建立</li><li>无连接状态</li><li>分组首部开销小</li></ul><h3 id="3-3-1-UDP报文段结构"><a href="#3-3-1-UDP报文段结构" class="headerlink" title="3.3.1 UDP报文段结构"></a>3.3.1 UDP报文段结构</h3><ul><li>周知端口号(well-known port):0-1023</li></ul><p><img src="/img/udp.png"></p><ul><li>其他首部字段<ul><li>长度:2字节</li><li>校验和:2字节</li></ul></li></ul><h3 id="3-3-2-UDP校验和"><a href="#3-3-2-UDP校验和" class="headerlink" title="3.3.2 UDP校验和"></a>3.3.2 UDP校验和</h3><h2 id="3-5-面向连接的运输-TCP"><a href="#3-5-面向连接的运输-TCP" class="headerlink" title="3.5 面向连接的运输:TCP"></a>3.5 面向连接的运输:TCP</h2><h3 id="3-5-1-TCP连接"><a href="#3-5-1-TCP连接" class="headerlink" title="3.5.1 TCP连接"></a>3.5.1 TCP连接</h3><p>TCP连接提供的是<strong>全双工服务</strong>:如果一台主机上的进程A与另一台主机上的进程B存在一条TCP连接,那么应用层数据就可在从进程B流向进程A的同事,也从进程A流向进程B</p><p>发起连接的进程被称为<strong>客户进程</strong>,另一个进程被称为<strong>服务器进程</strong></p><p>TCP可从缓存中取出并放入报文段中的数据数量受限于<strong>最大报文段长度(MSS)</strong>.MSS通常根据最初确定的有本地发送主机发送的最大链路层帧长度(即<strong>最大传输单元(MTU)</strong>)来设置.MSS是指在报文段里应用层数据的最大长度,而不是只包括首部的TCP报文段的最大长度</p><p>TCP为每块客户数据配上一个TCP首部,从而形成对个<strong>TCP报文段</strong>.这些报文段被下传给网络层,网络层间期分别封装在网络层ip数据包中</p><h3 id="3-5-2-TCP报文段结构"><a href="#3-5-2-TCP报文段结构" class="headerlink" title="3.5.2 TCP报文段结构"></a>3.5.2 TCP报文段结构</h3><p><img src="/img/tcp.png"></p><ul><li>序号字段,确认号字段:见后</li><li>接收窗口字段:见流量控制</li><li>首部长度字段:TCP首部长度/32比特.由于TCP选项字段,TCP首部的长度是可变的(通常选项字段为空,TCP首部的典型长度为20字节)</li><li>选项字段:在发送方与接收方协商最大报文段长度(MSS)时,或在高速网络环境下用作窗口调节因子时使用</li><li>标志字段<ul><li>ACK:指示确认字段中的值是有效的,即该报文段包括一个对已被成功接收报文段的确认</li><li>RST,SYN,FIN:用于连接建立和拆除,见后</li><li>CWR,ECE:明确拥塞通告</li><li>PSH:指示接收方应立即将数据交给上层</li><li>URG:指示报文段里存在着被发送端的上层实体置为<code>紧急</code>的数据,紧急数据的最后一个字节由16bit的<strong>紧急数据指针字段</strong>指出</li></ul></li></ul><ol><li><p>序号和确认号<br>序号时建立在传送的字节流之上,而<strong>不是</strong>建立在传送的报文段的序列之上的.<strong>一个报文段的序号</strong>(sequence number for a segment)因此事该报文段首字节的字节流编号<br>主机A在向主机B发送数据的同事,也许也接受来自主机B的数据.主机A填充进报文段的确认号时主机A期望从主机B收到的下一字节的序号<br>假设主机A收到来自主机B包含字节0-535和900-1000的报文段,没有收到536-899的报文段.主机A为了重新构建主机B的数据流,仍在等待字节536,因此A到B的下一个报文段将在确认号字段中包含536.引文TCP只确认该流中至第一个丢失字节为止的字节,所以TCP被称为提供<strong>累积确认</strong><br>当主机在一条TCP连接中收到失序报文段</p><ol><li>接收方立即丢弃失序报文段</li><li>(实践中采用)接收方保留失序的字节,并等待缺少的字节以填补该间隔</li></ol></li><li><p>Telnet案例</p></li></ol><h3 id="3-5-3-往返时间的估计与超时"><a href="#3-5-3-往返时间的估计与超时" class="headerlink" title="3.5.3 往返时间的估计与超时"></a>3.5.3 往返时间的估计与超时</h3><ul><li>往返时间(RTT)</li></ul><ol><li><p>估计往返时间<br>大多数TCP的实现仅在某个时刻做一次SampleRTT测量,而不是为每个发送的报文段测量一个SampleRTT<br>$EstimatedRTT=(1-\alpha)\cdot EstimatedRTT+\alpha\cdot SampleRTT$</p><ul><li>指数加权移动平均(EWMA):一个给定的SampleRTT的权值在更新的过程中呈指数型快速衰减<br>RTT偏差DevRTT,用于估算SampleRTT一般会偏离EstimatedRTT的程度:<br>$DevRTT=(1-\beta)\cdot DevRTT+\beta\cdot|SampleRTT-EstimatedRTT|$</li></ul></li><li><p>设置和管理重传超时间隔<br>$TimeoutInterval=EstimatedRTT+4\cdot DevRTT$<br>当出现超时后,TimeoutInterval值将加倍,以免即将被确认的后继报文段过早出现超时.只要收到报文段并更新EstimatedRTT,就使用上述公式再次计算TimeoutInterval</p></li></ol><h3 id="3-5-4-可靠数据传输"><a href="#3-5-4-可靠数据传输" class="headerlink" title="3.5.4 可靠数据传输"></a>3.5.4 可靠数据传输</h3><p>推荐的定时器管理过程仅使用<strong>单一</strong>的重传定时器</p><ul><li>TCP发送方的3个与发送和重传有关的主要事件<ul><li>从上层应用程序接收数据</li><li>超时事件</li><li>到达一个来自接收方的包含了有效ACK字段值的报文段</li></ul></li></ul><ol start="2"><li><p>超时间隔加倍<br>每次TCP重传时都会将下一次的超时间隔设为先前值的两倍</p></li><li><p>快速重传</p><table><thead><tr><th align="center">事件</th><th align="center">TCP接收方动作</th></tr></thead><tbody><tr><td align="center">具有所期望序号的按序报文段到达.所有在期望序号及以前的数据都已经被确认</td><td align="center">延迟的ACK.对另一个按序报文段的到达最多等待500ms.如果下一个按序报文段在这个时间间隔内没有到达,则发送一个ACK(合并ACK,降低网络流量)</td></tr><tr><td align="center">具有所期望序号的按序报文段到达.另一个按序报文段<strong>等待</strong>ACK传输</td><td align="center">立即发送单个累计ACK,以确认两个按序报文段</td></tr><tr><td align="center">比期望序号大的失序报文段到达.检测出间隔</td><td align="center">立即发送冗余ACK,指示下一个期待字节的序号(为间隔的低端的序号)</td></tr><tr><td align="center">能部分或完全填充接收数据间隔的报文段到达</td><td align="center">若该报文段起始于间隔的低端,则立即发送ACK</td></tr></tbody></table></li></ol><p>一旦收到3个冗余ACK,TCP就执行<strong>快速重传</strong></p><ol start="4"><li>回退$N$步还是选择重传<br>选择确认:TCP接收方有选择地确认失序报文段,而不是累积地确认最后一个正确接收的有序报文段<br>选择重传机制:跳过重传那些已被接收方选择性地确认过的报文段</li></ol><h3 id="3-5-5-流量控制"><a href="#3-5-5-流量控制" class="headerlink" title="3.5.5 流量控制"></a>3.5.5 流量控制</h3><ul><li><p>流量控制服务</p></li><li><p><em>拥塞控制</em></p></li></ul><p>TCP通过让<strong>发送方</strong>维护一个称为<strong>接收窗口</strong>的变量来提供流量控制.假设主机A通过一条TCP连接向主机B发送一个大文件,定义以下变量</p><ul><li>RcvBuffer:主机B为该连接分配的接收缓存的大小</li><li>LastByteRead:主机B上的应用进程从缓存读出的数据流的最后一个字节的编号</li><li>LastByteRcvd:从网络中到达的并且已放入主机B接收缓存中的数据流的最后一个字节的编号</li></ul><p>由于TCP不允许已分配的缓存溢出,下式必须成立<br>$LastByteRcvd-LastByteRead\le RcvBuffer$<br>接收窗口用rwnd表示(空闲空间)<br>$rwnd=RcvBuffer-[LastByteRcvd-LastByteRead]$</p><p>主机B通过把当前的rwnd值放入它发给主机A的报文段接收窗口字段中,通知主机A缓存中还有多少可用空间</p><p>主机A轮流跟踪2个变量LastByteSent,LastByteAcked,这两个变量之间的差LastByteSent-LastByteAcked就是主机A发送到连接中但未被确认的数据量.通过将未确认的数据量控制在rwnd以内,就可以保证主机A不会使主机B的接收缓存溢出.因此主机A必须保证$LastByteSent-LastByteAcked\le rwnd$</p><p>当主机B的接收窗口为0时,主机A继续发送只有一个字节数据的报文段.这些报文段将会被接收方确认.最终缓存将开始清空,并且确认报文里将包含一个非0的rwnd值</p><p>UDP并不提供流量控制,报文段由于缓存溢出可能在接收方丢失</p><h3 id="3-5-6-TCP连接管理"><a href="#3-5-6-TCP连接管理" class="headerlink" title="3.5.6 TCP连接管理"></a>3.5.6 TCP连接管理</h3><h2 id="3-6-拥塞控制原理"><a href="#3-6-拥塞控制原理" class="headerlink" title="3.6 拥塞控制原理"></a>3.6 拥塞控制原理</h2><h3 id="3-6-1-拥塞原因与代价"><a href="#3-6-1-拥塞原因与代价" class="headerlink" title="3.6.1 拥塞原因与代价"></a>3.6.1 拥塞原因与代价</h3><h4 id="两个发送方和一台具有无穷大缓存的路由器"><a href="#两个发送方和一台具有无穷大缓存的路由器" class="headerlink" title="两个发送方和一台具有无穷大缓存的路由器"></a>两个发送方和一台具有无穷大缓存的路由器</h4><p>当分组的到达速率接近链路容量时,分组经历巨大的排队时延</p><h4 id="两个发送方和一台具有有限缓存的路由器"><a href="#两个发送方和一台具有有限缓存的路由器" class="headerlink" title="两个发送方和一台具有有限缓存的路由器"></a>两个发送方和一台具有有限缓存的路由器</h4><p>用$\lambda_{in}$字节/秒表示应用程序将初始数据发送到套接字中的速率.运输层向网络中发送报文段(含有初始数据或重传数据)的速率用$\lambda_{in}’$字节/秒表示,$\lambda_{in}’$有时被称为网络的<strong>供给载荷</strong></p><h3 id="3-6-2-拥塞控制方法"><a href="#3-6-2-拥塞控制方法" class="headerlink" title="3.6.2 拥塞控制方法"></a>3.6.2 拥塞控制方法</h3><h2 id="3-7-TCP拥塞控制"><a href="#3-7-TCP拥塞控制" class="headerlink" title="3.7 TCP拥塞控制"></a>3.7 TCP拥塞控制</h2><h3 id="慢启动"><a href="#慢启动" class="headerlink" title="慢启动"></a>慢启动</h3><h3 id="拥塞避免"><a href="#拥塞避免" class="headerlink" title="拥塞避免"></a>拥塞避免</h3><h3 id="快速恢复"><a href="#快速恢复" class="headerlink" title="快速恢复"></a>快速恢复</h3><h3 id="TCP拥塞控制-回顾"><a href="#TCP拥塞控制-回顾" class="headerlink" title="TCP拥塞控制:回顾"></a>TCP拥塞控制:回顾</h3><h3 id="对TCP吞吐量的宏观描述"><a href="#对TCP吞吐量的宏观描述" class="headerlink" title="对TCP吞吐量的宏观描述"></a>对TCP吞吐量的宏观描述</h3><h3 id="3-7-1-公平性"><a href="#3-7-1-公平性" class="headerlink" title="3.7.1 公平性"></a>3.7.1 公平性</h3><h3 id="3-7-2-明确拥塞通告-网络辅助拥塞控制"><a href="#3-7-2-明确拥塞通告-网络辅助拥塞控制" class="headerlink" title="3.7.2 明确拥塞通告:网络辅助拥塞控制"></a>3.7.2 明确拥塞通告:网络辅助拥塞控制</h3><h1 id="4-网络层-数据平面"><a href="#4-网络层-数据平面" class="headerlink" title="4 网络层:数据平面"></a>4 网络层:数据平面</h1><h2 id="4-2-路由器工作原理-关键"><a href="#4-2-路由器工作原理-关键" class="headerlink" title="4.2 路由器工作原理(关键)"></a>4.2 路由器工作原理(关键)</h2><h3 id="4-2-1-输入端口处理和基于目的地转发"><a href="#4-2-1-输入端口处理和基于目的地转发" class="headerlink" title="4.2.1 输入端口处理和基于目的地转发"></a>4.2.1 输入端口处理和基于目的地转发</h3><ul><li><p>前缀(prefix)</p></li><li><p>最长前缀匹配规则(longest prefix matching rule):在转发表(forwarding table)中寻找最长的匹配项,冰箱与最长前缀匹配相关联的链路接口转发分组</p></li></ul><h3 id="4-2-2-交换"><a href="#4-2-2-交换" class="headerlink" title="4.2.2 交换"></a>4.2.2 交换</h3><h3 id="4-2-3-输出端口处理"><a href="#4-2-3-输出端口处理" class="headerlink" title="4.2.3 输出端口处理"></a>4.2.3 输出端口处理</h3><h3 id="4-2-4-何处出现排队"><a href="#4-2-4-何处出现排队" class="headerlink" title="4.2.4 何处出现排队"></a>4.2.4 何处出现排队</h3><ol><li><p>输入排队</p></li><li><p>输出排队</p></li></ol><h3 id="4-2-5-分组调度-packet-scheduler"><a href="#4-2-5-分组调度-packet-scheduler" class="headerlink" title="4.2.5 分组调度(packet scheduler)"></a>4.2.5 分组调度(packet scheduler)</h3><ol><li><p>先进先出(FIFO,也称为先来先服务,FCFS)</p></li><li><p>优先权排队(priority queuing)<br>每个优先权类通常都有自己的队列.当选择一个分组传输时,优先权排队规则将从队列为飞空的最高优先权类中传输一个分组.在<strong>同一优先权类</strong>的分组之间的选择通常以FIFO方式完成</p><ul><li>非抢占式优先权排队<br>一旦分组开始传输,就不能打断</li></ul></li><li><p>循环排队规则</p></li><li><p>加权公平排队(Weighted Fair Queuing, WFQ)</p></li></ol><h2 id="4-3-网际协议-关键"><a href="#4-3-网际协议-关键" class="headerlink" title="4.3 网际协议(关键)"></a>4.3 网际协议(关键)</h2><h3 id="4-3-1-IPv4数据报格式"><a href="#4-3-1-IPv4数据报格式" class="headerlink" title="4.3.1 IPv4数据报格式"></a>4.3.1 IPv4数据报格式</h3><p><img src="/img/ipv4.png"></p><ul><li><p>版本号:不同的ip版本使用不同的数据报格式</p></li><li><p>首部长度</p></li><li><p>服务类型(TOS):以便不同类型的ip数据报能相互区别开来<br>见3.7.2(网络辅助拥塞控制),9.5.2.1(促进思考的场景),9.5.3(区分服务)</p></li><li><p>数据包长度:ip数据包的总长度(首部加上数据),以字节计</p></li><li><p>标识,标志,片偏移:<em>见后</em></p></li><li><p>寿命(TTL):每当一台路由器处理数据报时,该字段的值-1.若TTL字段减为0,则该数据报必须丢弃</p></li><li><p>上层协议:指示了ip数据报的数据部分应交给哪个特定的运输层协议</p></li><li><p>首部检验和</p></li><li><p>源ip地址</p></li><li><p>目的ip地址</p></li><li><p>选项</p></li><li><p>数据</p></li></ul><h3 id="4-3-2-IPv4数据报分片"><a href="#4-3-2-IPv4数据报分片" class="headerlink" title="4.3.2 IPv4数据报分片"></a>4.3.2 IPv4数据报分片</h3><ul><li><p>最大传送单元(Maximum Transimission Unit, MTU)</p></li><li><p>片(fragment)</p></li></ul><p>IPv4的设计者将数据报的重新组装工作放到端系统中,而不是放到网络路由器中</p><ul><li><p>标识:当生成一个数据报时,发送主机在为数据报设置标识号,通常将发送的每个数据报的标识号+1</p></li><li><p>标志:最后一个片的标志比特设为0,所有其他片的标志比特设为1</p></li><li><p>片偏移:指定该片应放在初始ip数据报的哪个位置</p></li></ul><h3 id="4-3-3-IPv4编址"><a href="#4-3-3-IPv4编址" class="headerlink" title="4.3.3 IPv4编址"></a>4.3.3 IPv4编址</h3><ul><li><p>接口:主机与物理链路之间的边界叫做接口,路由器与它的任意一条链路之间的边界也叫做接口.ip要求每台主机和路由器接口拥有自己的ip地址.因此,一个ip地址与一个<strong>接口</strong>相关联,而不是与包括该接口的主机或路由器相关联</p></li><li><p>子网(subnet):互联主机接口与路由器接口的网络形成一个子网.分开主机和路由器的每个接口,产生几个隔离的网络岛,使用接口端接这些隔离的网络的端点,这些隔离的网络中的每一个都叫做一个子网</p></li><li><p>子网掩码(network mask):指示32比特中的最左侧$x$比特定义了子网地址</p></li><li><p>前缀(prefix)(或网络前缀):形式为$a.b.c.d/x$的地址的$x$最高比特构成了ip地址的网络部分,并且经常被称为该地址的前缀</p></li><li><p>无类别域间路由选择(Classless Interdomain Routing, CIDR)</p></li><li><p>分类编址(classful addressing),ABC类网络</p></li><li><p>广播地址:当一台主机发出一个目的地址为255.255.255.255的数据报时,该报文会交付给同一个网络中的所有主机</p></li></ul><ol><li><p>获取一块地址</p></li><li><p>获取主机地址:动态主机配置协议</p><ul><li>动态主机配置协议(Dynamic Host Configuration, DHCP):<br>网络管理员能够配置DHCP,使某给定主机每次与网络连接时能得到一个相同的ip地址,或者某主机将被分配一个<strong>临时的ip地址</strong>,每次与网络连接时该地址也许是不同的<br>由于DHCP具有将主机连接进一个网络的网络相关方面的自动能力,故他又常被称为<strong>即插即用协议</strong>或<strong>零配置协议</strong><br>对于一台新到达的主机而言,DHCP协议是一个4个步骤的过程<ul><li>DHCP服务器发现:客户在UDP分组中向端口67发送发现报文,该UDP分组封装在一个ip数据报中,使用广播目的地址255.255.255.255并且使用源ip地址0.0.0.0.DHCP客户将该ip数据报传递给链路层,链路层然后将该帧广播到所有与该子网连接的节点</li><li>DHCP服务器提供:DHCP服务器收到一个DHCP发现报文时,用<strong>DHCP提供报文</strong>向客户做出响应,该报文向该子网的所有节点广播,仍然使用ip广播地址255.255.255.255.每台服务器提供的报文包含有收到的发现报文的事务id,向客户推荐的ip地址,网络掩码以及<strong>ip地址租用期</strong>,服务器租用期通常设置为几小时或几天</li><li>DHCP请求:客户从一个或多个服务器提供中选择一个,并向选中的服务器提供用<strong>DHCP请求报文</strong>进行响应,回显配置的参数</li><li>DHCP ACK:服务器用<strong>DHCP ACK报文</strong>对DHCP请求报文进行响应,证实所要求的参数</li></ul></li></ul></li></ol><h3 id="4-3-4-网络地址转换-NAT"><a href="#4-3-4-网络地址转换-NAT" class="headerlink" title="4.3.4 网络地址转换(NAT)"></a>4.3.4 网络地址转换(NAT)</h3><ul><li>NAT转换表</li></ul><h3 id="4-3-5-IPv6"><a href="#4-3-5-IPv6" class="headerlink" title="4.3.5 IPv6"></a>4.3.5 IPv6</h3><p><img src="/img/ipv6.png"></p><ol><li><p>IPv6数据报格式</p><ul><li>IPv6定义的字段<ul><li>版本:IPv6将该字段值设为6</li><li>流量类型:与IPv4的TOS相似</li><li>流标签:用于标识一条数据报的流,能够对一条流中的某些数据报给出优先权</li><li>有效载荷长度:IPv6数据报中跟在定长40字节数据报首部后面的字节数量</li><li>下一个首部:标识数据报中的内容(数据字段)需要交付给哪个协议.该字段使用与IPv4首部中协议字段相同的值</li><li>跳限制:转发数据报的每台路由器将对该字段的内容-1.如果跳限制计数达到0,则该数据报将被丢弃</li><li>数据</li></ul></li><li>IPv6的变化</li><li>IPv6舍弃的字段<ul><li>分片/重新组装:IPv6不允许在中间路由器上进行分片与重新组装,这种操作只能在源/目的地执行.如果路由器收到的IPv6数据报因太大而不能转发到出链路上的话,则路由器只需丢掉该数据报,并向发送方发挥一个<code>分组太大</code>的ICMP(互联网控制报文协议)差错报文即可</li><li>首部校验和:在网络层中具有该项功能实属多余</li><li>选项:可能出现在IPv6首部中由<code>下一首部</code>指出的位置上</li></ul></li></ul></li><li><p>从IPv4到IPv6的迁移</p><ul><li>建隧道</li></ul></li></ol><h1 id="5-网络层-控制平面"><a href="#5-网络层-控制平面" class="headerlink" title="5 网络层:控制平面"></a>5 网络层:控制平面</h1><h2 id="5-2-路由选择算法"><a href="#5-2-路由选择算法" class="headerlink" title="5.2 路由选择算法"></a>5.2 路由选择算法</h2><ul><li>集中式路由选择算法/分散式路由选择算法:链路状态算法(LS),距离向量算法(DV)</li><li>静态路由选择算法/动态路由选择算法</li><li>负载敏感算法,负载迟钝的(如RIP,OSPF和BGP)</li></ul><h3 id="5-2-1-链路状态路由选择算法"><a href="#5-2-1-链路状态路由选择算法" class="headerlink" title="5.2.1 链路状态路由选择算法"></a>5.2.1 链路状态路由选择算法</h3><p>初始化:<br>&emsp;$N’=\{u\}$<br>&emsp;对$N$中所有节点$v$:<br>&emsp;&emsp;if ($v$是$u$的邻接节点)<br>&emsp;&emsp;&emsp;$D(v)=c(u,v)$<br>&emsp;&emsp;else<br>&emsp;&emsp;&emsp;$D(v)=\infty$</p><p>循环(直到($N==N’$)):<br>&emsp;在$N-N’$中找到$w$满足$D(w)$为最小值<br>&emsp;$N’=N’\cup\{w\}$<br>&emsp;更新$w$的所有不在$N’$中的邻接节点:<br>&emsp;&emsp;$D(v)=\min\{D(v),D(w)+c(w,v)\}$</p><h3 id="5-2-2-距离向量路由选择算法"><a href="#5-2-2-距离向量路由选择算法" class="headerlink" title="5.2.2 距离向量路由选择算法"></a>5.2.2 距离向量路由选择算法</h3><p>每个节点$x$维护下列路由选择信息</p><ul><li><em>对于每个邻居$v$,从$x$到直接相连邻居$v$的开销为$c(x,v)$</em></li><li>$x$的距离向量($x$到$N$中所有目的地$y$的开销估计值):$\bm{D}_x=[D_x(y):y\in N]$</li><li>$x$的每个邻居$v$的距离向量:$\bm{D}_v=[D_v(y):y\in N]$</li></ul><p>初始化:<br>&emsp;对$N$中所有节点$y$:<br>&emsp;&emsp;$D_x(y)=c(x,y)$,如果$y$不是$x$的邻接节点,则$D_x(y)=\infty$<br>&emsp;对$x$的所有邻接节点$w$:<br>&emsp;&emsp;对$N$中所有节点$y$:<br>&emsp;&emsp;&emsp;$D_w(y)=?$(<em>$\infty$</em>)<br>&emsp;对$x$的所有邻接节点$w$:<br>&emsp;&emsp;向$w$发送$x$的距离向量$\bm{D}_x$</p><p>循环:<br>&emsp;wait (有邻接节点$w$的开销发生变化/收到来自邻接节点$w$的距离向量)<br>&emsp;对$N$中所有节点$y$:<br>&emsp;&emsp;$D_x(y)=\min\{c(x,v)+D_v(y)\}$<br>&emsp;if ($D_x(y)$发生变化)<br>&emsp;&emsp;向所有邻接节点发送距离向量$\bm{D}_x=[D_x:y\in N]$</p><h2 id="5-3-因特网中自制系统内部的路由选择-OSPF-开放最短路优先"><a href="#5-3-因特网中自制系统内部的路由选择-OSPF-开放最短路优先" class="headerlink" title="5.3 因特网中自制系统内部的路由选择:OSPF(开放最短路优先)"></a>5.3 因特网中自制系统内部的路由选择:OSPF(开放最短路优先)</h2><ul><li>自治系统(AS),自治系统内部路由选择协议</li></ul><p>OSPF是一种链路状态协议,使用洪泛链路状态信息和Dijkstra最低开销路径算法,各条链路开销是由网络管理员配置的</p><p>使用OSPF时,路由器向自治系统内<strong>所有</strong>其他路由器广播路由选择信息,而不仅仅是向其相邻的路由器广播.每当一条链路的状态发生变化时(如开销的变化或连接/中断状态的变化),路由器就会广播链路状态信息.计时链路状态未发生变化,它也要周期性地广播链路状态</p><p>OSPF的优点:</p><ul><li>安全</li><li>多条相同开销的路径:当到达某目的地的多条路径具有相同的开销时,OSPF允许使用多条路径(无需仅选择单一的路径来承载所有的流量)</li><li>对单播与多播路由选择的综合支持</li><li>支持在单个AS中的层次结构</li></ul><h2 id="5-4-ISP之间的路由选择-BGP-边界网关协议-概念"><a href="#5-4-ISP之间的路由选择-BGP-边界网关协议-概念" class="headerlink" title="5.4 ISP之间的路由选择:BGP(边界网关协议)(概念)"></a>5.4 ISP之间的路由选择:BGP(边界网关协议)(概念)</h2><h3 id="5-4-1-BGP的作用"><a href="#5-4-1-BGP的作用" class="headerlink" title="5.4.1 BGP的作用"></a>5.4.1 BGP的作用</h3><p>在BGP中,分组并不是路由到一个特定的目的地址.相反,时路由到CIDR(无类别域间路由选择)化的前缀,其中每个前缀表示一个子网或一个子网的集合</p><h3 id="5-4-2-通告BGP路由信息"><a href="#5-4-2-通告BGP路由信息" class="headerlink" title="5.4.2 通告BGP路由信息"></a>5.4.2 通告BGP路由信息</h3><p>对于每个AS,每台路由器要么是一台网管路由器,要么是一台内部路由器</p><p>在BGP中,每队路由器通过使用179端口的半永久TCP连接交换路由选择信息.每条直接连接以及通过该连接发送的BGP报文,称为<strong>BGP连接</strong>.跨越两个AS的BGP连接称为<strong>外部BGP(eBGP)**连接,在相同AS中的两台路由器之间的BGP会话称为</strong>内部BGP(iBGP)**连接</p><h3 id="5-4-3-确定最好的路由"><a href="#5-4-3-确定最好的路由" class="headerlink" title="5.4.3 确定最好的路由"></a>5.4.3 确定最好的路由</h3><p>当路由器通过BGP连接通告前缀时,他在前缀中包括一些<strong>BGP属性</strong>,前缀及其属性称为<strong>路由(route)</strong>.每条BGP路由包含3个组件:<code>NEXT-HOP</code>,<code>AS-PATH</code>,目的前缀</p><p><code>AS-PATH</code>属性包含了通告已经通过的AS的列表.BGP路由器还使用<code>AS-PATH</code>属性来检测和防止通告环路,如果一台路由器在路径列表中看到包含了他自己的AS,它将拒绝该通告</p><p><code>NEXT-HOP</code>是<code>AS-PATH</code>起始的路由器接口的ip地址</p><h2 id="5-6-ICMP-因特网控制报文协议"><a href="#5-6-ICMP-因特网控制报文协议" class="headerlink" title="5.6 ICMP:因特网控制报文协议"></a>5.6 ICMP:因特网控制报文协议</h2><p>ICMP被主机和路由器用来彼此沟通网络层的信息.ICMP通常被认为是ip的一部分,但从体系结构上讲它位于ip之上.ICMP报文有一个类型字段和一个编码字段,并且包含引起该ICMP报文首次生成的ip数据报的首部和前8个字节(以便发送方能确定引发该差错的数据报)</p><p>ping程序发送一个ICMP类型8编码0的报文到指定主机,看到回显(echo)请求,目的主机发回一个类型0编码0的ICMP回显回答</p><p>ICMP报文类型:<strong>TODO</strong></p><h1 id="6-链路层和局域网"><a href="#6-链路层和局域网" class="headerlink" title="6 链路层和局域网"></a>6 链路层和局域网</h1><h2 id="6-3-多路访问链路和协议"><a href="#6-3-多路访问链路和协议" class="headerlink" title="6.3 多路访问链路和协议"></a>6.3 多路访问链路和协议</h2><ul><li><p>点对点链路</p></li><li><p>广播链路:能够让多个发送和接收节点都连接到相同的,单一的,共享的广播信道上</p></li><li><p>多路访问问题,多路访问协议</p></li><li><p>碰撞(collide):因为所有的节点都能够传输帧,所以多个节点可能会同时传输帧,所有节点同时接到多个帧.这就是说,传输的帧在所有的接收方处碰撞</p></li></ul><p>在理想情况下,对于速率为$R$bps的广播信道,多路访问协议应该具有以下所希望的特性:</p><ol><li>当仅有一个节点发送数据时,该节点具有$R$bps的吞吐量</li><li>当有$M$个节点发送数据时,每个节点在一些适当定义的时间间隔内应该有$R/M$的平均传输速率</li><li>协议是分散的:这就是说不会因某主节点故障而是整个系统崩溃</li><li>协议是简单的:实现不昂贵</li></ol><h3 id="6-3-1-信道划分协议"><a href="#6-3-1-信道划分协议" class="headerlink" title="6.3.1 信道划分协议"></a>6.3.1 信道划分协议</h3><ul><li><p>时分多路复用(TDM)</p></li><li><p>频分多路复用(FDM)</p></li><li><p>码分多址(CDMA)<br>CDMA对每个节点分配一种不同的<strong>编码</strong>,每个节点用它唯一的编码来对他发送的数据进行编码,不同的节点能够<strong>同时</strong>传输</p></li></ul><h3 id="6-3-2-随机接入协议"><a href="#6-3-2-随机接入协议" class="headerlink" title="6.3.2 随机接入协议"></a>6.3.2 随机接入协议</h3><p>当一个节点经历一次碰撞时,它在重发该帧之前等待一个随机时延,涉及碰撞的每个节点独立地选择随机时延</p><h4 id="时隙ALOHA"><a href="#时隙ALOHA" class="headerlink" title="时隙ALOHA"></a>时隙ALOHA</h4><p>假设:</p><ul><li>所有帧由$L$比特组成</li><li>时间被划分成长度为$L/R$秒的时隙</li><li>节点只在时隙起点开始传输帧</li><li>节点是同步的,每个节点都知道时隙何时开始</li><li>如果在一个时隙中有两个或者更多个帧碰撞,则所有节点在该时隙结束之前检测到该碰撞事件</li><li>如果没有碰撞,该节点成功的传输它的帧</li><li>如果有碰撞,该节点在时隙结束之前检测到这次碰撞.该节点以概率$p$在后续的每个时隙中重传它的帧,直到该帧被无碰撞地传输出去</li></ul><p>刚好有一个节点传输的时隙称为一个<strong>成功时隙</strong><br>时隙多路访问协议的<strong>效率</strong>:当有大量活跃节点且每个节点总有大量的帧要发送时,长期运行中成功时隙的份额</p><p>一个给定节点成功传送的概率是$p(1-p)^{N-1}$</p><h4 id="ALOHA"><a href="#ALOHA" class="headerlink" title="ALOHA"></a>ALOHA</h4><p>如果一个传输的帧与一个或多个传输经历了碰撞,这个节点将立即以概率$p$重传该帧</p><p>一个给定节点成功传送的概率是$p(1-p)^{2(N-1)}$</p><h4 id="载波侦听多路访问-CSMA"><a href="#载波侦听多路访问-CSMA" class="headerlink" title="载波侦听多路访问(CSMA)"></a>载波侦听多路访问(CSMA)</h4><ul><li><p>载波侦听</p></li><li><p>碰撞检测</p></li><li><p>信道传播时延</p></li></ul><h4 id="具有碰撞检测的载波侦听多路访问-CSMA-CD"><a href="#具有碰撞检测的载波侦听多路访问-CSMA-CD" class="headerlink" title="具有碰撞检测的载波侦听多路访问(CSMA/CD)"></a>具有碰撞检测的载波侦听多路访问(CSMA/CD)</h4><ol><li>适配器从网络层获得数据报,准备链路层帧,并将其放入帧适配器缓存中</li><li>如果适配器侦听到信道空闲,它开始传输帧.如果适配器侦听到信道正在忙,他将等待,直到侦听到没有信号能量时才开始传输帧</li><li>在传输过程中,适配器监视来自其他使用该广播信道的适配器的信号能量的存在</li><li>如果适配器在传输时检测到来自其他适配器的信号能量,他中止传输</li><li>中止传输后,适配器等待一个随机的时间量,然后返回步骤2</li></ol><ul><li>二进制指数后退算法<br>当传输一个给定帧时,该帧经历了$n$次碰撞后,节点随机地从$\{0, 1, 2, \cdots, 2^n-1\}$中选择一个$K$值<br>对于以太网,一个节点等待的实际时间量是$K\cdot 512$比特时间($K$被发送512比特进入以太网所需的时间量)</li></ul><h3 id="6-3-3-轮流协议"><a href="#6-3-3-轮流协议" class="headerlink" title="6.3.3 轮流协议"></a>6.3.3 轮流协议</h3><ul><li><p>轮询协议</p><ul><li>轮询时延:每次活跃节点发送了它最多数量的帧时,主节点必须依次轮询每一个非活跃的节点</li><li>如果主节点有故障,整个信道都变得不可操作</li></ul></li><li><p>令牌传递协议</p><ul><li>一个节点的故障可能会使整个信道崩溃</li></ul></li></ul><h2 id="6-4-交换局域网"><a href="#6-4-交换局域网" class="headerlink" title="6.4 交换局域网"></a>6.4 交换局域网</h2><h3 id="6-4-1-链路层寻址和ARP"><a href="#6-4-1-链路层寻址和ARP" class="headerlink" title="6.4.1 链路层寻址和ARP"></a>6.4.1 链路层寻址和ARP</h3><h4 id="MAC地址"><a href="#MAC地址" class="headerlink" title="MAC地址"></a>MAC地址</h4><p>并不是主机或路由器具有链路层地址,而是他们的适配器(网络接口)具有链路层地址</p><p>LAN地址,物理地址,MAC地址</p><p>没有两块适配器具有相同的地址</p><p>适配器的MAC地址具有扁平结构,不论适配器到哪里都不会变化</p><p>当某适配器要向某些目的适配器发送一个帧时,发送适配器将目的适配器的MAC地址插入到该帧中,并将该帧发送到局域网上.一块适配器可以接收一个并非向它寻址的帧.当适配器接收到一个帧时,将检查该帧中的目的MAC地址是否与他自己的MAC地址匹配.如果匹配,该适配器提取出封装的数据报,并将该数据报沿协议栈向上传递.如果不匹配,该适配器丢弃该帧</p><ul><li>MAC广播地址:<code>FF-FF-FF-FF-FF-FF</code></li></ul><h4 id="地址解析协议-ARP"><a href="#地址解析协议-ARP" class="headerlink" title="地址解析协议(ARP)"></a>地址解析协议(ARP)</h4><p>假设交换机广播所有帧</p><p>在发送主机中的ARP模块将取在相同局域网上的任何ip地址作为输入,然后返回相应的MAC地址</p><p>ARP将一个ip地址解析为一个MAC地址.ARP只为在同一个子网上的主机和路由器接口解析ip地址</p><p>每台主机或路由器在其内存中具有一个<strong>ARP表</strong>,这张表包含ip地址到MAC地址的映射关系.从一个表项放置到某ARP表中开始,一个表项通常的过期时间是20分钟</p><p>ARP分组有几个字段,包括发送和接收ip地址及MAC地址.ARP查询分组和响应分组都具有相同的格式.ARP查询分组的目的是询问子网上所有其他主机和路由器,以确定对应于要解析的ip地址的那个MAC地址<br>如果ARP表中当前没有目的主机的表项:发送方向它的适配器传递一个ARP查询分组,并且指示适配器应该用MAC广播地址(<code>FF-FF-FF-FF-FF-FF</code>)来发送这个分组.适配器在链路层帧中封装这个ARP分组,用广播地址作为帧的目的地址,并将该帧传输进子网中<br>包含该ARP查询的帧能被子网上所有其他的适配器接收到,并且每个适配器都把在该帧中的ARP分组向上传递给ARP模块.这些ARP模块中的每个都检查它的ip地址是否与ARP分组中的ip地址相匹配.与之匹配的一个给查询主机发送回一个带有所希望映射的相应ARP分组.然后查询主机能够更新它的ARP表</p><h4 id="发送数据报到子网以外"><a href="#发送数据报到子网以外" class="headerlink" title="发送数据报到子网以外"></a>发送数据报到子网以外</h4><p>一台路由器对它的<strong>每个</strong>接口都有一个ip地址.对路由器的每个接口,在路由器中也有一个ARP模块和一个适配器</p><p><strong>具体例子见教材</strong></p><h3 id="6-4-2-以太网"><a href="#6-4-2-以太网" class="headerlink" title="6.4.2 以太网"></a>6.4.2 以太网</h3><ul><li><p>集线器(hub)</p></li><li><p>交换机(switch)</p></li></ul><h4 id="以太网帧结构"><a href="#以太网帧结构" class="headerlink" title="以太网帧结构"></a>以太网帧结构</h4><p><img src="/img/ethernet.png"></p><p>发送适配器在一个以太网帧中封装了一个ip数据报,并把该帧传递到物理层</p><p>以太网帧的6个字段</p><ul><li>数据字段(46-1500字节):承载ip数据报.如果ip数据报小于46字节,数据报必须被填充到46字节</li><li>目的地地址(6字节):目的适配器的MAC地址</li><li>源地址(6字节):传输该帧到局域网上的适配器的MAC地址</li><li>类型字段(2字节):允许以太网复用多种网络层协议.ip和其他链路层协议都有各自的标准化的类型编号</li><li>CRC(4字节):循环冗余检测</li><li>前同步码(8字节):以太网帧以一个8字节的前同步码字段开始.前同步码的前7字节的值都是10101010,最后一个字节是10101011.前同步码字段的前7字节用于唤醒接收适配器,并且将它们的时钟和发送方的时钟同步</li></ul><h4 id="以太网技术"><a href="#以太网技术" class="headerlink" title="以太网技术"></a>以太网技术</h4><ul><li>转发器(repeater):是一种物理层设备,能在输入端接收信号并在输出端再生该信号</li></ul><p>在基于交换机的以太局域网中,不会有碰撞,因此没有必要使用MAC协议了</p><h3 id="6-4-3-链路层交换机"><a href="#6-4-3-链路层交换机" class="headerlink" title="6.4.3 链路层交换机"></a>6.4.3 链路层交换机</h3><h4 id="交换机转发和过滤"><a href="#交换机转发和过滤" class="headerlink" title="交换机转发和过滤"></a>交换机转发和过滤</h4><p>交换机表中的表项包括:</p><ol><li>一个MAC地址</li><li>通向该MAC地址的交换机接口</li><li>表项放置在表中的时间</li></ol><p>假定目的地址为<code>DD-DD-DD-DD-DD-DD</code>的帧从交换机接口$x$到达,交换机用MAC地址<code>DD-DD-DD-DD-DD-DD</code>索引它的表:</p><ul><li>表中没有对于<code>DD-DD-DD-DD-DD-DD</code>的表项,交换机广播该帧</li><li>表中有一个表项将<code>DD-DD-DD-DD-DD-DD</code>与接口$x$联系起来,交换机通过丢弃该帧执行过滤功能即可</li><li>表中有一个表项将<code>DD-DD-DD-DD-DD-DD</code>与接口$y\not=x$联系起来,交换机通过将该帧放到接口$y$前面的输出缓存完成转发功能</li><li>表中</li></ul><h4 id="自学习"><a href="#自学习" class="headerlink" title="自学习"></a>自学习</h4><ol><li>交换机表初始为空</li><li>对于每个接口接收到的每个入帧,该交换机在其表中存储:<ol><li>该帧<strong>源地址</strong>字段中的MAC地址</li><li>该帧到达的接口</li><li>当前时间</li></ol></li><li>如果在一段时间(老化期)后,交换机没有收到以该地址作为源地址的帧,就在表中删除这个地址</li></ol><p>交换机时<strong>即插即用设备</strong>,他们不需要网络管理员或用户的干预</p><h4 id="链路层交换机的性质"><a href="#链路层交换机的性质" class="headerlink" title="链路层交换机的性质"></a>链路层交换机的性质</h4><ul><li><p>消除碰撞:在使用交换机构建的局域网中,没有因碰撞而浪费的带宽.交换机的最大聚合带宽时该交换机所有接口速率之和</p></li><li><p>异质的链路:交换机将链路彼此隔离,因此局域网中的不同链路能够以不同的速率运行并且能够在不同的媒体上运行</p></li><li><p>管理</p></li></ul><h4 id="交换机和路由器比较"><a href="#交换机和路由器比较" class="headerlink" title="交换机和路由器比较"></a>交换机和路由器比较</h4><p>交换机</p><ul><li>优点<ul><li>交换机时即插即用的</li><li>交换机必须处理到高至第二层(链路层)的帧,路由器必须处理高至第三层(网络层)的帧</li></ul></li><li>缺点<ul><li>为了防止广播帧的循环,交换网络的活跃拓普限制为医科生成树</li><li>一个大型交换网络将要求在主机和路由器中有大的ARP表,这将生成可观的ARP流量和处理量</li></ul></li></ul><p>路由器</p><ul><li>优点<ul><li>网络寻址通常是分层次的,即使网络中存在冗余路径,分组通常也不会通过路由器循环(ip用寿命字段来限制循环).所以,分组不会限制到一颗生成树上,并可以使用源和目的地之间的最佳路径</li><li>他们对第二层的广播风暴提供了防火墙保护</li></ul></li><li>缺点<ul><li>路由器和连接到他们的主机都需要人为地配置ip地址</li><li>路由器对每个分组的处理时间通常比交换机更长</li></ul></li></ul><h3 id="6-4-4-虚拟局域网"><a href="#6-4-4-虚拟局域网" class="headerlink" title="6.4.4 虚拟局域网"></a>6.4.4 虚拟局域网</h3><p><strong>TODO</strong></p><h1 id="7-无线网络和移动网络"><a href="#7-无线网络和移动网络" class="headerlink" title="7 无线网络和移动网络"></a>7 无线网络和移动网络</h1><h2 id="7-3-Wifi-802-11无线LAN-概念"><a href="#7-3-Wifi-802-11无线LAN-概念" class="headerlink" title="7.3 Wifi:802.11无线LAN(概念)"></a>7.3 Wifi:802.11无线LAN(概念)</h2><p>在IEEE 802.11协议族中几套有关无线LAN的802.11标准都使用相同的媒体访问协议CSMA/CA</p><h3 id="7-3-1-802-11-体系结构"><a href="#7-3-1-802-11-体系结构" class="headerlink" title="7.3.1 802.11 体系结构"></a>7.3.1 802.11 体系结构</h3><p>802.11体系结构的基本构建模块是<strong>基本服务集(BSS)</strong>.一个BSS包含一个或多个无线站点和一个称为**接入点(AP)**的中央基站</p><p>配置AP的无线LAN经常被称作<strong>基础设施无线LAN</strong>,其中的基础设施是指AP,互联AP和一台路由器的有限以太网</p><h4 id="信道与关联"><a href="#信道与关联" class="headerlink" title="信道与关联"></a>信道与关联</h4><p>在802.11中,每个无线站点在能够发送或者接收网络层数据之前,必须与一个AP相<strong>关联</strong></p><p>当网络管理员安装一个AP时,管理员为该接入点分配一个单字或双字的<strong>服务集标识符(SSID)</strong></p><ul><li>Wifi丛林</li></ul><p>802.11标准要求每个AP周期性地发送<strong>信标帧</strong>,每个信标帧包括该AP的SSID和MAC地址</p><p>扫描信道和监听信标帧的过程被称为<strong>被动扫描</strong>.无线主机也能够执行<strong>主动扫描</strong>,这是通过向位于无线主机范围内的所有AP广播探测帧完成的.AP用一个探测响应帧应答探测请求帧.无线主机则能够在响应的AP中选择某AP与之相关联</p><p>选定与之关联的AP后,无线主机向AP发送一个关联请求帧,并且该AP以一个关联响应帧进行响应.对于主动扫描需要这种第二次请求/响应握手.一旦与一个AP关联,该主机希望加入该AP所属的子网中,该主机通常将通过关联的AP向该子网发送一个DHCP发现报文(间DHCP协议)以获取在该AP子网中的一个ip地址</p><p>为了与特定的AP创建一个关联,某无线站点可能要向该AP鉴别他自身.802.11无线LAN提供了几种不同的鉴别和接入方法</p><ol><li>基于一个站点的MAC地址允许其接入一个无线网络</li><li>应用用户名和口令</li></ol><h3 id="7-3-2-802-11-MAC协议"><a href="#7-3-2-802-11-MAC协议" class="headerlink" title="7.3.2 802.11 MAC协议"></a>7.3.2 802.11 MAC协议</h3><p>将无线设备或AP称为<strong>站点</strong></p><ul><li>带碰撞避免的CSMA(CSMA/CA)</li></ul><p>两种MAC协议的区别</p><ul><li>802.11使用碰撞避免而非碰撞检测</li><li>由于无线信道相对较高的误比特率,802.11使用链路层确认/重传(ARQ)方案</li></ul><p>802.11<strong>未</strong>实现碰撞检测的原因</p><ul><li>检测碰撞的能力要求站点具有同时发送和接收的能力.因为在802.11适配器上,接收信号的强度通常远远小于发送信号的强度,制造具有监测碰撞能力的硬件代价较大</li><li>适配器会由于隐藏终端问题和衰减问题而无法检测到所有的碰撞</li></ul><p>由于802.11无线局域网不使用碰撞检测,一旦站点开始发送一个帧,就不会返回</p><p>假设一个站点(无线站点或者AP)有一个帧要发送</p><ol><li>如果某站点最初监听到信道空闲,他将在一个被称作**分布式帧间间隔(DIFS)**的短时间段后发送该帧</li><li>否则,该站点选取一个随机回退值,并且在侦听信道空闲时递减该值</li><li>当计数值减为0时,该站点发送整个数据帧并等待确认</li><li>如果收到确认<ul><li>如果要发送另一帧,将从第2步开始CSMA/CA协议</li><li>如果未收到确认,发送站点将重新进入第二步中的回退阶段,并从一个更大的范围内选取该随机值</li></ul></li></ol><p>802.11的<strong>链路层确认</strong>方案:目的站点收到一个通过CRC校验的帧后,他等待一个称作**短帧间间隔(SIFS)**的一小段时间,然后发回一个确认帧.如果发送站点在给定的时间内未收到确认帧,它假定出现了错误并重传该帧.如果在若干固定次重传后仍未收到确认,发送站点将放弃发送并丢弃该帧</p><h4 id="处理隐藏终端-RTS和CTS"><a href="#处理隐藏终端-RTS和CTS" class="headerlink" title="处理隐藏终端:RTS和CTS"></a>处理隐藏终端:RTS和CTS</h4><p>IEEE 802.11协议允许站点使用一个短<strong>请求发送(RTS)**控制帧和一个短</strong>允许发送(CTS)<strong>控制帧来</strong>预约**对信道的访问.当发送方要发送一个DATA帧时,它能够首先向AP发送一个RTS帧,指示传输DATA帧和确认(ACK)帧需要的总时间.当AP收到RTS帧后,他广播一个CTS作为响应:该发送方明确发送许可,指示其他站点在预约期内不要发送</p><p>RTS/CTS交换仅仅用于为长数据帧预约信道.每个无线站点可以设置一个RTS门限值,仅当帧长超过门限值时,才使用RTS/CTS序列</p><h4 id="使用802-11作为一个点对点链路"><a href="#使用802-11作为一个点对点链路" class="headerlink" title="使用802.11作为一个点对点链路"></a>使用802.11作为一个点对点链路</h4><h3 id="7-3-3-IEEE-802-11帧"><a href="#7-3-3-IEEE-802-11帧" class="headerlink" title="7.3.3 IEEE 802.11帧"></a>7.3.3 IEEE 802.11帧</h3><p><img src="/img/802.11.png"></p><ol><li><p>有效载荷与CRC字段</p></li><li><p>地址字段</p></li><li><p>序号,持续期和帧控制字段</p></li></ol><h3 id="7-3-4-在相同的ip子网中的移动性"><a href="#7-3-4-在相同的ip子网中的移动性" class="headerlink" title="7.3.4 在相同的ip子网中的移动性"></a>7.3.4 在相同的ip子网中的移动性</h3><p><strong>TODO</strong></p><h3 id="7-3-5-802-11中的高级特色"><a href="#7-3-5-802-11中的高级特色" class="headerlink" title="7.3.5 802.11中的高级特色"></a>7.3.5 802.11中的高级特色</h3><h3 id="7-3-6-个人域网络-蓝牙和ZigBee"><a href="#7-3-6-个人域网络-蓝牙和ZigBee" class="headerlink" title="7.3.6 个人域网络:蓝牙和ZigBee"></a>7.3.6 个人域网络:蓝牙和ZigBee</h3><ol><li><p>蓝牙</p></li><li><p>ZigBee</p></li></ol><h1 id="9-多媒体网络"><a href="#9-多媒体网络" class="headerlink" title="9 多媒体网络"></a>9 多媒体网络</h1><h2 id="9-1-多媒体网络应用"><a href="#9-1-多媒体网络应用" class="headerlink" title="9.1 多媒体网络应用"></a>9.1 多媒体网络应用</h2><h3 id="9-1-1-视频的性质"><a href="#9-1-1-视频的性质" class="headerlink" title="9.1.1 视频的性质"></a>9.1.1 视频的性质</h3><h3 id="9-1-2-音频的性质"><a href="#9-1-2-音频的性质" class="headerlink" title="9.1.2 音频的性质"></a>9.1.2 音频的性质</h3><h3 id="9-1-3-多媒体网络应用的类型"><a href="#9-1-3-多媒体网络应用的类型" class="headerlink" title="9.1.3 多媒体网络应用的类型"></a>9.1.3 多媒体网络应用的类型</h3><ol><li><p>流式存储音频和视频</p></li><li><p>会话式ip语音和视频</p></li><li><p>流式实况音频和视频</p></li></ol><h2 id="9-2-流式存储视频"><a href="#9-2-流式存储视频" class="headerlink" title="9.2 流式存储视频"></a>9.2 流式存储视频</h2><h3 id="9-2-1-UDP流"><a href="#9-2-1-UDP流" class="headerlink" title="9.2.1 UDP流"></a>9.2.1 UDP流</h3><h3 id="9-2-2-HTTP流"><a href="#9-2-2-HTTP流" class="headerlink" title="9.2.2 HTTP流"></a>9.2.2 HTTP流</h3><ol><li><p>预取视频</p></li><li><p>客户应用缓存和TCP缓存</p></li><li><p>流式视频的分析</p></li></ol><p>$B$表示客户应用缓存的长度,$Q$表示客户应用缓存开始播放之前必须被缓存的比特数量,$r$表示视频消耗速率.$t_p,t_f$<strong>TODO</strong></p><ol start="4"><li>视频的早期中止和重定位</li></ol><h2 id="9-3-ip语音"><a href="#9-3-ip语音" class="headerlink" title="9.3 ip语音"></a>9.3 ip语音</h2><h3 id="9-3-1-尽力而无服务的限制"><a href="#9-3-1-尽力而无服务的限制" class="headerlink" title="9.3.1 尽力而无服务的限制"></a>9.3.1 尽力而无服务的限制</h3><ol><li><p>丢包</p></li><li><p>端到端时延</p></li><li><p>分组时延抖动</p></li></ol><h3 id="9-3-2-在接收方消除音频的时延抖动"><a href="#9-3-2-在接收方消除音频的时延抖动" class="headerlink" title="9.3.2 在接收方消除音频的时延抖动"></a>9.3.2 在接收方消除音频的时延抖动</h3><ol><li><p>固定播放时延</p></li><li><p>实验性播放时延</p></li></ol><h3 id="9-3-3-从丢包中恢复"><a href="#9-3-3-从丢包中恢复" class="headerlink" title="9.3.3 从丢包中恢复"></a>9.3.3 从丢包中恢复</h3><ol><li><p>向前纠错</p></li><li><p>交织</p></li><li><p>差错掩盖</p></li></ol><h2 id="9-4-实时会话式应用的协议"><a href="#9-4-实时会话式应用的协议" class="headerlink" title="9.4 实时会话式应用的协议"></a>9.4 实时会话式应用的协议</h2><h3 id="9-4-1-RTP"><a href="#9-4-1-RTP" class="headerlink" title="9.4.1 RTP"></a>9.4.1 RTP</h3><h3 id="9-4-2-SIP"><a href="#9-4-2-SIP" class="headerlink" title="9.4.2 SIP"></a>9.4.2 SIP</h3>]]></content>
      
      
      <categories>
          
          <category> 计算机网络 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>cmake笔记</title>
      <link href="/2019/11/25/cmake%E7%AC%94%E8%AE%B0/"/>
      <url>/2019/11/25/cmake%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h1><h2 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h2><h3 id="命令行"><a href="#命令行" class="headerlink" title="命令行"></a>命令行</h3><p><a href="https://blog.csdn.net/darkdong/article/details/6102104">参考:CSDN</a></p><ul><li>指定生成器</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cmake -G <span class="string">&quot;Ninja&quot;</span></span><br></pre></td></tr></table></figure><ul><li>添加变量</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cmake -DANROID</span><br></pre></td></tr></table></figure><ul><li>删除<code>CMakeCache.txt</code>变量</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cmake -UANDROID</span><br></pre></td></tr></table></figure><h3 id="CMakeList"><a href="#CMakeList" class="headerlink" title="CMakeList"></a>CMakeList</h3><ul><li><p>环境变量:<code>$ENV&#123;PATH&#125;</code></p></li><li><p>编译选项</p><ul><li><code>CMAKE_CXX_FLAGS</code></li></ul></li><li><p>输出目录</p><ul><li><code>CMAKE_ARCHIVE_OUTPUT_DIRECTORY</code></li><li><code>CMAKE_LIBRARY_OUTPUT_DIRECTORY</code></li><li><code>LIBRARY_OUTPUT_DIRECTORY</code></li><li><code>CMAKE_RUNTIME_OUTPUT_DIRECTORY</code></li></ul></li></ul><h3 id="GUI的参数导出"><a href="#GUI的参数导出" class="headerlink" title="GUI的参数导出"></a>GUI的参数导出</h3><p>在对应目录的<code>CMakeCache.txt</code>中查找</p><h1 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h1><h2 id="add-custom-command"><a href="#add-custom-command" class="headerlink" title="add_custom_command"></a><code>add_custom_command</code></h2><p><strong>TODO</strong></p><h2 id="execute-process"><a href="#execute-process" class="headerlink" title="execute_process"></a><code>execute_process</code></h2><figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="keyword">execute_process</span>(<span class="keyword">COMMAND</span> &lt;cmd1&gt; [args1...]]</span><br><span class="line">                [<span class="keyword">COMMAND</span> &lt;cmd2&gt; [args2...] [...]]</span><br><span class="line">                [WORKING_DIRECTORY &lt;directory&gt;]</span><br><span class="line">                [TIMEOUT &lt;seconds&gt;]</span><br><span class="line">                [RESULT_VARIABLE &lt;variable&gt;]</span><br><span class="line">                [OUTPUT_VARIABLE &lt;variable&gt;]</span><br><span class="line">                [ERROR_VARIABLE &lt;variable&gt;]</span><br><span class="line">                [INPUT_FILE &lt;<span class="keyword">file</span>&gt;]</span><br><span class="line">                [OUTPUT_FILE &lt;<span class="keyword">file</span>&gt;]</span><br><span class="line">                [ERROR_FILE &lt;<span class="keyword">file</span>&gt;]</span><br><span class="line">                [OUTPUT_QUIET]</span><br><span class="line">                [ERROR_QUIET]</span><br><span class="line">                [OUTPUT_STRIP_TRAILING_WHITESPACE]</span><br><span class="line">                [ERROR_STRIP_TRAILING_WHITESPACE])</span><br></pre></td></tr></table></figure><h2 id="aux-source-directory"><a href="#aux-source-directory" class="headerlink" title="aux_source_directory"></a><code>aux_source_directory</code></h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">aux_source_directory(</span><br><span class="line">  dir variable</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>添加<code>dir</code>下所有源文件(<code>c</code>/<code>cpp</code>)至<code>variable</code></p><h2 id="add-library"><a href="#add-library" class="headerlink" title="add_library"></a><code>add_library</code></h2><figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="keyword">add_library</span>(</span><br><span class="line">  <span class="comment"># 1</span></span><br><span class="line">  lib_name </span><br><span class="line">  <span class="comment"># 2</span></span><br><span class="line">  STATIC | SHARED | MODULE</span><br><span class="line">  <span class="comment"># 3</span></span><br><span class="line">  <span class="comment"># 4</span></span><br><span class="line">  source.cpp</span><br><span class="line">  source.h)</span><br></pre></td></tr></table></figure><ol><li>库名</li><li>库文件类型</li><li><strong>TODO</strong></li><li>源文件</li></ol><h2 id="link-directories"><a href="#link-directories" class="headerlink" title="link_directories"></a><code>link_directories</code></h2><p><strong>TODO</strong></p><h2 id="target-link-libraries"><a href="#target-link-libraries" class="headerlink" title="target_link_libraries"></a><code>target_link_libraries</code></h2><figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="keyword">target_link_libraries</span>(</span><br><span class="line">  <span class="comment"># 1</span></span><br><span class="line">  <span class="keyword">target</span></span><br><span class="line">  <span class="comment"># 2</span></span><br><span class="line">  liba</span><br><span class="line">  libb</span><br><span class="line">  <span class="comment"># 3</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><ol><li>通过<code>add_executable</code>和<code>add_library</code>生成的目标文件</li><li>库文件,无后缀名</li><li><strong>TODO</strong></li></ol><h2 id="find-library"><a href="#find-library" class="headerlink" title="find_library"></a><code>find_library</code></h2><p><strong>TODO</strong></p><h2 id="find-package"><a href="#find-package" class="headerlink" title="find_package"></a><code>find_package</code></h2><p><a href="https://www.jianshu.com/p/39fc5e548310">参考:简书</a></p><p>对于要查找的package,名为<code>package</code></p><ul><li>先要设置路径:<code>set(package_DIR 路径)</code></li><li>然后进行查找<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="keyword">find_package</span> (package REQUIRED)</span><br></pre></td></tr></table></figure></li><li>找到的lib将存放在<code>package_LIBS</code>中</li></ul><h2 id="include-directories"><a href="#include-directories" class="headerlink" title="include_directories"></a><code>include_directories</code></h2><figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="keyword">include_directories</span>(</span><br><span class="line">  <span class="comment"># 1 </span></span><br><span class="line">  ./dir1</span><br><span class="line">  ./dir2</span><br><span class="line">  <span class="comment"># 2</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><ol><li>添加头文件目录</li><li><strong>TODO</strong></li></ol><h2 id="add-executable"><a href="#add-executable" class="headerlink" title="add_executable"></a><code>add_executable</code></h2><figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 1</span></span><br><span class="line"><span class="keyword">target</span></span><br><span class="line"><span class="comment"># 2</span></span><br><span class="line"><span class="comment"># 3</span></span><br><span class="line"><span class="comment"># 4</span></span><br><span class="line">source.cpp</span><br><span class="line">source.h</span><br></pre></td></tr></table></figure><ol><li>目标文件</li><li><strong>TODO</strong></li><li><strong>TODO</strong></li><li>源文件</li></ol><h1 id="调试"><a href="#调试" class="headerlink" title="调试"></a>调试</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cmake --debug-output</span><br><span class="line">cmake --trace</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> cmake </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jni笔记</title>
      <link href="/2019/11/21/jni%E7%AC%94%E8%AE%B0/"/>
      <url>/2019/11/21/jni%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="jni与java间的交互"><a href="#jni与java间的交互" class="headerlink" title="jni与java间的交互"></a><code>jni</code>与<code>java</code>间的交互</h1><h2 id="jni获取-修改jobject成员"><a href="#jni获取-修改jobject成员" class="headerlink" title="jni获取/修改jobject成员"></a><code>jni</code>获取/修改<code>jobject</code>成员</h2><p><a href="https://blog.csdn.net/jiangwei0910410003/article/details/17465457">参考:CSDN</a></p><h2 id="java与c变量转换"><a href="#java与c变量转换" class="headerlink" title="java与c变量转换"></a><code>java</code>与<code>c</code>变量转换</h2><ul><li><code>jstring</code>-&gt;<code>char *</code>:<a href="https://stackoverflow.com/questions/4181934/jni-converting-jstring-to-char">stackoverflow</a></li></ul><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function">JNIEXPORT <span class="keyword">void</span> JNICALL <span class="title">Java_ClassName_MethodName</span><span class="params">(JNIEnv *env, jobject obj, jstring javaString)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">const</span> <span class="keyword">char</span> *nativeString = (*env)-&gt;GetStringUTFChars(env, javaString, <span class="number">0</span>);</span><br><span class="line">  (*env)-&gt;ReleaseStringUTFChars(env, javaString, nativeString);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="javaString-gt-c"><a href="#javaString-gt-c" class="headerlink" title="javaString[]-&gt;c"></a>java<code>String[]</code>-&gt;c</h2><p><a href="https://blog.csdn.net/night_iv/article/details/76071686">参考:CSDN</a></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">native</span> <span class="keyword">void</span> <span class="title">sendString</span><span class="params">(String[] imgPaths)</span></span>;<span class="comment">// 函数声明</span></span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">JNIEXPORT <span class="keyword">void</span> JNICALL</span><br><span class="line">Java_com_example_stitch_MainActivity_sendString(</span><br><span class="line">    JNIEnv *env,</span><br><span class="line">    jobject thiz,</span><br><span class="line">    jobjectArray imgPaths) &#123;</span><br><span class="line">  <span class="comment">// 获取String数组长度</span></span><br><span class="line">  jsize str_len = env-&gt;GetArrayLength(imgPaths);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; str_len; i ++) &#123;</span><br><span class="line">    jstring tmp = (jstring) env-&gt;GetObjectArrayElement(imgPaths, i);</span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">char</span> *img_path = env-&gt;GetStringUTFChars(tmp, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    LOG(<span class="string">&quot;img[%d]: %s&quot;</span>, i, img_path);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="javaMat-gt-cMat"><a href="#javaMat-gt-cMat" class="headerlink" title="javaMat-&gt;cMat"></a>java<code>Mat</code>-&gt;c<code>Mat</code></h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">native</span> <span class="keyword">void</span> <span class="title">findPoint</span><span class="params">(String imgPath, <span class="keyword">long</span> result)</span></span>;<span class="comment">// 函数声明</span></span><br><span class="line"></span><br><span class="line">... &#123;<span class="comment">// 函数调用</span></span><br><span class="line">  findPoint(appPath + <span class="string">&quot;/img0.png&quot;</span>, matBGR.getNativeObjAddr());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">extern</span> <span class="string">&quot;C&quot;</span></span><br><span class="line">JNIEXPORT <span class="keyword">void</span> JNICALL</span><br><span class="line">Java_com_example_stitch_MainActivity_findPoint(</span><br><span class="line">        JNIEnv *env,</span><br><span class="line">        jobject thiz,</span><br><span class="line">        jstring imgPath,</span><br><span class="line">        jlong result) &#123;</span><br><span class="line">  *(Mat *)result = mat.clone();<span class="comment">// 一定要用clone()</span></span><br><span class="line">  umat.copyTo(*(Mat *)result);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="jni的opencvmat与javaBitmap互转"><a href="#jni的opencvmat与javaBitmap互转" class="headerlink" title="jni的opencvmat与javaBitmap互转"></a><code>jni</code>的opencv<code>mat</code>与java<code>Bitmap</code>互转</h2><p><a href="https://www.jianshu.com/p/08dcc910b088">参考:简书</a></p><h2 id="jni新建图片返回到java"><a href="#jni新建图片返回到java" class="headerlink" title="jni新建图片返回到java"></a><code>jni</code>新建图片返回到<code>java</code></h2><p><strong>TODO</strong></p><p><a href="http://dontcry2013.github.io/2016/04/22/ocr-android-bitmap/">参考</a><br><a href="http://stackoverflow.com/questions/14398670/rotating-a-bitmap-using-jni-ndk">stackoverflow</a></p><h2 id="jni调用java类的函数"><a href="#jni调用java类的函数" class="headerlink" title="jni调用java类的函数"></a><code>jni</code>调用<code>java</code>类的函数</h2><ul><li>使用<code>Message</code>回调进行UI修改:<a href="http://blog.sina.com.cn/s/blog_4b650d650100moda.html">sina</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> android </tag>
            
            <tag> jni </tag>
            
            <tag> ndk </tag>
            
            <tag> opencv </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>stitch笔记</title>
      <link href="/2019/11/17/stitch%E7%AC%94%E8%AE%B0/"/>
      <url>/2019/11/17/stitch%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="代码分析"><a href="#代码分析" class="headerlink" title="代码分析"></a>代码分析</h1><h2 id="特征点查找"><a href="#特征点查找" class="headerlink" title="特征点查找"></a>特征点查找</h2><p>默认使用<code>orb</code>算法,默认情况下还能够支持<code>akaze</code>算法.在安装了扩展模块后还能选择<code>surf</code>和<code>sift</code>算法</p><p><code>computeImageFeatures</code></p><h2 id="特征点匹配"><a href="#特征点匹配" class="headerlink" title="特征点匹配"></a>特征点匹配</h2><h3 id="匹配方法的选择"><a href="#匹配方法的选择" class="headerlink" title="匹配方法的选择"></a>匹配方法的选择</h3><ul><li><code>homography</code></li></ul><p>默认调用<code>BestOf2NearestMatcher</code>,可选<code>BestOf2NearestRangeMatcher</code></p><ul><li><code>affine</code></li></ul><p>调用<code>AffineBestOf2NearestMatcher</code>.使用该方法进行匹配时会多丢弃一些图片</p><h3 id="舍弃认为不属于同一张全景图的图片"><a href="#舍弃认为不属于同一张全景图的图片" class="headerlink" title="舍弃认为不属于同一张全景图的图片"></a>舍弃认为不属于同一张全景图的图片</h3><p><code>leaveBiggestComponent</code></p><h2 id="相机参数评估"><a href="#相机参数评估" class="headerlink" title="相机参数评估"></a>相机参数评估</h2><h3 id="estimate-estimate"><a href="#estimate-estimate" class="headerlink" title="estimate::estimate"></a><code>estimate::estimate</code></h3><ul><li><p><code>AffineBasedEstimator</code></p></li><li><p>默认<code>HomographyBasedEstimator</code></p></li></ul><p>焦距评估:当评估计算得到多个焦距f时,可取这些f的中位数作为所有相机的焦距</p><p>计算最大生成树:以中心节点的图像为基准,计算其他图像与该图像的旋转矩阵</p><h3 id="BundleAdjusterBase-estimate"><a href="#BundleAdjusterBase-estimate" class="headerlink" title="BundleAdjusterBase::estimate"></a><code>BundleAdjusterBase::estimate</code></h3><p>基于以上方法,我们得到了相机的内外参数,但这样得到的参数忽略了多个图像间的约束,而且会产生累计误差.这时,我们就需要用到光束平差法(Bundle Adjustment)来精确化相机参数</p><ul><li><p><code>BundleAdjusterReproj</code>:光束平差法的重映射方法</p></li><li><p>默认<code>BundleAdjusterRay</code>:光束平差法的射线发散方法</p></li><li><p><code>BundleAdjusterAffinePartial</code></p></li></ul><p>细化相机参数</p><h3 id="波形矫正"><a href="#波形矫正" class="headerlink" title="波形矫正"></a>波形矫正</h3><p>光束平差法会引起波形效应,即拼接的图像会呈现蛇形分布,这是因为真实拍摄相片时不大可能都保持水平而不倾斜的</p><p><code>waveCorrect</code></p><h2 id="图像投影变换"><a href="#图像投影变换" class="headerlink" title="图像投影变换"></a>图像投影变换</h2><ul><li><code>PlaneWarper</code></li><li><code>AffineWarper</code></li><li><code>CylindricalWarper</code>:柱面</li><li>默认<code>SphericalWarper</code>:球面</li><li><code>FisheyeWarper</code></li><li><code>StereographicWarper</code></li><li>还有一堆</li></ul><h2 id="曝光补偿"><a href="#曝光补偿" class="headerlink" title="曝光补偿"></a>曝光补偿</h2><p>对每幅图像进行曝光补偿,来使所有图像具有相同的曝光程度</p><p><code>ExposureCompensator</code></p><h2 id="寻找接缝线"><a href="#寻找接缝线" class="headerlink" title="寻找接缝线"></a>寻找接缝线</h2><p>重叠部分最相似的像素的连线</p><p>接缝线有三个限制条件</p><ol><li>如果重叠区域是宽大于高,则接缝是横向走向的,而如果重叠区域是宽小于高,则接缝是纵向走向的.所以要保证接缝线要有一定的长度</li><li>如果是横向的接缝,则不允许有绝对垂直的接缝线,而如果是纵向的接缝,则不允许有绝对水平的接缝线</li><li>三是重叠区域是矩形,接缝线从矩形的一边出发,必须到达与该边平行的另一边结束。</li></ol><p>逐点法,动态规划法和图割法</p><h2 id="图片融合"><a href="#图片融合" class="headerlink" title="图片融合"></a>图片融合</h2><p>羽化</p><p>多频段融合</p><h1 id="参数说明"><a href="#参数说明" class="headerlink" title="参数说明"></a>参数说明</h1><p><code>matcher</code>:匹配方式?<br><code>rangewidth</code>:限制图片匹配的数目?<br><code>ba</code>:拼接图像时的cost函数?<br><code>warp</code>:投影变换<br><code>wave_correct</code>:波形矫正<br><code>seam</code>:寻找接缝线的方法<br><code>blend</code>:图像融合方式</p>]]></content>
      
      
      
        <tags>
            
            <tag> cpp </tag>
            
            <tag> opencv </tag>
            
            <tag> stitch </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>svg笔记</title>
      <link href="/2019/11/16/svg%E7%AC%94%E8%AE%B0/"/>
      <url>/2019/11/16/svg%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="外部svg"><a href="#外部svg" class="headerlink" title="外部svg"></a>外部svg</h1><h2 id="svg引入外部css"><a href="#svg引入外部css" class="headerlink" title="svg引入外部css"></a>svg引入外部css</h2><blockquote><p>TODO</p></blockquote><h2 id="html引入外部svg"><a href="#html引入外部svg" class="headerlink" title="html引入外部svg"></a>html引入外部svg</h2><ol><li><code>embed</code></li><li><code>img</code></li><li><code>iframe</code></li><li><code>object</code>:<code>&lt;object type=&quot;image/svg+xml&quot; data=&quot;image.svg&quot;&gt;&lt;/object&gt;</code></li><li><code>css</code>:<code>background-image</code></li><li><code>css</code>内联<code>svg</code>(好像没用):<a href="https://www.zhangxinxu.com/study/201808/svg-xml-in-css.php">参考</a></li></ol><h2 id="文件格式笔记"><a href="#文件格式笔记" class="headerlink" title="文件格式笔记"></a>文件格式笔记</h2><h3 id="文件头"><a href="#文件头" class="headerlink" title="文件头"></a>文件头</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; standalone=&quot;no&quot;?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">svg</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//W3C//DTD SVG 1.1//EN&quot;</span> <span class="meta-string">&quot;http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">svg</span> <span class="attr">viewBox</span>=<span class="string">&quot;0 0 50 50&quot;</span> <span class="attr">version</span>=<span class="string">&quot;1.1&quot;</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/2000/svg&quot;</span> <span class="attr">p-id</span>=<span class="string">&quot;3156&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:xlink</span>=<span class="string">&quot;http://www.w3.org/2010/svg&quot;</span> <span class="attr">width</span>=<span class="string">&quot;50&quot;</span> <span class="attr">height</span>=<span class="string">&quot;50&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>参数说明<ul><li><code>xmlns</code></li><li><code>viewBox</code></li></ul></li></ul><h3 id="元素说明"><a href="#元素说明" class="headerlink" title="元素说明"></a>元素说明</h3><p><a href="https://www.w3cplus.com/svg/styling-svg-use-content-css.html">参考:w3cplus</a></p><ul><li><code>def</code></li><li><code>symbol</code></li><li><code>g</code></li></ul><h1 id="内联svg"><a href="#内联svg" class="headerlink" title="内联svg"></a>内联svg</h1><h2 id="属性说明"><a href="#属性说明" class="headerlink" title="属性说明"></a>属性说明</h2><ul><li>关于描边<ul><li><code>stroke-dasharray</code></li><li><code>stroke-linecap</code></li><li><code>stroke-linejoin</code></li></ul></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> html </tag>
            
            <tag> css </tag>
            
            <tag> svg </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>rss笔记</title>
      <link href="/2019/11/15/rss%E7%AC%94%E8%AE%B0/"/>
      <url>/2019/11/15/rss%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="用javascript生成rss"><a href="#用javascript生成rss" class="headerlink" title="用javascript生成rss"></a>用javascript生成rss</h2><p><a href="https://stackoverflow.com/questions/10943544/how-to-parse-an-rss-feed-using-javascript">stackoverflow</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> javascript </tag>
            
            <tag> html </tag>
            
            <tag> rss </tag>
            
            <tag> xml </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据库</title>
      <link href="/2019/11/15/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
      <url>/2019/11/15/%E6%95%B0%E6%8D%AE%E5%BA%93/</url>
      
        <content type="html"><![CDATA[<h1 id="1-数据库系统概述"><a href="#1-数据库系统概述" class="headerlink" title="1 数据库系统概述"></a>1 数据库系统概述</h1><h2 id="1-1-基本概念"><a href="#1-1-基本概念" class="headerlink" title="1.1 基本概念"></a>1.1 基本概念</h2><ul><li>数据库系统(Database System, DBS)<br>DBS的组成部分<ul><li>数据库</li><li>数据库管理系统</li><li>数据库管理员</li><li>软件平台</li><li>硬件平台</li></ul></li></ul><h2 id="1-4-数据库内部结构体系"><a href="#1-4-数据库内部结构体系" class="headerlink" title="1.4 数据库内部结构体系"></a>1.4 数据库内部结构体系</h2><ul><li>数据库系统的三级模式<ul><li>概念模式(模式)</li><li>外模式(子模式,用户模式)</li><li>内模式(物理模式)</li></ul></li></ul><h1 id="2-数据模型"><a href="#2-数据模型" class="headerlink" title="2 数据模型"></a>2 数据模型</h1><h2 id="2-1-数据模型的基本概念"><a href="#2-1-数据模型的基本概念" class="headerlink" title="2.1 数据模型的基本概念"></a>2.1 数据模型的基本概念</h2><ul><li><p>概念模型</p><ul><li>常用的概念模型:实体-联系(E-R)模型,面向对象模型等</li></ul></li><li><p>逻辑模型</p><ul><li>常用的逻辑模型:关系模型,对象关系模型</li></ul></li><li><p>物理模型:由DBMS负责实现</p></li></ul><h2 id="2-3-1-实体-联系-E-R-模型"><a href="#2-3-1-实体-联系-E-R-模型" class="headerlink" title="2.3.1 实体-联系(E-R)模型"></a>2.3.1 实体-联系(E-R)模型</h2><p>关键字:关键字时可用于区分同一个实体集中不同实体的最小属性集合<br>函数对应:<code>m</code></p><h2 id="2-3-2-扩充E-R模型"><a href="#2-3-2-扩充E-R模型" class="headerlink" title="2.3.2 扩充E-R模型"></a>2.3.2 扩充E-R模型</h2><h3 id="扩充的实体-联系-EE-R-模型"><a href="#扩充的实体-联系-EE-R-模型" class="headerlink" title="扩充的实体-联系(EE-R)模型"></a>扩充的实体-联系(EE-R)模型</h3><ol><li><p>IS-A联系:如果实体集$B$时实体集$A$的一个子集,且具有比实体集$A$更多的属性,则我们称实体集$A$与实体集$B$之间存在着一种特殊的<strong>IS-A联系</strong>,其中:</p><ul><li>实体集$A$被称为<strong>超(实体)集</strong></li><li>实体集$B$被称为<strong>子(实体)集</strong><br>子集$B$可以通过IS-A联系<strong>继承</strong>超集$A$中的所有属性</li></ul></li><li><p>弱实体(Weak Entity)</p><ul><li>如果一个实体$A$的存在需要依赖于其他某个实体的存在,那么实体$A$被称为弱实体</li></ul></li><li><p>属性的划分</p></li><li><p>属性基数(Cardinality of Attributes)</p></li><li><p>Cardinality of Entity Participation in a Relationship(实体在一个联系中的参与基数)<br>参与方式:<code>(0,m)</code></p></li></ol><h2 id="2-3-3-面向对象模型"><a href="#2-3-3-面向对象模型" class="headerlink" title="2.3.3 面向对象模型"></a>2.3.3 面向对象模型</h2><h2 id="2-3-4-谓词模型"><a href="#2-3-4-谓词模型" class="headerlink" title="2.3.4 谓词模型"></a>2.3.4 谓词模型</h2><h2 id="2-4-1-关系模型与关系模型数据库系统"><a href="#2-4-1-关系模型与关系模型数据库系统" class="headerlink" title="2.4.1 关系模型与关系模型数据库系统"></a>2.4.1 关系模型与关系模型数据库系统</h2><h3 id="关系中的基本概念"><a href="#关系中的基本概念" class="headerlink" title="关系中的基本概念"></a>关系中的基本概念</h3><ul><li>关系模式</li><li>关系数据库模式</li><li>元组</li><li>关键字(键/key)<ul><li>主关键字</li><li>外关键字</li></ul></li></ul><h1 id="3-关系数据库系统"><a href="#3-关系数据库系统" class="headerlink" title="3 关系数据库系统"></a>3 关系数据库系统</h1><h2 id="3-3-0-1-关系数据结构"><a href="#3-3-0-1-关系数据结构" class="headerlink" title="3.3.0.1 关系数据结构"></a>3.3.0.1 关系数据结构</h2><h3 id="表结构"><a href="#表结构" class="headerlink" title="表结构"></a>表结构</h3><ul><li><p>表框架(Frame)</p></li><li><p>元组(Tuple)</p><ul><li>在表框架中可按行(row)存放数据,其中的每一行数据被称为一个元组</li><li>在一$n$元表中,一个元组由$n$个元组分量组成,其中:第$j$个元组分量就对应着表框架中的第$j$个属性($j=1,2…n$)</li></ul></li></ul><h3 id="关系-Relation"><a href="#关系-Relation" class="headerlink" title="关系(Relation)"></a>关系(Relation)</h3><ul><li>具有$n$个属性的关系称为$n$元关系</li><li><strong>关系名</strong>及其所有属性的<strong>属性名</strong>构成了<strong>关系框架</strong>.设关系的名为$R$,其属性名为$A_1,A_2…A_n$,则该关系的框架是$R(A_1,A_2…A_n)$</li></ul><h3 id="键-Key"><a href="#键-Key" class="headerlink" title="键(Key)"></a>键(Key)</h3><p>在二维表中凡能唯一最小标识元组的属性集称为该表的<strong>键</strong>,或称<strong>关键字</strong></p><ul><li>候选键(Candidate Key)</li><li>主键(Primary key)</li></ul><p>每一张二维表都至少存在一个键</p><ul><li>外键(Foreign Key)<ul><li>如果表$A$中的属性集$F$时表$B$的键,则称该属性集$F$为表$A$的<strong>外键</strong>(或称<strong>外关键字</strong>)</li><li>其中<ul><li>表$A$被称为引用表,表$B$被称为被引用表</li><li>表$A$和表$B$可以是同一张二维表</li></ul></li></ul></li></ul><h2 id="3-3-0-2-关系操纵"><a href="#3-3-0-2-关系操纵" class="headerlink" title="3.3.0.2 关系操纵"></a>3.3.0.2 关系操纵</h2><h3 id="空值处理"><a href="#空值处理" class="headerlink" title="空值处理"></a>空值处理</h3><ul><li>在算术表达式中出现空值,其运算结果也为空值</li><li>在逻辑运算表达式中出现空值,其运算结果为逻辑假</li></ul><h2 id="3-3-0-3-关系中的数据约束"><a href="#3-3-0-3-关系中的数据约束" class="headerlink" title="3.3.0.3 关系中的数据约束"></a>3.3.0.3 关系中的数据约束</h2><h3 id="三类数据完整性约束"><a href="#三类数据完整性约束" class="headerlink" title="三类数据完整性约束"></a>三类数据完整性约束</h3><ul><li><p>实体完整性约束:主键中的属性不能有空值</p></li><li><p>参照完整性约束:外键要么取空值,要么是被引用表中当前存在的某元组上的主键值</p></li><li><p>用户定义的完整性:用户自己定义的属性取值约束</p></li></ul><h2 id="3-3-1-关系的表示"><a href="#3-3-1-关系的表示" class="headerlink" title="3.3.1 关系的表示"></a>3.3.1 关系的表示</h2><h3 id="笛卡尔乘积"><a href="#笛卡尔乘积" class="headerlink" title="笛卡尔乘积"></a>笛卡尔乘积</h3><p>$D_1\times D_2\times…\times D_n$</p><ul><li>$D_1,D_2,…,D_n$是$n$个集合</li><li>设集合$D_i$的元素个数为$r_i(i=1,2,…,n)$,则他们的笛卡尔乘积的结果元素个数为$r_1\times r_2\times…\times r_n$</li></ul><h3 id="关系-R"><a href="#关系-R" class="headerlink" title="关系$R$"></a>关系$R$</h3><ul><li><p>$n$元关系$R$是一个$n$元有序组的集合</p></li><li><p>设$n$元关系$R$的属性域分别是$D_1,D_2,…,D_n$,那么这$n$个域的笛卡尔乘积也是一个$n$元有序组的集合,并且与关系$R$存在联系:$R\subseteq D_1\times D_2\times…\times D_n$</p></li></ul><h2 id="3-3-2-关系操纵的表示"><a href="#3-3-2-关系操纵的表示" class="headerlink" title="3.3.2 关系操纵的表示"></a>3.3.2 关系操纵的表示</h2><table><thead><tr><th align="center">关系上的基本操作</th><th align="center">关系代数中的基本运算</th></tr></thead><tbody><tr><td align="center">元组选择</td><td align="center">选择运算</td></tr><tr><td align="center">属性指定</td><td align="center">投影运算</td></tr><tr><td align="center">关系的合并</td><td align="center">笛卡尔乘积</td></tr><tr><td align="center">元组的插入</td><td align="center">并运算</td></tr><tr><td align="center">元组的删除</td><td align="center">差运算</td></tr></tbody></table><h3 id="相容表"><a href="#相容表" class="headerlink" title="相容表"></a>相容表</h3><h3 id="投影运算"><a href="#投影运算" class="headerlink" title="投影运算"></a>投影运算</h3><h3 id="选择运算"><a href="#选择运算" class="headerlink" title="选择运算"></a>选择运算</h3><h3 id="关系的笛卡尔乘积"><a href="#关系的笛卡尔乘积" class="headerlink" title="关系的笛卡尔乘积"></a>关系的笛卡尔乘积</h3><ul><li><p>笛卡尔乘积满足交换律和结合律</p></li><li><p>如果关系$R$和$S$中存在相同的属性名,则必须在结果关系中对其中的一个进行换名</p></li></ul><h2 id="3-3-3-关系模型与关系代数"><a href="#3-3-3-关系模型与关系代数" class="headerlink" title="3.3.3 关系模型与关系代数"></a>3.3.3 关系模型与关系代数</h2><h2 id="3-3-4-关系代数中的扩充运算"><a href="#3-3-4-关系代数中的扩充运算" class="headerlink" title="3.3.4 关系代数中的扩充运算"></a>3.3.4 关系代数中的扩充运算</h2><h3 id="交运算"><a href="#交运算" class="headerlink" title="交运算"></a>交运算</h3><h3 id="除运算"><a href="#除运算" class="headerlink" title="除运算"></a>除运算</h3><ul><li>除运算的推导过程<br>若$Head(R)=\{A_1…A_nB_1…B_n\},Head(S)=\{B_1…B_m\}$<br>$R\div S=\pi_{A_1…A_n}(R)-\pi_{A_1…A_n}((\pi_{A_1…A_n}(R)\times S)-R)$<ol><li>$T_{\max}=\pi_{A_1…A_n}(R)$</li><li>$R_{\max}=T_{\max}\times S$</li><li>$T_1=R_{\max}-R$</li><li>$T_2=\pi_{A_1…A_n}(T_1)$</li><li>$R\div S=T_{\max}-T_2$</li></ol></li></ul><h3 id="join运算"><a href="#join运算" class="headerlink" title="join运算"></a>join运算</h3><ul><li><p>又称$\theta$-联接运算,可以将关系$R$和关系$S$根据join条件$F$合并为一个关系</p></li><li><p>联接条件$F$的构造方式</p></li><li><p>join运算的推导公式<br>$R\underset{F}{\bowtie}S=\sigma_F(R\times S)$</p></li><li><p>联接运算与笛卡尔乘积运算的关系</p></li></ul><h3 id="natural-join运算"><a href="#natural-join运算" class="headerlink" title="natural join运算"></a>natural join运算</h3><ul><li><p>功能:根据两个关系中的同名属性进行等值联接</p></li><li><p>运算结果</p><ul><li>结果关系中的元组</li></ul></li><li><p>natural join运算的推导公式</p></li></ul><h1 id="A-关系演算"><a href="#A-关系演算" class="headerlink" title="A 关系演算"></a>A 关系演算</h1><h2 id="A-1-一阶谓词演算"><a href="#A-1-一阶谓词演算" class="headerlink" title="A.1 一阶谓词演算"></a>A.1 一阶谓词演算</h2><h3 id="一阶谓词演算中的基本概念"><a href="#一阶谓词演算中的基本概念" class="headerlink" title="一阶谓词演算中的基本概念"></a>一阶谓词演算中的基本概念</h3><h3 id="A-1-3-谓词"><a href="#A-1-3-谓词" class="headerlink" title="A.1.3 谓词"></a>A.1.3 谓词</h3><h3 id="A-1-4-指派"><a href="#A-1-4-指派" class="headerlink" title="A.1.4 指派"></a>A.1.4 指派</h3><h2 id="A-2-关系的表示"><a href="#A-2-关系的表示" class="headerlink" title="A.2 关系的表示"></a>A.2 关系的表示</h2><h3 id="关系演算系统"><a href="#关系演算系统" class="headerlink" title="关系演算系统"></a>关系演算系统</h3><ul><li><p>元组关系演算</p></li><li><p>域关系演算</p></li></ul><h2 id="A-3-关系操纵的表示"><a href="#A-3-关系操纵的表示" class="headerlink" title="A.3 关系操纵的表示"></a>A.3 关系操纵的表示</h2><ul><li><p>设$R$和$S$时两个模式相同的关系表,他们对应的谓词分别为$R(t)$和$S(t)$,则</p><ol><li>$R\cup S=\{t|R(t)\vee S(t)\}$</li><li>$R-S=\{t|R(t)\wedge\lnot S(t)\}$</li><li>$\sigma_F(R)=\{t|R(t)\wedge F\}$</li><li>$\pi_{A_{i_1},A_{i_2},…,A_{i_k}}(R)=$<strong>TODO</strong></li></ol></li><li><p>设有$m$元的关系$R$和$n$元的关系$S$,他们对应的谓词分别为$R(u)$和$S(v)$,则<br>$R\times S=$<strong>TODO</strong></p></li></ul><h3 id="关系演算表达式"><a href="#关系演算表达式" class="headerlink" title="关系演算表达式"></a>关系演算表达式</h3><ul><li>关系演算表达式$\{t|\varphi(t)\}$表示由公式$\varphi(t)$的所有成真指派所构成的集合</li><li>可将$\{t|\varphi(t)\}$简写为$\varphi(t)$</li></ul><h3 id="关系演算的原子公式"><a href="#关系演算的原子公式" class="headerlink" title="关系演算的原子公式"></a>关系演算的原子公式</h3><h3 id="关系演算公式-简称为公式"><a href="#关系演算公式-简称为公式" class="headerlink" title="关系演算公式(简称为公式)"></a>关系演算公式(简称为公式)</h3><h2 id="A-4-关系演算的例子"><a href="#A-4-关系演算的例子" class="headerlink" title="A.4 关系演算的例子"></a>A.4 关系演算的例子</h2><h3 id="关系的联结"><a href="#关系的联结" class="headerlink" title="关系的联结"></a>关系的联结</h3><ol><li>可以通过相关谓词的逻辑与运算实现两个关系的笛卡尔乘积<br>$R(p)\wedge S(q)$</li><li>通过选择条件$F$实现两个关系的$\theta$-联结<br>$R(p)\wedge S(q)\wedge F$</li><li>可以通过两个谓词中的公共变元(同名变元)实现两个关系的自然联结<br>$R(x,y,z)\wedge S(y,u,v)$</li></ol><ul><li>自联结:谓词名不变,对部分变元进行重命名,从而实现关系的自联结(同名变元取值相等)</li></ul><h3 id="元组插入-删除与修改操作"><a href="#元组插入-删除与修改操作" class="headerlink" title="元组插入,删除与修改操作"></a>元组插入,删除与修改操作</h3><ul><li><p>删除:$S(sno, sn, sd, sa)\wedge\lnot S(‘S_1’, sn, sd, sa)$</p></li><li><p>插入:$S(t)\vee R(t)$</p></li><li><p>修改:<br>$R(sno, sn, sd, sa)=\exists x(S(sno, sn, sd, x)\wedge sno=S_7\wedge sa=29)$<br>$(S(sno, sn, sd, sa)\wedge sno\not=S_7)\vee R(sno, sn, sd, sa))$</p></li></ul><h2 id="A-5-关系演算的安全限制"><a href="#A-5-关系演算的安全限制" class="headerlink" title="A.5 关系演算的安全限制"></a>A.5 关系演算的安全限制</h2><h3 id="无限关系"><a href="#无限关系" class="headerlink" title="无限关系"></a>无限关系</h3><h3 id="无穷验证"><a href="#无穷验证" class="headerlink" title="无穷验证"></a>无穷验证</h3><h1 id="B-关系数据库语言SQL"><a href="#B-关系数据库语言SQL" class="headerlink" title="B 关系数据库语言SQL"></a>B 关系数据库语言SQL</h1><h2 id="B-2-SQL数据定义功能"><a href="#B-2-SQL数据定义功能" class="headerlink" title="B.2 SQL数据定义功能"></a>B.2 SQL数据定义功能</h2><h3 id="基表创建"><a href="#基表创建" class="headerlink" title="基表创建"></a>基表创建</h3><h2 id="B-3-SQL数据操纵功能"><a href="#B-3-SQL数据操纵功能" class="headerlink" title="B.3 SQL数据操纵功能"></a>B.3 SQL数据操纵功能</h2><h3 id="B-3-1-SQL的基本查询功能"><a href="#B-3-1-SQL的基本查询功能" class="headerlink" title="B.3.1 SQL的基本查询功能"></a>B.3.1 SQL的基本查询功能</h3><h4 id="B-3-1-2-常用谓词"><a href="#B-3-1-2-常用谓词" class="headerlink" title="B.3.1.2 常用谓词"></a>B.3.1.2 常用谓词</h4><h5 id="like谓词的使用方法"><a href="#like谓词的使用方法" class="headerlink" title="like谓词的使用方法"></a><code>like</code>谓词的使用方法</h5><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">column [ NOT ] like val1 [ escape val2 ]</span><br></pre></td></tr></table></figure><ul><li><p>模板(pattern):<code>val1</code></p><ul><li><code>_</code>:可以匹配任意一个字符</li><li><code>%</code>:可以匹配任意一个字符串(包括空字符串)</li></ul></li><li><p>转移指示字符:<code>val2</code></p><ul><li>紧跟在<code>val2</code>之后的<code>_</code>或<code>%</code>不再是通配符,而是其自身</li></ul></li></ul><h4 id="B-3-1-5-自连接"><a href="#B-3-1-5-自连接" class="headerlink" title="B.3.1.5 自连接"></a>B.3.1.5 自连接</h4><h4 id="B-3-1-6-结果排序"><a href="#B-3-1-6-结果排序" class="headerlink" title="B.3.1.6 结果排序"></a>B.3.1.6 结果排序</h4><p><code>order by &lt;列名&gt; [ asc | desc ] &#123;, ...&#125;</code></p><ul><li>升序<code>asc</code>,降序<code>desc</code>,默认升序</li></ul><h3 id="B-3-2-分层结构查询与集合谓词使用"><a href="#B-3-2-分层结构查询与集合谓词使用" class="headerlink" title="B.3.2 分层结构查询与集合谓词使用"></a>B.3.2 分层结构查询与集合谓词使用</h3><h4 id="where子句中的集合谓词"><a href="#where子句中的集合谓词" class="headerlink" title="where子句中的集合谓词"></a><code>where</code>子句中的集合谓词</h4><ul><li><code>in</code>谓词:标量与集合量之间的属于比较</li></ul><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">expr [ not ] in ( subquery )</span><br></pre></td></tr></table></figure><ul><li>限定比较谓词:标量与集合中元素之间的量化比较</li></ul><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">expr 运算符 some|any|all ( subquery )</span><br></pre></td></tr></table></figure><ul><li><code>exists</code>谓词:是否为空集的判断谓词</li></ul><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">[ not ] exists ( subquery )</span><br></pre></td></tr></table></figure><h3 id="B-3-3-select语句间的运算"><a href="#B-3-3-select语句间的运算" class="headerlink" title="B.3.3 select语句间的运算"></a>B.3.3 <code>select</code>语句间的运算</h3><ul><li><code>union [all]</code></li><li><code>intersect [all]</code></li><li><code>except [all]</code></li></ul><blockquote><p>不加<code>all</code>只选取不同的值</p></blockquote><h3 id="B-3-4-SQL计算-统计-分类的功能"><a href="#B-3-4-SQL计算-统计-分类的功能" class="headerlink" title="B.3.4 SQL计算,统计,分类的功能"></a>B.3.4 SQL计算,统计,分类的功能</h3><h4 id="B-3-4-1-统计功能"><a href="#B-3-4-1-统计功能" class="headerlink" title="B.3.4.1 统计功能"></a>B.3.4.1 统计功能</h4><ul><li><p><code>count</code>统计:</p><ul><li><code>count(*)</code>:返回集合中的元组个数</li><li><code>count(colname)</code>:返回在<code>colname</code>属性上取值非空的元组个数</li><li><code>count(distinct colname)</code>:返回<code>colname</code>取值非空且互不相同的元组个数</li></ul></li><li><p><code>sum</code>,<code>avg</code>,<code>max</code>,<code>min</code>统计</p></li><li><p><code>null</code>在统计函数中的处理:<strong>TODO</strong></p></li></ul><h4 id="B-3-4-3-分类功能"><a href="#B-3-4-3-分类功能" class="headerlink" title="B.3.4.3 分类功能"></a>B.3.4.3 分类功能</h4><ul><li><p>分类统计查询</p><ul><li>分组查询子句<figure class="highlight"><table><tr><td class="code"><pre><span class="line">group by colname &#123; ,</span><br><span class="line">  colname ...&#125;</span><br></pre></td></tr></table></figure>根据属性<code>colname</code>的取值的不同,将满足<code>where</code>条件的元组划分为不同的集合</li></ul></li><li><p>分组选择子句:<code>having group_condition</code></p></li></ul><h3 id="B-3-5-select语句使用的一般规则"><a href="#B-3-5-select语句使用的一般规则" class="headerlink" title="B.3.5 select语句使用的一般规则"></a>B.3.5 <code>select</code>语句使用的一般规则</h3><h2 id="B-4-SQL的更新功能"><a href="#B-4-SQL的更新功能" class="headerlink" title="B.4 SQL的更新功能"></a>B.4 SQL的更新功能</h2><ul><li>元组删除</li></ul><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> table_name</span><br><span class="line">[ <span class="keyword">where</span> search_condition ];</span><br></pre></td></tr></table></figure><ul><li>元组插入</li></ul><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> table_name [ ( colname &#123;, colname ... &#125; ) ]</span><br><span class="line"><span class="keyword">values</span> ( expr | <span class="literal">null</span> &#123;, expr | <span class="literal">null</span> ...&#125; ) | subquery;</span><br></pre></td></tr></table></figure><ul><li>元组修改</li></ul><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">update</span> table_name</span><br><span class="line"><span class="keyword">set</span> colname = expr | <span class="literal">null</span> | subquery, ...</span><br><span class="line">[ <span class="keyword">where</span> search_condition ];</span><br></pre></td></tr></table></figure><h2 id="B-5-视图"><a href="#B-5-视图" class="headerlink" title="B.5 视图"></a>B.5 视图</h2><h3 id="B-5-2-视图的删除"><a href="#B-5-2-视图的删除" class="headerlink" title="B.5.2 视图的删除"></a>B.5.2 视图的删除</h3><ul><li>在执行视图的删除操作时,将连带删除定义在该视图上的其他视图</li></ul><h3 id="B-5-3-视图上的操作"><a href="#B-5-3-视图上的操作" class="headerlink" title="B.5.3 视图上的操作"></a>B.5.3 视图上的操作</h3><ul><li><p>对视图可以作查询操作</p><ul><li>视图上的查询操作将首先被改写为基表上的查询操作,然后才能得到执行</li></ul></li><li><p>一般不允许执行视图上的更新操作,只有在特殊情况下才可以进行</p></li><li><p>可更新视图</p></li></ul><h1 id="4-数据库的安全性与完整性保护"><a href="#4-数据库的安全性与完整性保护" class="headerlink" title="4 数据库的安全性与完整性保护"></a>4 数据库的安全性与完整性保护</h1><h2 id="4-1-数据库的安全性"><a href="#4-1-数据库的安全性" class="headerlink" title="4.1 数据库的安全性"></a>4.1 数据库的安全性</h2><h3 id="4-1-2-数据库安全的基本概念与内容"><a href="#4-1-2-数据库安全的基本概念与内容" class="headerlink" title="4.1.2 数据库安全的基本概念与内容"></a>4.1.2 数据库安全的基本概念与内容</h3><ul><li>客体:数据库中的数据及其载体</li><li>主体:数据库中数据的访问者</li></ul><h3 id="4-1-4-SQL对数据库安全的支持"><a href="#4-1-4-SQL对数据库安全的支持" class="headerlink" title="4.1.4 SQL对数据库安全的支持"></a>4.1.4 SQL对数据库安全的支持</h3><ul><li><p>操作对象</p><ul><li>表,视图</li><li>属性</li><li>域(type),udt(用户定义数据类型)</li><li>存储过程/函数,触发器</li></ul></li><li><p>授权语句<br><code>grant &lt;操作权限列表&gt; on &lt;操作对象&gt; to &lt;用户名列表&gt; [ with grant option ]</code></p></li><li><p>回收语句<br><code>revoke &lt;操作权限列表&gt; on &lt;操作对象&gt; from &lt;用户名列表&gt; [ restrict | cascade ]</code></p><ul><li><code>cascade</code>:连锁回收</li><li><code>restrict</code>:在不存在连锁回收问题时才能回收权限,否则拒绝回收</li></ul></li></ul><h2 id="4-2-数据库的完整性"><a href="#4-2-数据库的完整性" class="headerlink" title="4.2 数据库的完整性"></a>4.2 数据库的完整性</h2><p><strong>TODO</strong></p><h1 id="5-事务处理-并发控制与故障恢复技术"><a href="#5-事务处理-并发控制与故障恢复技术" class="headerlink" title="5 事务处理,并发控制与故障恢复技术"></a>5 事务处理,并发控制与故障恢复技术</h1><h2 id="5-1-事务处理"><a href="#5-1-事务处理" class="headerlink" title="5.1 事务处理"></a>5.1 事务处理</h2><h3 id="5-1-1-事务"><a href="#5-1-1-事务" class="headerlink" title="5.1.1 事务"></a>5.1.1 事务</h3><ul><li>事务<br>一个事务是指由一条SQL语句或者一组SQL语句所构成的一个执行过程,并具有ACID四个特性<br>由每个用户所执行的一个不能被打断的对数据库的操作序列被称为事务</li></ul><h3 id="5-1-2-事务的性质"><a href="#5-1-2-事务的性质" class="headerlink" title="5.1.2 事务的性质"></a>5.1.2 事务的性质</h3><ol><li><p>原子性(<strong>A</strong>tomicity)</p></li><li><p>一致性(<strong>C</strong>onsistency)<br>数据库的一致的状态可以理解为数据库中所有数据的正确性,他要求数据库中的数据必须满足</p><ul><li>在数据库中显式定义的各种完整性约束</li><li>用户心目中的隐式数据约束</li></ul></li></ol><h3 id="5-1-4-有关事务的语句"><a href="#5-1-4-有关事务的语句" class="headerlink" title="5.1.4 有关事务的语句"></a>5.1.4 有关事务的语句</h3><ol start="3"><li><p>隔离性(<strong>I</strong>solation)<br>一个事物的执行与并发执行的其他事务之间是相互独立的,互不干扰,这被称为事务执行的隔离性</p></li><li><p>持久性(<strong>D</strong>urability)</p></li></ol><ul><li>设置事务的隔离级别<ul><li>readuncommitted:未提交读</li><li>readcommitted:提交读</li><li>readrepeatable:可重复读</li><li>serializable:可序列化(可串行化)</li></ul></li></ul><h3 id="5-1-5-事务的组成"><a href="#5-1-5-事务的组成" class="headerlink" title="5.1.5 事务的组成"></a>5.1.5 事务的组成</h3><ol><li><p>事务控制操作</p><ul><li>事务的开始:<code>start T</code></li><li>提交事务:<code>commit T</code></li><li>回退(放弃)事务:<code>abort T</code></li></ul></li><li><p>数据访问操作</p><ul><li><code>input(A)</code>:将数据对象<code>A</code>的值从磁盘中读入内存缓冲区</li><li><code>output(A)</code>:将内存缓冲区中数据对象<code>A</code>的至写入磁盘</li><li><code>read(A, t)</code>:将内存缓冲区中数据对象<code>A</code>的值读入内存变量<code>t</code><blockquote><p>在一个<code>read</code>操作中,有可能隐含着一个<code>input</code>操作</p></blockquote></li><li><code>write(A, t)</code>:将内存变量<code>t</code>的值写入内存缓冲区中数据对象<code>A</code></li></ul></li></ol><h2 id="5-2-并发控制技术"><a href="#5-2-并发控制技术" class="headerlink" title="5.2 并发控制技术"></a>5.2 并发控制技术</h2><h3 id="5-2-1-事务的并发执行"><a href="#5-2-1-事务的并发执行" class="headerlink" title="5.2.1 事务的并发执行"></a>5.2.1 事务的并发执行</h3><ul><li><p>多个事务的执行方式</p><ul><li>串行执行<ul><li>以事务为单位,多个事务依次顺序执行</li></ul></li><li>并发执行</li><li>并发执行的可串行化<ul><li>如果一组事务并发执行的结果等价于他们之间的某种串行执行的结果,则称其为可串行化调度</li></ul></li></ul></li><li><p>并发控制的目标:实现并发事务的可串行化调度</p></li><li><p>调度:一个或多个事务中的数据库访问操作,按照这些操作在DBMS(database management system)被执行的时间先后,排序所形成的一个操作序列<br>给定一组并发事务$T_1,T_2…T_k$,他们之间的调度$H$必须满足</p><ol><li>必须包括所有事物的所有操作,包括每一个事务的结束命令(<code>commit</code>/<code>abort</code>)</li><li>单个事物内部的操作顺序必须保持不变</li></ol></li><li><p>串行调度</p></li><li><p>可串行化调度</p></li><li><p>事务及调度的表示方法</p><ul><li>事务用符号$T_1,T_2…$表示</li><li>$r_i(X)$表示事务$T_i$读数据库对象$X$</li><li>$w_i(X)$表示事务$T_i$写数据库对象$X$</li></ul></li><li><p>冲突可串行化</p><ul><li>冲突(conflict):指调度中的一对<strong>相邻</strong>操作<code>(op1; op2)</code>,他们满足:如果交换它们两者的执行顺序,那么涉及的事务中至少有一个的行为会改变</li><li>冲突的判断办法<ul><li>同一事务的任意两个相邻的操作都是冲突</li><li>不同事物对统一数据对象的<code>写</code>/<code>读-写</code>冲突</li></ul></li><li>冲突等价:如果通过一系列<strong>相邻</strong>操作的非冲突交换能够将一个调度转换为另一个调度,称这两个调度是冲突等价的</li><li>冲突可串行化:如果一个调度$S$冲突等价于这一组事务之间的一个串行调度,称$S$时冲突可串行化的<ul><li>冲突可串行化调度必定是一个可串行化调度</li><li>一个可串行化调度不一定是冲突可串行化的</li></ul></li></ul></li><li><p>冲突可串行化的判断:优先图</p></li><li><p>视图等价</p><ul><li>一个冲突可串行化调度一定是视图可串行化调度</li></ul></li><li><p>三种数据不一致现象</p><ul><li>丢失修改(lost updata)<ul><li>一个事务的修改结果破坏了另一个事务的修改结果</li><li>对多个事务并发修改同一个数据对象的情况未加控制</li></ul></li><li>脏读(dirty read)<ul><li>读到了错误的数据</li><li>一个事务读取了另一个事务未提交的修改结果</li></ul></li><li>不可重复读(unrepeatable read)<ul><li>在一个事务的执行过程中,前后两次读同一个数据对象所获得的值出现了不一致</li><li>在两次<code>读</code>操作之间插入了另一个事务的<code>写</code>操作</li></ul></li></ul></li></ul><h3 id="5-2-2-封锁"><a href="#5-2-2-封锁" class="headerlink" title="5.2.2 封锁"></a>5.2.2 封锁</h3><ul><li><p>排它锁(X锁)</p></li><li><p>共享锁(S锁)</p></li><li><p>锁相容矩阵</p></li><li><p>锁的申请与释放</p></li></ul><h3 id="5-2-3-封锁协议"><a href="#5-2-3-封锁协议" class="headerlink" title="5.2.3 封锁协议"></a>5.2.3 封锁协议</h3><ul><li><p>一级封锁协议<br>事务$T$在<code>写</code>数据对象$A$之前,必须先申请并获得$A$上的X锁,并维持到事务$T$的执行结束(包括<code>commit</code>与<code>rollback</code>)才释放加在$A$上的锁<br>防止丢失修改</p></li><li><p>二级封锁协议<br>事务$T$在<code>读</code>数据对象$A$之前,必须先申请并获得$A$上的S锁,在<code>读</code>操作完成后<strong>可以</strong>释放$A$上的S锁<br>防止丢失修改,脏读</p></li><li><p>三级封锁协议<br>事务$T$在<code>读</code>数据对象$A$之前,必须先申请并获得$A$上的<code>S</code>锁,并维持到事务$T$的执行结束才释放被加在$A$上的S锁<br>防止丢失修改,脏读,不可重复读</p></li></ul><h3 id="5-2-4-两阶段封锁协议"><a href="#5-2-4-两阶段封锁协议" class="headerlink" title="5.2.4 两阶段封锁协议"></a>5.2.4 两阶段封锁协议</h3><p>以事务为单位来规定封锁的使用原则:对一个事务在执行过程中需要调用的所有锁申请和锁释放的动作顺序进行了约定</p><p>根据锁的申请与释放操作的调用时间,可以将一个事务的执行过程划分为两个阶段</p><ul><li>第一个阶段:申请并获得锁</li><li>第二个阶段:释放持有的锁</li></ul><p>在一个事务$T$中,如果所有的封锁请求都先于所有的解锁请求,则该事务被称为<strong>两阶段封锁事务</strong>,简称<strong>2PL事务</strong>(或者说<strong>采用两阶段封锁协议的事务</strong>)</p><p>假设系统采用X锁和S锁,有关封锁的申请与释放操作表示如下:</p><ul><li><p>$sl_i(A)$:事务$T_i$申请数据对象$A$上的一个S锁</p></li><li><p>$xl_i(A)$:事务$T_i$申请数据对象$A$上的一个X锁</p></li><li><p>$u_i(A)$:事务$T_i$释放自己在数据对象$A$上所持有的锁</p></li><li><p>封锁的使用规定:在每一个事务$T_i$中</p><ol><li>采用如下的封锁协议<ul><li>$r_i(A)$之前必须有$sl_i(A)$或$xl_i(A)$,而且在两者之间没有$u_i(A)$</li><li>$w_i(A)$之前必须有$xl_i(A)$,而且在两者之间没有$u_i(A)$</li><li>每一个$sl_i(A)$或$xl_i(A)$之后必须有一个$u_i(A)$</li></ul></li><li>必须遵循两阶段封锁协议</li><li>保证事务调度的合法性<ul><li>如果$xl_i(A)$出现在调度中,那么后面不能再有$sl_i(A)$或$xl_j(A)$,除非中间插入了$u_i(A)$</li><li>如果$sl_i(A)$出现在调度中,那么后面不能再有$xl_j(A)$,除非中间插入了$u_i(A)$</li></ul></li></ol></li></ul><p>定理:由2PL事务所构成的任意合法调度$S$都是冲突可串行化的(用归纳法证明)</p><h3 id="5-2-5-封锁粒度"><a href="#5-2-5-封锁粒度" class="headerlink" title="5.2.5 封锁粒度"></a>5.2.5 封锁粒度</h3><table><thead><tr><th align="center">封锁粒度</th><th align="center">系统并发度</th><th align="center">并发控制的开销</th></tr></thead><tbody><tr><td align="center">大</td><td align="center">低</td><td align="center">小</td></tr><tr><td align="center">小</td><td align="center">高</td><td align="center">大</td></tr></tbody></table><ul><li><p>多粒度封锁</p><ul><li>如果在一个系统中同时支持多种封锁粒度供事务选择使用,这种封锁方法被称为<strong>多粒度封锁</strong></li><li>可以按照封锁粒度的大小构造出一颗<strong>多粒度树</strong>,以树中的每个节点作为封锁对象,可以构成一个<strong>多粒度封锁协议</strong></li></ul></li><li><p>意向锁</p><ul><li>使用规定<ul><li>如果对一个节点加意向锁,则说明该节点的下层节点正在被加锁</li><li>对任一节点加锁时,必须先对它的上层节点加意向锁</li></ul></li><li>三种常见的意向锁<ul><li>意向共享锁(IS锁):如果对节点$N$加IS锁,表示准备在节点$N$的某些后裔节点上加S锁</li><li>意向排它锁(IX锁):如果对节点$N$加IX锁,表示准备在节点$N$的某些后裔节点上加X锁</li><li>共享意向排它锁(SIX锁):如果对节点$N$加SIX锁,表示对节点$N$本身加S锁,并准备在$N$的某些后裔节点上加X锁</li></ul></li></ul></li></ul><table><thead><tr><th align="center">其他事务已持有的锁$\to$</th><th align="center">S锁</th><th align="center">X锁</th><th align="center">IS锁</th><th align="center">IX锁</th><th align="center">SIX锁</th></tr></thead><tbody><tr><td align="center">S锁</td><td align="center">y</td><td align="center">n</td><td align="center">y</td><td align="center">n</td><td align="center">n</td></tr><tr><td align="center">X锁</td><td align="center">n</td><td align="center">n</td><td align="center">n</td><td align="center">n</td><td align="center">n</td></tr><tr><td align="center">IS锁</td><td align="center">y</td><td align="center">n</td><td align="center">y</td><td align="center">y</td><td align="center">y</td></tr><tr><td align="center">IX锁</td><td align="center">n</td><td align="center">n</td><td align="center">y</td><td align="center">y</td><td align="center">n</td></tr><tr><td align="center">SIX锁</td><td align="center">n</td><td align="center">n</td><td align="center">y</td><td align="center">n</td><td align="center">n</td></tr></tbody></table><ul><li>多粒度封锁协议<ul><li>申请封锁的顺序:上-&gt;下</li><li>释放封锁的顺序:下-&gt;上</li></ul></li></ul><h3 id="5-2-6-活锁与死锁"><a href="#5-2-6-活锁与死锁" class="headerlink" title="5.2.6 活锁与死锁"></a>5.2.6 活锁与死锁</h3><h4 id="死锁"><a href="#死锁" class="headerlink" title="死锁"></a>死锁</h4><ul><li><p>例子:$r_1(B),r_2(B),w_1(B)$</p></li><li><p>解除法</p><ul><li>超时死锁检测法<ul><li>事务的执行时间超时</li><li>锁申请的等待时间超时</li></ul></li><li>等待图法</li><li>时间戳死锁检测法<ul><li>每个事物都具有一个用于死锁检测的时间戳</li><li>如果事务$T$必须等待另一个事务$U$所持有的锁<ul><li>等待-死亡方案:<ul><li>如果$T$比$U$老,那么允许$T$等待$U$持有的锁</li><li>如果$U$比$T$老,那么事务$T$死亡(被回滚)</li></ul></li><li>伤害-等待方案:<ul><li>如果$T$比$U$老,他将伤害$U$,$U$必须被回滚</li><li>如果$U$比$T$老,那么$T$等待$U$持有的锁</li></ul></li></ul></li></ul></li></ul></li></ul><h4 id="活锁"><a href="#活锁" class="headerlink" title="活锁"></a>活锁</h4><ul><li><p>例子:</p><ul><li>$T_1$(卖票):$xl_1(A),r_1(A),w_1(A),u_1(A)$</li><li>$T_2$(剩余票额查询):$sl_2(A),r_2(A),u_2(A)$</li><li>先启动一个$T_2$,再启动一个$T_1$:$T_1$处于等待状态,在已经运行的$T_2$结束之前,不断有新启动的$T_2$加进来</li></ul></li><li><p>解决方法:先来先服务</p></li></ul><h2 id="5-3-数据库恢复技术"><a href="#5-3-数据库恢复技术" class="headerlink" title="5.3 数据库恢复技术"></a>5.3 数据库恢复技术</h2><h3 id="5-3-2-数据库故障分类"><a href="#5-3-2-数据库故障分类" class="headerlink" title="5.3.2 数据库故障分类"></a>5.3.2 数据库故障分类</h3><ul><li><p>小型故障</p><ul><li>事物内部故障</li></ul></li><li><p>中性故障</p><ul><li>系统故障</li><li>外部影响</li></ul></li><li><p>大型故障</p><ul><li>磁盘故障</li><li>计算机病毒</li><li>黑客入侵</li></ul></li></ul><h3 id="5-3-3-1-转储"><a href="#5-3-3-1-转储" class="headerlink" title="5.3.3.1 转储"></a>5.3.3.1 转储</h3><ul><li><p>静态转储:无事务运行时</p></li><li><p>动态转储</p></li><li><p>海量转储:每次转储全部数据库</p></li><li><p>增量转储:更新过的</p></li></ul><h3 id="5-3-3-2-日志"><a href="#5-3-3-2-日志" class="headerlink" title="5.3.3.2 日志"></a>5.3.3.2 日志</h3><h4 id="undo日志"><a href="#undo日志" class="headerlink" title="undo日志"></a>undo日志</h4><ul><li><p>记录格式</p><ul><li>开始一个事务:<code>&lt;Start T&gt;</code></li><li>提交事务$T$:<code>&lt;Commit T&gt;</code></li><li>放弃事务$T$:<code>&lt;Abort T&gt;</code></li><li>更新记录:<code>&lt;T, X, V&gt;</code>,事务$T$修改了数据库元素$X$的值,$X$的旧值是$V$</li></ul></li><li><p>记载规则</p><ol><li>如果事务$T$修改了数据库元素$X$,则<code>&lt;T, X, V&gt;</code>必须在$X$的新值写到磁盘前写到磁盘</li><li>如果事务$T$提交,则<code>&lt;Commit T&gt;</code>必须在事务$T$改变的所有DB元素写到磁盘后再写到磁盘</li></ol></li><li><p>恢复过程</p><ol><li>将所有事务划分为两种类型<ul><li>已提交事务:有<code>&lt;Start T&gt;</code>和<code>&lt;Commit T&gt;</code></li><li>未提交事务:有<code>&lt;Start T&gt;</code>没有<code>&lt;Commit T&gt;</code></li></ul></li><li>从undo日志的尾部向头部扫描整个日志,对每条更新记录<code>&lt;T, X, Y&gt;</code>:<ul><li>如果<code>&lt;Commit T&gt;</code>已被扫描到,则继续扫描下一条日志记录</li><li>否则,由恢复管理器将数据库中的$X$的值改为$V$</li></ul></li><li>在日志的尾部为每个未结束的事务$T$写入一条日志记录<code>&lt;Abort T&gt;</code>,并刷新日志(flush log)</li></ol></li><li><p>检查点<br>在日志中插入检查点的处理过程</p><ol><li>系统停止接受启动新事务的请求</li><li>等所有当前活跃的事务提交或中止,并且在日志中写入<code>&lt;Commit T&gt;</code>或<code>&lt;Abort T&gt;</code></li><li>将日志记录刷新到磁盘</li><li>写入日志记录<code>&lt;CKPT&gt;</code>,并再次刷新日志</li><li>重新开始接受新的事务</li></ol></li><li><p>在故障恢复时,只要逆向扫描到第一条<code>&lt;CKPT&gt;</code>记录,就可以结束故障恢复工作</p></li><li><p>非静止检查点<br>设置非静止检查点的步骤</p><ol><li>写入日志记录<code>&lt;Start CKPT(T1, ..., Tk)&gt;</code></li><li>等待$T_1, …, T_k$所有事务的提交或终止,在这个过程中允许启动执行新的事务</li><li>当$T_1, …, T_k$都已经完成时,写入日志记录<code>&lt;End CKPT&gt;</code>并刷新日志</li></ol></li><li><p>带有非静止检查点undo日志的恢复</p><ol><li>先遇到<code>&lt;End CKPT&gt;</code>记录<ul><li>继续向后(头部)扫描,直到出现与之相对应的<code>&lt;Start CKPT(...)&gt;</code>记录就可以结束故障恢复工作</li></ul></li><li>先遇到<code>&lt;Start CKPT(T1, ..., Tk)&gt;</code>记录,故障恢复工作需要撤销两类事务的操作<ul><li>在<code>&lt;Start CKPT(T1, ..., Tk)&gt;</code>记录之后启动的事务</li><li>$T_1, …, T_k$中在系统崩溃前尚未完成的事务</li></ul></li></ol></li><li><p>undo日志的不足</p><ul><li>在将事务改变的所有数据写到磁盘前不能提交该事务</li><li>在事务的提交过程中需要执行许多<code>写</code>磁盘操作,增加了事务提交的时间开销</li></ul></li></ul><h4 id="redo日志"><a href="#redo日志" class="headerlink" title="redo日志"></a>redo日志</h4><ul><li><p>记录格式</p><ul><li>redo日志的记录格式与undo一样,唯一区别:在更新记录<code>&lt;T, X, V&gt;</code>中记载的是更新后的值</li></ul></li><li><p>记载规则</p><ul><li>在修改磁盘上的任何数据库元素$X$之前,要保证所有与$X$这一修改有关的日志记录(包括提交记录<code>&lt;Commit T&gt;</code>)都必须出现在磁盘上</li></ul></li><li><p>恢复过程</p><ol><li>先扫描一遍日志文件,确定所有已经提交的事务</li><li>再从日志头部开始扫描,对每条更新记录<code>&lt;T, X, V&gt;</code><ul><li>如果$T$时未提交事务,则继续扫描日志</li><li>如果$T$是已提交的事务,则为数据库元素$X$写入新值$V$(有可能是冗余的<code>写</code>操作)</li></ul></li><li>对每个未完成的事务(提交记录<code>&lt;Commit T&gt;</code>没有写入磁盘),在日志的尾部写入<code>&lt;Abort T&gt;</code>并刷新日志</li></ol></li><li><p>非静止检查点</p><ol><li>写入日志记录<code>&lt;Start CKPT(T1, ..., Tk)&gt;</code>($T_1, …, T_k$时当前所有活跃事务的标识符),并刷新日志.同时获得当时所有<strong>已提交</strong>事务的标识符集合$S$</li><li>将集合**$S$**中的事务已经写到内存缓冲区但还没有写道数据库磁盘的数据库元素写入磁盘</li><li>写入日志记录<code>&lt;End CKPT&gt;</code>并刷新日志,不需等待事务$T_1, …, T_k$或新开始事务的结束</li></ol></li><li><p>带检查点redo日志的恢复</p><ul><li>找到最后一个被记入日志的<code>&lt;End CKPT&gt;</code>,假设与之对应的检查点记录时<code>&lt;Start CKPT(T1, ..., Tk)&gt;</code>,<em>并找到最早出现的<code>&lt;Start Ti&gt;</code></em></li><li>重做$T_1, …, T_k$,以及在<code>&lt;Start CKPT()&gt;</code>后开始的已经被提交事务</li></ul></li><li><p>redo日志的不足</p><ul><li>要求事务提交和日志就刷新之前将所有修改过的数据保留在内存缓冲区中,可能增加事务需要的平均缓冲区的数量</li><li>如果被访问的数据对象$X$不是完整的磁盘块,那么在undo日志与redo日志之间可能产生相互矛盾的请求</li></ul></li></ul><h4 id="undo-redo日志"><a href="#undo-redo日志" class="headerlink" title="undo/redo日志"></a>undo/redo日志</h4><ul><li><p>记录格式</p><ul><li>更新记录的格式<code>&lt;T, X, v, w&gt;</code>,不仅记录更新前的值$v$,同时也要记录更新后的值$w$</li></ul></li><li><p>记载规则</p><ol><li>在由于某个事务$T$所做的改变而修改磁盘上的数据库元素$X$之前,更新记录<code>&lt;T, X, v, w&gt;</code>必须出现在磁盘上</li><li>在每一条<code>&lt;Commit T&gt;</code>后面必须紧跟一条Flush Log操作<blockquote><p>事务提交(<code>Commit</code>)和写数据库磁盘(<code>Output</code>)的操作顺序是随机的</p></blockquote></li></ol></li><li><p>恢复过程</p><ol><li>根据<code>&lt;Commit T&gt;</code>是否已经出现在磁盘中来确定事务$T$是否已经被提交</li><li>从后往前,撤销(undo)所有未提交的事务</li><li>从前往后,重做(redo)所有已提交的事务</li></ol></li><li><p>检查点</p><ol><li>写入日志记录<code>&lt;Start CKPT(T1, ..., Tk)&gt;</code>($T_1, …, T_k$是当前所有活跃事务的标识符),并刷新日志</li><li>将所有被修改过的缓冲区写到数据库的磁盘中去</li><li>写入日志记录<code>&lt;End CKPT&gt;</code>并刷新日志</li></ol></li><li><p>带检查点日志的恢复</p></li></ul><h3 id="5-3-4-恢复策略"><a href="#5-3-4-恢复策略" class="headerlink" title="5.3.4 恢复策略"></a>5.3.4 恢复策略</h3><ul><li><p>小型故障的恢复</p><ul><li>利用未结束事务的undo操作进行恢复</li></ul></li><li><p>中型故障的恢复</p><ul><li>非正常中止的事务:undo</li><li>已完成提交的事务:redo</li></ul></li><li><p>大型故障的恢复</p><ul><li>先利用后备副本进行数据库恢复,再利用日志进行数据库的恢复</li></ul></li></ul><h3 id="5-3-5-数据库镜像"><a href="#5-3-5-数据库镜像" class="headerlink" title="5.3.5 数据库镜像"></a>5.3.5 数据库镜像</h3><p>将整个数据库的数据(或主要数据)实时复制到另一个磁盘中</p><h2 id="5-4-事务处理实现技术"><a href="#5-4-事务处理实现技术" class="headerlink" title="5.4 事务处理实现技术"></a><em>5.4 事务处理实现技术</em></h2><h1 id="6-数据库中的数据交换"><a href="#6-数据库中的数据交换" class="headerlink" title="6 数据库中的数据交换"></a>6 数据库中的数据交换</h1><h1 id="7-数据库的物理组织"><a href="#7-数据库的物理组织" class="headerlink" title="7 数据库的物理组织"></a>7 数据库的物理组织</h1><h1 id="8-关系数据库的规范化理论"><a href="#8-关系数据库的规范化理论" class="headerlink" title="8 关系数据库的规范化理论"></a>8 关系数据库的规范化理论</h1><h2 id="8-2-1-函数依赖"><a href="#8-2-1-函数依赖" class="headerlink" title="8.2.1 函数依赖"></a>8.2.1 函数依赖</h2><ul><li><p>平凡.非平凡函数依赖</p></li><li><p>完全函数依赖<br>在关系模式$R(U)$中,如有$X\subseteq U,Y\subseteq U$,满足$X\to Y$,且对任何$X$的真子集$X’$都有$X’\not\to Y$,则称$Y$完全函数依赖于$X$,记作$X\overset{f}{\to}Y$</p></li><li><p>部分函数依赖</p></li><li><p>传递函数依赖<br>在关系模式$R(U)$中,如有$X\subseteq U,Y\subseteq U,X\subseteq U$且满足$X\to Y,Y\not\subset X,Y\not\to X,Y\to Z$,则称$Z$<strong>传递函数依赖</strong>于$X$.否则称为<strong>非传递函数依赖</strong>(直接函数依赖)</p></li><li><p>Armstrong公理系统</p><ul><li>基本规则<ul><li>自反规则:如果$Y$是$X$子集,则$X\to Y$</li><li>增广规则:如果$X\to Y$,则$XZ\to YZ$</li><li>传递规则:如果$X\to Y,Y\to Z$,则$X\to Z$</li></ul></li><li>扩充规则<ul><li>分解规则:如果$X\to YZ$,则$X\to Y$且$X\to Z$</li><li>合并规则:如果$X\to Y$且$X\to Z$,则$X\to YZ$</li><li>伪传递规则:如果$X\to Y$且$WY\to Z$,则$WX\to Z$</li></ul></li></ul></li><li><p>关键字(码,键,key)<br>在关系模式$R(U,F)$中,如有$K\subseteq U$且满足$K\overset{f}{\to}U$,则称$K$为关系$R$的关键字</p></li><li><p>主属性集</p><ul><li>由关系模式$R$的所有关键字中的属性所构成的集合被称为关系模式$R$的主属性集</li><li>主属性集中的属性被称为关系模式$R$的<strong>主属性</strong></li></ul></li><li><p>非主属性集</p></li></ul><h3 id="计算属性集-X-在函数依赖集-F-上的闭包-X-F-简写为-X"><a href="#计算属性集-X-在函数依赖集-F-上的闭包-X-F-简写为-X" class="headerlink" title="计算属性集$X$在函数依赖集$F$上的闭包$X_F^+$(简写为$X^+$)"></a><strong>计算属性集$X$在函数依赖集$F$上的闭包$X_F^+$(简写为$X^+$)</strong></h3><p>$X^+=X$<br>repeat<br>&emsp;$oldX^+=X^+$<br>&emsp;foreach 函数依赖 $Y\to Z\in F$ do<br>&emsp;&emsp;if $Y\subseteq X^+$ then $X^+=X^+\cup Z$<br>until ($oldX^+ == X^+$)</p><h3 id="寻找关系模式-R-U-F-的关键字-K"><a href="#寻找关系模式-R-U-F-的关键字-K" class="headerlink" title="寻找关系模式$R(U,F)$的关键字$K$"></a><strong>寻找关系模式$R(U,F)$的关键字$K$</strong></h3><p>输入:关系模式$R(U,F)$<br>输出:关系$R$的一个关键字$K$</p><p>$K=U$<br>foreach 属性 $A\in K$ {<br>&emsp;计算 $(K-A)_F^+$<br>&emsp;if $(K-A)_F^+$ 包含了$R$的所有属性 then {<br>&emsp;&emsp;$K=K-A$<br>&emsp;}<br>}<br>return $K$</p><p>优化算法:设$F$时关系上的<strong>最小函数依赖集</strong>.根据$F$中的函数依赖,可将$U$划分为</p><ol><li>只在函数依赖的左边出现过的属性的集合$U_L$</li><li>只在函数依赖的右边出现过的属性的集合$U_R$</li><li>在两边都出现的属性的集合$U_A$<br>其中</li></ol><ul><li>$U_L$中的属性时没一个关键字的组成部分</li><li>$U_R$中的属性不可能出现在任何一个关键字中</li><li>在关键自己算算法中,只需针对$U_A$中的属性进行for循环计算</li></ul><p>$K=U-U_R$<br>foreach 属性 $A\in U_A$ {<br>&emsp;计算 $(K-A)_F^+$<br>&emsp;if $(K-A)_F^+$ 包含了$R$的所有属性 then {<br>&emsp;&emsp;$K=K-A$<br>&emsp;}<br>}<br>return $K$</p><h2 id="8-2-2-与函数依赖有关的范式"><a href="#8-2-2-与函数依赖有关的范式" class="headerlink" title="8.2.2 与函数依赖有关的范式"></a>8.2.2 与函数依赖有关的范式</h2><ul><li><p>第一范式<br>关系模式$R(U)$中的每个属性值都是一个不可分割的数据量<br>如果不满足第一范式,那么也就不能被称为关系</p></li><li><p>第二范式<br>关系模式$R(U)\in1NF$,且每个非主属性都完全函数依赖于关键字<br>判断一个关系$R$是否满足2NF:</p><ol><li>找到关系$R$的所有非主属性和所有<em>候选</em>关键字</li><li>检查每一个非主属性$A$和每一个关键字$K$之间的函数依赖,判断是否存在<strong>非主属性对于关键字的部分函数依赖</strong></li></ol></li></ul><h3 id="模式分解的方法"><a href="#模式分解的方法" class="headerlink" title="模式分解的方法"></a><strong>模式分解的方法</strong></h3><p>设关系模式$R$属性集合为$Head(R),F$时其函数依赖集.将其分解到满足范式$M$的步骤如下</p><ol><li>找出所有不满足范式$M$要求的函数依赖关系</li><li>选择一个不符合要求的函数依赖关系作如下的分解<br>假设$X\overset{f}{\to}Y\in F^+$且不满足范式$M$的要求,则将关系模式$R$分解为如下的两个子关系<ul><li>$R_1(X\cup Y,\{X\to Y\})$</li><li>$R_2(Head(R)-Y,F_2)$,其中$F_2=\{A\to B|A\to B\in F^+$且$(A\cup B)\subseteq Head(R_2)\}$</li></ul></li><li>对于分解得到的子关系模式$R_2$重复上述的步骤1和2,直到所有的子关系模式都能满足范式$M$的要求</li><li>合并那些具有相同关键字的子关系模式</li></ol><hr><ul><li><p>第三范式<br>设关系模式$R(U)\in$2NF,且每个非主属性都不<strong>传递</strong>函数依赖于关键字,则称关系模式$R(U)$满足第三范式<br>如果关系$R\not\in$3NF,那么在关系$R$中必然存在以下形式的函数依赖$X\overset{f}{\to}Y$,其中$Y$是单个的非主属性,$X$不是关系$R$的关键字</p></li><li><p>BCNF<br>设关系模式$R(U)$满足1NF,且若$X\to Y$是$X$必含有该关系模式的关键字,则称关系模式$R(U)$满足BCNF范式</p></li><li><p>若$R(U)\in$BCNF,则$R(U)\in$3NF</p></li></ul><h2 id="8-2-3-多值依赖与第四范式"><a href="#8-2-3-多值依赖与第四范式" class="headerlink" title="8.2.3 多值依赖与第四范式"></a>8.2.3 多值依赖与第四范式</h2><ul><li><p>多值依赖(<strong>MVD</strong>)</p><ul><li>设有关系模式$R(U),X,Y\subseteq U$</li><li>$R(U)$满足<ol><li>多$X$的一个确定值,存在$Y$的一组值与之对应</li><li>且$Y$的这组值又与关系中的其他属性$(U-X-Y)$的取值不相关</li></ol></li><li>称$Y$多值依赖于$X$,记为$X\to\to Y$</li></ul></li><li><p>非平凡的多值依赖<br>设在关系模式$R(U)$中,$X\to\to Y$且$U-X-Y\not=\emptyset$,则称$X\to\to Y$是<strong>非平凡的多值依赖</strong>,否则称其为<strong>平凡的多值依赖</strong></p></li><li><p>多值依赖的性质<br>在一个关系模式$R(U)$中</p><ol><li>如有$X\to\to Y$,则必有$X\to\to(U-X-Y)$</li><li>如有$X\to Y$,则必有$X\to\to Y$</li></ol></li><li><p>有关FD和MVD的推导规则</p></li><li><p>第四范式<br>在$R(U)$中,如果$X\to\to Y$是非平凡多值依赖,则$X$必含有关键字,此时称关系模式$R$满足第四范式<br>特点</p><ol><li>函数依赖:要满足BCNF</li><li>不是函数依赖的多值依赖:只允许出现<strong>平凡</strong>多值依赖</li></ol></li></ul><h2 id="8-3-1-函数依赖理论"><a href="#8-3-1-函数依赖理论" class="headerlink" title="8.3.1 函数依赖理论"></a>8.3.1 函数依赖理论</h2><ul><li><p>函数依赖集的等价<br>如果两个函数依赖集$F_1$和$F_2$的闭包是相等的,称函数依赖集$F_1$等价于函数依赖集$F_2$</p></li><li><p>最小函数依赖集</p><ul><li>与函数依赖集$F$向等价的所有函数依赖集中的最小者被称为函数依赖集$F$的<strong>最小函数依赖集</strong></li><li>也被称为<strong>最小覆盖</strong></li></ul></li></ul><h3 id="最小函数依赖集的判定条件"><a href="#最小函数依赖集的判定条件" class="headerlink" title="最小函数依赖集的判定条件"></a>最小函数依赖集的判定条件</h3><p>对于$F$中的每一个FD关系$X\to A$均作如下判断</p><ol><li>依赖因素$A$为单个属性</li><li>不存在冗余的函数依赖:令$F_1=F-\{X\to A\}$,则$F_1^+\not=F^+$</li><li>不存在部分函数依赖:对于决定因素$X$的每一个真子集$Y(Y\subset X)$均作如下判断:<br>令$F_2=F-\{X\to A\}\cup\{Y\to A\}$,则$F_2^+\not=F^+$</li></ol><p>如果$F$中的每一个函数依赖$X\to A$均符合上述要求,则$F$是一个最小函数依赖集</p><ul><li>条件1不是必需的,只是为了方便条件2和3的判断</li></ul><h3 id="寻找与函数依赖集-F-等价的最小函数依赖集-G"><a href="#寻找与函数依赖集-F-等价的最小函数依赖集-G" class="headerlink" title="寻找与函数依赖集$F$等价的最小函数依赖集$G$"></a><strong>寻找与函数依赖集$F$等价的最小函数依赖集$G$</strong></h3><p>输入:函数依赖集$F$<br>输出:与$F$等价的最小函数依赖集$G$<br>算法:</p><ol><li>消除$F$中的部分函数依赖(化简为完全函数依赖)</li><li>消除冗余的函数依赖</li></ol><p>具体计算过程</p><ol><li>$G=F$<br>将$G$中每一个形如$X\to(A_1,A_2…A_n)$的函数依赖替换为$X\to A_1,X\to A_2…X\to A_n$</li><li>对$G$中的每个函数依赖$X\to A$作如下处理<br>对$X$中的每一个属性$B$:<ol><li>计算属性集的闭包$(X-B)_G^+$</li><li>如果$A\in(X-B)_G^+$,则用新的函数依赖$(X-B)\to A$替换原来的$X\to A$</li></ol></li><li>对$G$中的每个函数依赖$X\to A$作如下处理<ol><li>令$N=G-\{X\to A\}$</li><li>计算属性集的闭包$X_N^+$</li><li>如果$A\in X_N^+$,那么$G=G-\{X\to A\}$</li></ol></li><li>将$G$中的每一组$X\to A_1,X\to A_2…X\to A_n$合并为一个函数依赖$X\to(A_1,A_2…A_n)$</li></ol><h2 id="8-3-2-模式分解的研究"><a href="#8-3-2-模式分解的研究" class="headerlink" title="8.3.2 模式分解的研究"></a>8.3.2 模式分解的研究</h2><ul><li><p>无损连接性:分解后,原关系中的信息不会被丢失<br>设$R$是一个关系模式,$F$时$R$的函数依赖集,$\rho=\{R_1,R_2…R_k\}$是对$R$的一个分解,如果对$R$中满足$F$的每一个关系实例$r$都有$r=\pi_{R_1}(r)\bowtie\pi_{R_2}(r)\bowtie…\bowtie\pi_{R_k}(r)$,则称$\rho$相对于$F$是<strong>无损联结分解</strong>,或称分解$\rho$具有无损联结性</p></li><li><p>依赖保持性:原有的函数依赖关系在分解后的关系模式上依然存在<br>设$\rho=\{R_1,R_2…R_k\},F$是$R$的函数依赖集,如果$F^+=(\pi_{R_1}(F)\cup\pi_{R_2}\cup…\cup\pi_{R_k}(F))^+$,则称分解$\rho$具有依赖保持性</p></li><li><p>无损联接性的充要条件:$\rho={R_1, R_2}:R_1\cap R_2\to(R_1-R_2)$或$R_1\cap R_2\to(R_2-R_1)$</p></li></ul><h3 id="到3NF的分解算法"><a href="#到3NF的分解算法" class="headerlink" title="到3NF的分解算法"></a><strong>到3NF的分解算法</strong></h3><p>假设$S$时分解所获得的子关系模式的集合</p><ol><li>$F=F$的最小函数依赖集</li><li>$S=\emptyset$</li><li>对$F$中每一个函数依赖$X\to Y$<br>如果<strong>在集合$S$中找不到满足下述条件的子关系模式$Z$</strong><br>**$X\cup Y\subseteq Heading(Z)$**<br>则由$X$和$Y$构成一个新的子关系加入到$S$中($S=S\cup Heading(X\cup Y)$)</li><li>如果<strong>找不到一个关键字$K$和一个子关系模式$Z$满足$K\subseteq Z$</strong><br>那么从关系$R$中任选一个候选关键字$K$单独构成一个子关系模式($S=S\cup Heading(K)$)</li></ol><h1 id="9-数据库设计"><a href="#9-数据库设计" class="headerlink" title="9 数据库设计"></a>9 数据库设计</h1><h2 id="9-2-需求分析"><a href="#9-2-需求分析" class="headerlink" title="9.2 需求分析"></a>9.2 需求分析</h2><p>确定需要在数据库保存其信息的客观事物及其相互关系</p><h2 id="9-3-概念设计"><a href="#9-3-概念设计" class="headerlink" title="9.3 概念设计"></a>9.3 概念设计</h2><ul><li>目的:建立一个抽象的概念数据模型</li><li>工具<ul><li>E-R模型</li><li>EE-R模型</li><li>面向对象模型</li></ul></li></ul><h2 id="9-4-逻辑设计"><a href="#9-4-逻辑设计" class="headerlink" title="9.4 逻辑设计"></a>9.4 逻辑设计</h2><p>将EE-R模型转换成相等价的关系数据库模式</p><h2 id="9-5-物理设计"><a href="#9-5-物理设计" class="headerlink" title="9.5 物理设计"></a>9.5 物理设计</h2><ul><li>存取方法的设计</li><li>存储结构的设计</li></ul>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>spring笔记</title>
      <link href="/2019/11/12/spring%E7%AC%94%E8%AE%B0/"/>
      <url>/2019/11/12/spring%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="页面跳转"><a href="#页面跳转" class="headerlink" title="页面跳转"></a>页面跳转</h1><blockquote><p>TODO</p></blockquote><h1 id="参数传递"><a href="#参数传递" class="headerlink" title="参数传递"></a>参数传递</h1><h2 id="前端-gt-后端"><a href="#前端-gt-后端" class="headerlink" title="前端-&gt;后端"></a>前端-&gt;后端</h2><h3 id="url参数传递"><a href="#url参数传递" class="headerlink" title="url参数传递"></a><code>url</code>参数传递</h3><blockquote><p>会伴随页面跳转</p></blockquote><ul><li>前端</li></ul><p>访问url:<code>/index?aid=111</code></p><ul><li>后端</li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(...)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">app</span><span class="params">(<span class="meta">@RequestParam(value = &quot;aid&quot;, required = false)</span> String aid)</span> </span>&#123;</span><br><span class="line">  ;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="form表单参数传递"><a href="#form表单参数传递" class="headerlink" title="form表单参数传递"></a><code>form</code>表单参数传递</h3><blockquote><p>会伴随页面跳转</p></blockquote><ul><li>前端</li></ul><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;...&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">&quot;uid&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">input</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>后端</li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(...)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">app</span><span class="params">(String uid)</span> </span>&#123;</span><br><span class="line">  ;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">  String uid;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUid</span><span class="params">(String uid)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.uid = uid;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RequestMapping(...)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">app</span><span class="params">(User user)</span> </span>&#123;</span><br><span class="line">  String uid = user.uid;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="ajax参数传递"><a href="#ajax参数传递" class="headerlink" title="ajax参数传递"></a><code>ajax</code>参数传递</h3><blockquote><p>页面不会跳转</p></blockquote><ul><li>前端</li></ul><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$.ajax(&#123; <span class="comment">// 获取用户所有app</span></span><br><span class="line">  type: <span class="string">&quot;post&quot;</span>,</span><br><span class="line">  url: <span class="string">&quot;/action/sign_in&quot;</span>,</span><br><span class="line">  data: &#123;</span><br><span class="line">    <span class="string">&quot;uid&quot;</span>: uid,</span><br><span class="line">    <span class="string">&quot;password&quot;</span>: password</span><br><span class="line">  &#125;,</span><br><span class="line">  success: <span class="function"><span class="keyword">function</span> (<span class="params">get</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;signin: &quot;</span> + get);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ul><li>后端</li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/action/sign_in&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">app</span><span class="params">(HttpServletRequest request)</span> </span>&#123;</span><br><span class="line">  String uid = request.getParameter(<span class="string">&quot;uid&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="后端-gt-前端"><a href="#后端-gt-前端" class="headerlink" title="后端-&gt;前端"></a>后端-&gt;前端</h2><h3 id="url参数传递-1"><a href="#url参数传递-1" class="headerlink" title="url参数传递"></a><code>url</code>参数传递</h3><blockquote><p>前提要发生页面跳转</p></blockquote><ul><li>后端</li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(...)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">app</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="string">&quot;redirect:/?uid=1&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>前端</li></ul><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getRequest</span>(<span class="params"></span>) </span>&#123; <span class="comment">// 获取url中&quot;?&quot;符后的字串</span></span><br><span class="line">    <span class="keyword">var</span> url = location.search;</span><br><span class="line">    <span class="keyword">var</span> request = <span class="keyword">new</span> <span class="built_in">Object</span>();</span><br><span class="line">    <span class="keyword">if</span> (url.indexOf(<span class="string">&quot;?&quot;</span>) != <span class="number">-1</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> str = url.substr(<span class="number">1</span>);</span><br><span class="line">        strs = str.split(<span class="string">&quot;&amp;&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; strs.length; i ++) &#123;</span><br><span class="line">            request[strs[i].split(<span class="string">&quot;=&quot;</span>)[<span class="number">0</span>]] = <span class="built_in">unescape</span>(strs[i].split(<span class="string">&quot;=&quot;</span>)[<span class="number">1</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> request;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="model参数传递"><a href="#model参数传递" class="headerlink" title="model参数传递"></a><code>model</code>参数传递</h3><ul><li>后端</li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(...)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">app</span><span class="params">(Model model)</span> </span>&#123;</span><br><span class="line">  model.addAttribute(<span class="string">&quot;user_name&quot;</span>, curUser);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>前端</li></ul><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;user_name&#125;&quot;</span>&gt;</span>原来的文本<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="ajax参数传递-1"><a href="#ajax参数传递-1" class="headerlink" title="ajax参数传递"></a><code>ajax</code>参数传递</h3><ul><li>后端</li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(...)</span></span><br><span class="line"><span class="meta">@ResponseBody</span><span class="comment">// 必须要有</span></span><br><span class="line"><span class="keyword">public</span> List&lt;...&gt; app() &#123;</span><br><span class="line">  List&lt;...&gt; tmp = <span class="keyword">new</span> List&lt;...&gt;();</span><br><span class="line">  <span class="keyword">return</span> tmp;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>前端</li></ul><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$.ajax(&#123;</span><br><span class="line">  type: <span class="string">&quot;post&quot;</span>,</span><br><span class="line">  url: <span class="string">&quot;/user/enterprise&quot;</span>,</span><br><span class="line">  data: &#123;&#125;,</span><br><span class="line">  success: <span class="function"><span class="keyword">function</span>(<span class="params">get</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; get.size(); i ++) &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(get[i]);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#123;);</span><br></pre></td></tr></table></figure><h1 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h1><blockquote><p>TODO</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> javascript </tag>
            
            <tag> html </tag>
            
            <tag> sql </tag>
            
            <tag> ajax </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql笔记</title>
      <link href="/2019/11/09/mysql%E7%AC%94%E8%AE%B0/"/>
      <url>/2019/11/09/mysql%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="通用"><a href="#通用" class="headerlink" title="通用"></a>通用</h1><h2 id="建表"><a href="#建表" class="headerlink" title="建表"></a>建表</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> <span class="keyword">if</span> <span class="keyword">not</span> <span class="keyword">exists</span> customers(</span><br><span class="line">    cid <span class="built_in">char</span>(<span class="number">4</span>) <span class="keyword">not</span> <span class="literal">null</span>,</span><br><span class="line">    cname <span class="built_in">char</span>(<span class="number">20</span>) <span class="keyword">not</span> <span class="literal">null</span>,</span><br><span class="line">    city <span class="built_in">char</span>(<span class="number">20</span>),</span><br><span class="line">    discnt <span class="built_in">real</span>,</span><br><span class="line">    primary <span class="keyword">key</span> ( cid )</span><br><span class="line">) <span class="built_in">character</span> <span class="keyword">set</span> = utf8 <span class="comment">-- 支持中文;</span></span><br></pre></td></tr></table></figure><h3 id="修改并查看注释-comment"><a href="#修改并查看注释-comment" class="headerlink" title="修改并查看注释(comment)"></a>修改并查看注释(<code>comment</code>)</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> customers</span><br><span class="line"><span class="keyword">change</span> <span class="keyword">column</span> cid</span><br><span class="line">cid <span class="built_in">char</span>(<span class="number">4</span>) <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">comment</span> <span class="string">&#x27;编号&#x27;</span>,</span><br><span class="line"><span class="keyword">change</span> <span class="keyword">column</span> cname</span><br><span class="line">cname <span class="built_in">char</span>(<span class="number">20</span>) <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">comment</span> <span class="string">&#x27;姓名&#x27;</span>,</span><br><span class="line"><span class="keyword">change</span> <span class="keyword">column</span> city</span><br><span class="line">city <span class="built_in">char</span>(<span class="number">20</span>) <span class="keyword">comment</span> <span class="string">&#x27;城市&#x27;</span>,</span><br><span class="line"><span class="keyword">change</span> <span class="keyword">column</span> discnt</span><br><span class="line">discnt <span class="built_in">real</span> <span class="keyword">comment</span> <span class="string">&#x27;折扣&#x27;</span>;</span><br><span class="line"><span class="keyword">show</span> <span class="keyword">full</span> <span class="keyword">columns</span> <span class="keyword">from</span> customers;</span><br></pre></td></tr></table></figure><h2 id="insert去重"><a href="#insert去重" class="headerlink" title="insert去重"></a><code>insert</code>去重</h2><ul><li><code>ignore</code></li></ul><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">ignore</span> <span class="keyword">into</span> <span class="keyword">table</span> (<span class="keyword">column</span>)</span><br><span class="line"> <span class="keyword">values</span></span><br><span class="line"> ...</span><br></pre></td></tr></table></figure><ul><li><code>on duplicate key update</code></li></ul><p><strong>TODO</strong></p><ul><li><code>replace into</code></li></ul><p><strong>TODO</strong></p><h2 id="更新表数据"><a href="#更新表数据" class="headerlink" title="更新表数据"></a>更新表数据</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">update</span> table_name <span class="keyword">set</span> item=<span class="string">&quot;shit&quot;</span> <span class="keyword">where</span> fuck=<span class="string">&quot;fuck&quot;</span>;</span><br></pre></td></tr></table></figure><h2 id="每组前n"><a href="#每组前n" class="headerlink" title="每组前n"></a>每组前n</h2><p><a href="https://www.cnblogs.com/softidea/p/10268811.html">参考</a></p><h2 id="计算时间差"><a href="#计算时间差" class="headerlink" title="计算时间差"></a>计算时间差</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">TIMESTAMPDIFF</span>(<span class="keyword">MONTH</span>,<span class="string">&#x27;2009-10-01&#x27;</span>,<span class="string">&#x27;2009-09-01&#x27;</span>);</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">TIMESTAMPDIFF</span>(<span class="keyword">MONTH</span>,<span class="string">&#x27;2009-10-01&#x27;</span>,<span class="string">&#x27;2009-09-01&#x27;</span>) <span class="keyword">as</span> a;</span><br></pre></td></tr></table></figure><p>其中<code>MONTH</code>部分可以更改为</p><ul><li><code>SECOND</code></li><li><code>MINUTE</code></li><li><code>HOUR</code></li><li><code>DAY</code></li><li><code>MONTH</code></li><li><code>YEAR</code></li></ul><h2 id="通配符"><a href="#通配符" class="headerlink" title="通配符"></a>通配符</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> season_id, <span class="keyword">id</span>, title, p_year, c_year <span class="keyword">from</span> season</span><br><span class="line"><span class="keyword">where</span> title <span class="keyword">like</span> <span class="string">&#x27;%鲁路修%&#x27;</span></span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> p_year;</span><br></pre></td></tr></table></figure><h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><h2 id="添加用户"><a href="#添加用户" class="headerlink" title="添加用户"></a>添加用户</h2><h3 id="insert"><a href="#insert" class="headerlink" title="insert"></a>insert</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">use</span> mysql</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">user</span> ( Host, <span class="keyword">User</span>, Select_priv, Insert_priv, Update_priv, Delete_priv, Create_priv, Drop_priv, Reload_priv, Shutdown_priv, Process_priv, File_priv, Grant_priv, References_priv, Index_priv, Alter_priv, Show_db_priv, Super_priv, Create_tmp_table_priv, Lock_tables_priv, Execute_priv, Repl_slave_priv, Repl_client_priv, Create_view_priv, Show_view_priv, Create_routine_priv, Alter_routine_priv, Create_user_priv, Event_priv, Trigger_priv, Create_tablespace_priv, ssl_type, ssl_cipher, x509_issuer, x509_subject, max_questions, max_updates, max_connections, max_user_connections, <span class="keyword">plugin</span>, authentication_string, password_expired, password_last_changed, password_lifetime, account_locked )</span><br><span class="line">  <span class="keyword">values</span></span><br><span class="line">  (<span class="string">&#x27;localhost&#x27;</span>, <span class="string">&#x27;niabie&#x27;</span>, <span class="string">&#x27;Y&#x27;</span>, <span class="string">&#x27;Y&#x27;</span>, <span class="string">&#x27;Y&#x27;</span>, <span class="string">&#x27;Y&#x27;</span>, <span class="string">&#x27;Y&#x27;</span>, <span class="string">&#x27;Y&#x27;</span>, <span class="string">&#x27;Y&#x27;</span>, <span class="string">&#x27;Y&#x27;</span>, <span class="string">&#x27;Y&#x27;</span>, <span class="string">&#x27;Y&#x27;</span>, <span class="string">&#x27;Y&#x27;</span>, <span class="string">&#x27;Y&#x27;</span>, <span class="string">&#x27;Y&#x27;</span>, <span class="string">&#x27;Y&#x27;</span>, <span class="string">&#x27;Y&#x27;</span>, <span class="string">&#x27;Y&#x27;</span>, <span class="string">&#x27;Y&#x27;</span>, <span class="string">&#x27;Y&#x27;</span>, <span class="string">&#x27;Y&#x27;</span>, <span class="string">&#x27;Y&#x27;</span>, <span class="string">&#x27;Y&#x27;</span>, <span class="string">&#x27;Y&#x27;</span>, <span class="string">&#x27;Y&#x27;</span>, <span class="string">&#x27;Y&#x27;</span>, <span class="string">&#x27;Y&#x27;</span>, <span class="string">&#x27;Y&#x27;</span>, <span class="string">&#x27;Y&#x27;</span>, <span class="string">&#x27;Y&#x27;</span>, <span class="string">&#x27;Y&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="string">&#x27;mysql_native_password&#x27;</span>, <span class="keyword">password</span>(<span class="string">&#x27;&#x27;</span>), <span class="string">&#x27;N&#x27;</span>, <span class="string">&#x27;2019-11-07 15:17:00&#x27;</span>, <span class="literal">null</span>, <span class="string">&#x27;N&#x27;</span>);</span><br><span class="line"><span class="keyword">flush</span> <span class="keyword">privileges</span>;<span class="comment"># 更新</span></span><br></pre></td></tr></table></figure><blockquote><p>用户具有创建数据库等的权限,<code>authentication_string</code>不需要则填<code>null</code></p></blockquote><h3 id="create"><a href="#create" class="headerlink" title="create"></a>create</h3><p><a href="http://www.scscms.com/html/article/20140422-mysql.html">参考</a></p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">user</span> lynx;</span><br><span class="line"><span class="keyword">update</span> <span class="keyword">user</span> <span class="keyword">set</span> Host=<span class="string">&#x27;localhost&#x27;</span>, authentication_string=<span class="keyword">password</span>(<span class="string">&#x27;1111&#x27;</span>) <span class="keyword">where</span> <span class="keyword">User</span>=<span class="string">&#x27;lynx&#x27;</span>;</span><br><span class="line"><span class="keyword">flush</span> <span class="keyword">privileges</span>;<span class="comment"># 更新</span></span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">all</span> <span class="keyword">on</span> database.table <span class="keyword">to</span> <span class="string">&#x27;lynx&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span>;<span class="comment"># 分配database的table权限给用户</span></span><br><span class="line"><span class="keyword">show</span> <span class="keyword">grants</span> <span class="keyword">for</span> lynx@localhost;<span class="comment"># 显示用户权限</span></span><br></pre></td></tr></table></figure><blockquote><p>用户没有创建数据库的权限</p></blockquote><h2 id="修改数据库位置"><a href="#修改数据库位置" class="headerlink" title="修改数据库位置"></a>修改数据库位置</h2><ul><li>查看数据库存放位置</li></ul><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">variables</span> <span class="keyword">like</span> <span class="string">&#x27;%dir%&#x27;</span>;</span><br><span class="line"><span class="comment">-- 或</span></span><br><span class="line"><span class="keyword">select</span> @@datadir</span><br></pre></td></tr></table></figure><h3 id="修改数据库存放位置"><a href="#修改数据库存放位置" class="headerlink" title="修改数据库存放位置"></a>修改数据库存放位置</h3><p><a href="https://www.digitalocean.com/community/tutorials/how-to-move-a-mysql-data-directory-to-a-new-location-on-ubuntu-16-04">参考:digitalocean</a></p><ol><li>暂停mysql服务</li></ol><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo systemctl stop mysql</span><br><span class="line">sudo systemctl status mysql</span><br></pre></td></tr></table></figure><ol start="2"><li>转移目录</li></ol><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo rsync -av /var/lib/mysql &#123;dir&#125;</span><br><span class="line">sudo mv /var/lib/mysql /var/lib/mysql.bak</span><br></pre></td></tr></table></figure><ol start="3"><li>修改mysql配置</li></ol><p><code>/etc/mysql/mysql.conf.d/mysqld.cnf</code></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[mysqld]</span><br><span class="line">datadir &#x3D; &#123;dir&#125;&#x2F;mysql&#x2F;</span><br></pre></td></tr></table></figure><ol start="4"><li>修改apparmor访问rules</li></ol><p><code>/etc/apparmor.d/tunables/alias</code></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">alias &#x2F;var&#x2F;lib&#x2F;mysql -&gt; &#123;dir&#125;&#x2F;mysql&#x2F;,</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo systemctl restart apparmor</span><br></pre></td></tr></table></figure><ol start="5"><li>创建mysql所需的的最小文件结构</li></ol><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo mkdir /var/lib/mysql/mysql -p</span><br></pre></td></tr></table></figure><ol start="6"><li>重启mysql</li></ol><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo systemctl start mysql</span><br><span class="line">sudo systemctl status mysql</span><br><span class="line"><span class="comment"># sudo rm -Rf /var/lib/mysql.bak</span></span><br><span class="line"><span class="comment"># sudo systemctl restart mysql</span></span><br></pre></td></tr></table></figure><h2 id="其他-1"><a href="#其他-1" class="headerlink" title="其他"></a>其他</h2><ul><li>创建数据库并选择</li></ul><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">database</span> homework3;</span><br><span class="line"><span class="keyword">show</span> <span class="keyword">databases</span>;</span><br><span class="line"><span class="keyword">use</span> homework3;</span><br><span class="line"><span class="keyword">show</span> <span class="keyword">tables</span>;</span><br></pre></td></tr></table></figure><ul><li>查看版本等</li></ul><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">version</span>();</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">now</span>();</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">user</span>();</span><br></pre></td></tr></table></figure><ul><li>查看端口</li></ul><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">variables</span> <span class="keyword">like</span> <span class="string">&#x27;port&#x27;</span>;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> mysql </tag>
            
            <tag> sql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微电子</title>
      <link href="/2019/11/04/%E5%BE%AE%E7%94%B5%E5%AD%90%E6%9C%9F%E4%B8%AD/"/>
      <url>/2019/11/04/%E5%BE%AE%E7%94%B5%E5%AD%90%E6%9C%9F%E4%B8%AD/</url>
      
        <content type="html"><![CDATA[<h1 id="电路模型和电路定律"><a href="#电路模型和电路定律" class="headerlink" title="电路模型和电路定律"></a>电路模型和电路定律</h1><h2 id="电流和电压的参考方向"><a href="#电流和电压的参考方向" class="headerlink" title="电流和电压的参考方向"></a>电流和电压的参考方向</h2><ul><li>关联参考方向:电流、电压方向一致</li><li>非关联参考方向:电流、电压方向不一致</li></ul><h2 id="电功率和能量"><a href="#电功率和能量" class="headerlink" title="电功率和能量"></a>电功率和能量</h2><p>在$U,I$为关联参考方向下:</p><ul><li>$U,I$同号,元件吸收功率</li><li>$U,I$异号,元件释放功率</li></ul><h2 id="电阻元件"><a href="#电阻元件" class="headerlink" title="电阻元件"></a>电阻元件</h2><blockquote><p>线性电阻</p></blockquote><h2 id="电容元件"><a href="#电容元件" class="headerlink" title="电容元件"></a><em>电容元件</em></h2><p>$dq=Cdv$</p><blockquote><p>电容吸收的功率</p></blockquote><h2 id="电感元件"><a href="#电感元件" class="headerlink" title="电感元件"></a><em>电感元件</em></h2><p>$d\phi=Ldi$</p><h2 id="电压源和电流源"><a href="#电压源和电流源" class="headerlink" title="电压源和电流源"></a>电压源和电流源</h2><h2 id="受控电源"><a href="#受控电源" class="headerlink" title="受控电源"></a>受控电源</h2><blockquote><p>控制系数</p></blockquote><h2 id="基尔霍夫定律"><a href="#基尔霍夫定律" class="headerlink" title="基尔霍夫定律"></a>基尔霍夫定律</h2><ul><li>支路:组成电路的每一个二端元件称为一条支路</li><li>节点:支路的连接点称为节点</li><li>回路:由支路构成的闭合路径称为回路</li></ul><h3 id="KCL-基尔霍夫电流定律"><a href="#KCL-基尔霍夫电流定律" class="headerlink" title="KCL:基尔霍夫电流定律"></a>KCL:基尔霍夫电流定律</h3><p>在集总电路中,任何时刻,对任一节点,所有流出节点的支路电流的<strong>代数和</strong>恒等于0</p><h3 id="KVL-基尔霍夫电压定律"><a href="#KVL-基尔霍夫电压定律" class="headerlink" title="KVL:基尔霍夫电压定律"></a>KVL:基尔霍夫电压定律</h3><p>在集总电路中,任何时刻,沿任一回路所有支路电压的<strong>代数和</strong>恒等于0</p><h1 id="电阻电路的等效变换"><a href="#电阻电路的等效变换" class="headerlink" title="电阻电路的等效变换"></a>电阻电路的等效变换</h1><h2 id="电路的等效变换"><a href="#电路的等效变换" class="headerlink" title="电路的等效变换"></a>电路的等效变换</h2><ul><li>等效电路:对电路的一部分进行简化,用简化的电路替代原电路.<strong>代换与被代换部分的电压,电流关系相同</strong>.这两部分电路互称等效电路</li></ul><h2 id="电阻的串联和并联"><a href="#电阻的串联和并联" class="headerlink" title="电阻的串联和并联"></a>电阻的串联和并联</h2><h3 id="桥形连接"><a href="#桥形连接" class="headerlink" title="桥形连接"></a>桥形连接</h3><p>当满足条件$R_1R_4=R_2R_3$时,对角线支路中的电流为0,称为电桥处于平衡状态,这一条件也成为电桥的平衡条件</p><h2 id="电阻的-Y-形联结和-Delta-形联结的等效变换"><a href="#电阻的-Y-形联结和-Delta-形联结的等效变换" class="headerlink" title="电阻的$Y$形联结和$\Delta$形联结的等效变换"></a>电阻的$Y$形联结和$\Delta$形联结的等效变换</h2><ul><li>$\Delta$形电阻$=\dfrac{Y\text{形电阻两两乘积之和}}{Y\text{形不相邻电阻}}$</li></ul><p>$R_{12}=\dfrac{R_1R_2+R_2R_3+R_3R_1}{R_3}$<br>$R_{23}=\dfrac{R_1R_2+R_2R_3+R_3R_1}{R_1}$<br>$R_{31}=\dfrac{R_1R_2+R_2R_3+R_3R_1}{R_2}$</p><ul><li>$Y$形电阻$=\dfrac{\Delta\text{形相邻电阻的乘积}}{\Delta\text{形电阻之和}}$</li></ul><p>$R_1=\dfrac{R_{12}R_{31}}{R_{12}+R_{23}+R_{31}}$<br>$R_2=\dfrac{R_{23}R_{12}}{R_{12}+R_{23}+R_{31}}$<br>$R_3=\dfrac{R_{31}R_{23}}{R_{12}+R_{23}+R_{31}}$</p><h2 id="电压源-电流源的串并联"><a href="#电压源-电流源的串并联" class="headerlink" title="电压源,电流源的串并联"></a>电压源,电流源的串并联</h2><ul><li>只有<strong>电压相等极性一致</strong>的电压源才允许并联,等效电路为其中任一电压源</li><li>只有<strong>电流相等</strong>且<strong>方向一致</strong>的电流源才允许串联,等效电路为其中任一电流源</li></ul><h2 id="实际电源的两种模型及其等效变换"><a href="#实际电源的两种模型及其等效变换" class="headerlink" title="实际电源的两种模型及其等效变换"></a>实际电源的两种模型及其等效变换</h2><ul><li>电压源转为电流源:$i_s=\dfrac{u_s}{R}$</li></ul><h2 id="含受控源电路的-输入电阻"><a href="#含受控源电路的-输入电阻" class="headerlink" title="(含受控源电路的)输入电阻"></a>(含受控源电路的)输入电阻</h2><p>当一端口无源网络内含有受控源时,可以采用<strong>外加电压法</strong>或<strong>外加电流法</strong>求得输入电阻之和</p><h1 id="电阻电路的一般分析"><a href="#电阻电路的一般分析" class="headerlink" title="电阻电路的一般分析"></a>电阻电路的一般分析</h1><h2 id="电路的图"><a href="#电路的图" class="headerlink" title="电路的图"></a>电路的图</h2><h3 id="线图-图"><a href="#线图-图" class="headerlink" title="线图(图)"></a>线图(图)</h3><p>用线段代替电路中的每个元件,线段称为<strong>支路</strong>,线段的端点称为<strong>结点</strong>,这样的以线,点组成的几何结构图称为线图或拓扑图,简称<strong>图</strong>,用**$G$**表示</p><h3 id="树-树支-连支"><a href="#树-树支-连支" class="headerlink" title="树,树支,连支"></a>树,树支,连支</h3><ul><li>树:包含图$G$的全部结点和部分支路,本身是连通的,不包含回路,用**$T$**表示</li><li>树支:构成树的各支路叫<strong>树支</strong></li><li>连支:除树支以外的其他支路称为<strong>连支</strong></li></ul><h2 id="KCL和KVL的独立方程数"><a href="#KCL和KVL的独立方程数" class="headerlink" title="KCL和KVL的独立方程数"></a>KCL和KVL的独立方程数</h2><ul><li>对一个节点数为$n$,支路数为$b$的连通图<ul><li>KCL独立方程数为$n-1$个</li><li>KVL独立方程数等于它的独立回路(连支)数$b-n+1$</li></ul></li></ul><h2 id="支路电流法"><a href="#支路电流法" class="headerlink" title="支路电流法"></a>支路电流法</h2><ol><li>选定各支路电流的参考方向</li><li>对$(n-1)$个独立结点列出KCL方程</li><li>选取$(b-n+1)$个独立回路,指定回路的绕行方向,列出KVL方程</li></ol><h2 id="网孔电流法"><a href="#网孔电流法" class="headerlink" title="网孔电流法"></a><em>网孔电流法</em></h2><p>仅适用于平面电路</p><h2 id="回路电流法"><a href="#回路电流法" class="headerlink" title="回路电流法"></a><em>回路电流法</em></h2><ol><li>根据给定的电路,通过选择一个树确定一组基本回路,并指定各回路电流的参考方向</li><li>列出回路电流方程</li><li>当电路中优受控源或无伴电流源时,另行处理</li><li>对于平面电路可用网孔电流法</li></ol><h2 id="结点电压法"><a href="#结点电压法" class="headerlink" title="结点电压法"></a><em>结点电压法</em></h2><ol><li>指定参考结点,其余结点对参考节点之间的电压就是节点电压.通常以参考结点为各节点电压的负极性</li><li>列出节点电压方程</li><li>当电路中有受控源或无伴电压源时需另行处理</li></ol><h1 id="电路定理"><a href="#电路定理" class="headerlink" title="电路定理"></a>电路定理</h1><h2 id="叠加定理"><a href="#叠加定理" class="headerlink" title="叠加定理"></a>叠加定理</h2><p>一个具有唯一解的线性电阻电路,任一处的电压(或电流)是各个<strong>独立电源</strong>单独作用时在该处产生的电压(或电流)的叠加</p><h3 id="齐性定理"><a href="#齐性定理" class="headerlink" title="齐性定理"></a>齐性定理</h3><p>线性电路中当所有激励都增大或缩小$N$倍,则电路的相应也将增大或缩小$N$倍</p><h2 id="替代定理"><a href="#替代定理" class="headerlink" title="替代定理"></a>替代定理</h2><h2 id="戴维宁定理和诺顿定理"><a href="#戴维宁定理和诺顿定理" class="headerlink" title="戴维宁定理和诺顿定理"></a>戴维宁定理和诺顿定理</h2><h3 id="戴维宁定理"><a href="#戴维宁定理" class="headerlink" title="戴维宁定理"></a>戴维宁定理</h3><p>一个含独立电源,线性电阻和受控源的一端口,对外电路来说,可以用一个电压源与电阻的串联组合来等效.其中电压源的电压等于一端口的开路电压$U_{OC}$,电阻等于一端口的全部独立电源均置0后的输入电阻$R_i$</p><h3 id="诺顿定理"><a href="#诺顿定理" class="headerlink" title="诺顿定理"></a>诺顿定理</h3><p>一个含独立电源,线性电阻和受控源的二端网络,可以等效为一个电流源和电导的并联组合.电流源的电流等于该网络的短路电流,电导等于该网络全部独立电源置0后的输入电导</p><h1 id="动态电路"><a href="#动态电路" class="headerlink" title="动态电路"></a><em>动态电路</em></h1><p>含有动态元件电容和电感的电路称为动态电路</p><p>特点:当动态电路状态发生改变时(<strong>换路</strong>)需要经历一个变化过程才能达到新的稳定状态.这个变化过程称为电路的过渡过程</p><p>过渡过程产生的原因:电路内部含有储能元件$L,C$,电路在换路时能量发生变化,而<strong>能量的存储和释放都需要一定的时间来完成</strong></p><h2 id="动态电路的方程"><a href="#动态电路的方程" class="headerlink" title="动态电路的方程"></a>动态电路的方程</h2><p>含有一个动态元件电容或电感的线性电路,其电路方程为<strong>一阶线性常微分方程</strong>,称<strong>一阶电路</strong><br>含有两个动态元件的线性电路,其电路方程为<strong>二阶线性常微分方程</strong>,称<strong>二阶电路</strong><br>结论</p><ul><li>描述动态电路的电路方程为微分方程</li><li>动态电路方程的阶数通常等于电路中动态元件的个数</li></ul><h2 id="动态电路的初始条件"><a href="#动态电路的初始条件" class="headerlink" title="动态电路的初始条件"></a>动态电路的初始条件</h2><h3 id="换路定律"><a href="#换路定律" class="headerlink" title="换路定律"></a>换路定律</h3><p>换路瞬间,若电容电流保持为有限值,则电容电压(电荷)换路前后保持不变<br>换路瞬间,若电感电压保持为有限值,则电感电流(磁链)换路前后保持不变</p><h1 id="正弦电路"><a href="#正弦电路" class="headerlink" title="正弦电路"></a><em>正弦电路</em></h1><h2 id="同频率正弦量的相位差"><a href="#同频率正弦量的相位差" class="headerlink" title="同频率正弦量的相位差"></a>同频率正弦量的相位差</h2><p>$\phi=\psi_i-\psi_u$</p><ul><li>$\psi &lt; 0,u$超前$i$ $\phi$角($u$比$i$先到达最大值)</li></ul><blockquote><p>同相,反相</p></blockquote><h2 id="周期性电流-电压的有效值"><a href="#周期性电流-电压的有效值" class="headerlink" title="周期性电流,电压的有效值"></a>周期性电流,电压的有效值</h2><p>电压有效值$U=\sqrt{\dfrac{1}{T}\int_0^Tu^2(t)dt}=\dfrac{1}{\sqrt{2}}U_m$</p><h2 id="正弦稳态电路的功率"><a href="#正弦稳态电路的功率" class="headerlink" title="正弦稳态电路的功率"></a>正弦稳态电路的功率</h2><p>$u(t)=\sqrt{2}U\sin\omega t,i(t)=\sqrt{2}I\sin(\omega t-\phi)$</p><ul><li>平均功率:$P=\dfrac{1}{T}\int_0^Tpdt=UIcos\phi$,表示电路实际消耗的功率,亦称为<strong>有功功率</strong></li><li>无功功率:$Q=UI\sin\phi$,反映网络与外电路交换功率的大小,是由储能元件$L,C$的性质决定的.单位:var(乏)</li><li>视在功率(表观功率):$S=UI$,反映含源一端口的做功能力,反映电气设备的容量.单位:$VA$(伏安)</li></ul><h3 id="R-L-C元件的有功功率和无功功率"><a href="#R-L-C元件的有功功率和无功功率" class="headerlink" title="R,L,C元件的有功功率和无功功率"></a>R,L,C元件的有功功率和无功功率</h3><p>对电阻,$u,i$同相,故$Q=0$,电阻只吸收(消耗)功率,不发出功率</p><ul><li>$P_R=UI\cos\phi=UI\cos0$</li><li>$Q_R=UI\sin\phi=UI\sin0$</li></ul><p>对电感,$u$领先$i$ 90,故$P_L=0$,即电感不消耗功率.由于$Q_L &gt; 0$,故电感吸收无功功率</p><ul><li>$P_R=UI\cos\phi=UI\cos90$</li><li>$Q_R=UI\sin\phi=UI\sin90$</li></ul><p>对电容,$i$领先$u$ 90,故$P_C=0$,即电容不消耗功率.由于$Q_C &lt; 0$,故电容发出无功功率</p><h3 id="电感-电容的无功补偿作用"><a href="#电感-电容的无功补偿作用" class="headerlink" title="电感,电容的无功补偿作用"></a>电感,电容的无功补偿作用</h3><p>当$L$发出功率时,$C$刚好吸收功率,则与外电路交换功率为$p_L+p_C$.因此$L,C$的无功具有互相补偿的作用</p><h3 id="有功-无功-视在功率的关系"><a href="#有功-无功-视在功率的关系" class="headerlink" title="有功,无功,视在功率的关系"></a>有功,无功,视在功率的关系</h3><p>$S=\sqrt{P^2+Q^2}$</p><h3 id="功率因数提高"><a href="#功率因数提高" class="headerlink" title="功率因数提高"></a>功率因数提高</h3><p>设备容量$S$(额定)向负载送多少有功要由负载的阻抗角决定:$P=S\cos\phi$</p><p>功率因数低带来的问题:</p><ol><li>设备不能充分利用,电流到了额定值,但功率容量还有</li><li>当输出相同的有功功率时,线路上的电流大,线路压降损耗大</li></ol><p>解决办法:并联电容,提高功率因数(改进自身设备)</p><ul><li>$P_R=UI\cos\phi=UI\cos0$</li><li>$Q_R=UI\sin\phi=UI\sin0$</li></ul>]]></content>
      
      
      <categories>
          
          <category> 微电子 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>openCV安装</title>
      <link href="/2019/10/21/openCV%E5%AE%89%E8%A3%85/"/>
      <url>/2019/10/21/openCV%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<h1 id="AS和cmake笔记"><a href="#AS和cmake笔记" class="headerlink" title="AS和cmake笔记"></a>AS和cmake笔记</h1><h2 id="android的cpu架构"><a href="#android的cpu架构" class="headerlink" title="android的cpu架构"></a>android的cpu架构</h2><ul><li>android查看cpu架构(<code>termux</code>)</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cat /proc/cpuinfo</span><br></pre></td></tr></table></figure><ul><li><code>AArch32</code>是<code>ARMv7</code>架构的一种执行状态</li><li><code>AArch64</code>是<code>ARMv8</code>架构的一种执行状态<ul><li><a href="https://blog.csdn.net/rd_w_csdn/article/details/53841018">参考</a></li><li><a href="https://blog.csdn.net/mao520741111/article/details/50328669">参考</a></li></ul></li><li>64位<code>ARMv8</code>包含上面两种状态<ul><li><a href="https://cloud.tencent.com/developer/article/1443783">参考</a></li><li><a href="https://zhuanlan.zhihu.com/p/23102158">知乎</a></li><li><a href="https://zhuanlan.zhihu.com/p/21359984">知乎</a></li></ul></li></ul><h2 id="cmake在AS中的使用"><a href="#cmake在AS中的使用" class="headerlink" title="cmake在AS中的使用"></a>cmake在AS中的使用</h2><p>不要把<code>mk</code>和<code>cmake</code>两种方法混淆</p><h3 id="输出控制-message"><a href="#输出控制-message" class="headerlink" title="输出控制(message)"></a>输出控制(<code>message</code>)</h3><blockquote><p>(TODO)如果想直接看到打印信息,使用<code>WARNING</code>以上的级别进行打印</p></blockquote><ul><li><code>message(WARNING &quot;fuck&quot;)</code><ul><li>在<code>Build</code>-&gt;<code>Build Output</code>-&gt;<code>CMake warnings</code>查看</li><li>在<code>Build</code>-&gt;<code>Build Output</code>-&gt;<code>Toggle View</code>查看</li></ul></li></ul><h1 id="Android"><a href="#Android" class="headerlink" title="Android"></a>Android</h1><ul><li>版本信息<ul><li><code>Android Studio</code>版本为3.5</li><li><code>Build-Tools</code>版本为28.0.3</li></ul></li><li>需要使用<code>SDK Manager</code>安装<ul><li>ndk</li><li>cmake</li></ul></li></ul><h2 id="只使用java模块"><a href="#只使用java模块" class="headerlink" title="只使用java模块"></a>只使用<code>java</code>模块</h2><h3 id="3-x-3-4-7-3-x版本"><a href="#3-x-3-4-7-3-x版本" class="headerlink" title="3.x-3.4.7-3.x版本"></a><code>3.x</code>-<code>3.4.7</code>-<code>3.x</code>版本</h3><ol><li><code>File</code>-&gt;<code>New</code>-&gt;<code>Import Module</code>-&gt;选择opencv文件夹下的<code>sdk/java</code>文件夹,此时<code>Android Studio</code>会自动加载<code>Module name</code></li><li><code>File</code>-&gt;<code>Project Structure</code>-&gt;<code>Dependencies</code>-&gt;选择<code>app</code>-&gt;添加<code>Module Dependency</code>-&gt;选择opencv</li><li>将opencv文件夹下的<code>sdk/native/libs</code>下自己手机cpu对应的架构文件夹复制到<code>app/libs</code>下</li><li>将opencv模块的<code>build.gradle</code>的<code>complieSdkVersion</code>,<code>buildToolVersion</code>,<code>minSdkVersion</code>,<code>targetSdkVersion</code>改成和<code>app</code>的<code>build.gradle</code>一样</li><li>在<code>app</code>的<code>build.gradle</code>的<code>android</code>节点下添加<figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line"><span class="keyword">sourceSets</span> &#123;</span><br><span class="line">  main &#123;</span><br><span class="line">    jni.srcDirs = []</span><br><span class="line">    jniLibs.srcDirs = [<span class="string">&#x27;libs&#x27;</span>]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>然后点击<code>sync now</code></li><li>在使用opencv前进行初始化<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">static</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (!OpenCVLoader.initDebug()) &#123;</span><br><span class="line">    ...</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h3 id="常见错误"><a href="#常见错误" class="headerlink" title="常见错误"></a>常见错误</h3><ol><li><code>Caused by: CvException [org.opencv.core.CvException: OpenCV(4.1.1) /build/master_pack-android/opencv/modules/java/generator/src/cpp/utils.cpp:101: error: (-215:Assertion failed)</code></li></ol><p>在<code>Mat</code>与<code>Bitmap</code>互转的时候长宽设置不对</p><h2 id="只使用native模块"><a href="#只使用native模块" class="headerlink" title="只使用native模块"></a>只使用<code>native</code>模块</h2><h3 id="3-x-3-4-7-3-x版本-1"><a href="#3-x-3-4-7-3-x版本-1" class="headerlink" title="3.x-3.4.7-3.x版本"></a><code>3.x</code>-<code>3.4.7</code>-<code>3.x</code>版本</h3><h4 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h4><ol><li><code>CMakeLists.txt</code>编写<ol><li>include头文件目录</li><li>加载libopencv动态库(<code>libopencv_world</code>或<code>libopencv_java3</code>),命名为<code>opencv_lib</code></li><li>将<code>opencv_lib</code>加载至目标文件</li></ol></li></ol><figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="keyword">set</span>(opencv_dir /home/lynx/fuck_mount/opencv/build_dir/<span class="number">4</span>_1_0_shared/OpenCV-android-sdk)</span><br><span class="line"><span class="keyword">set</span>(opencv_lib libopencv_world.so) <span class="comment"># 或libopencv_java3.so</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">include_directories</span>(<span class="variable">$&#123;opencv_dir&#125;</span>/sdk/native/jni/<span class="keyword">include</span>)</span><br><span class="line"><span class="keyword">add_library</span>(opencv_lib SHARED IMPORTED)</span><br><span class="line"><span class="keyword">set_target_properties</span>(opencv_lib PROPERTIES IMPORTED_LOCATION</span><br><span class="line">    <span class="variable">$&#123;opencv_dir&#125;</span>/sdk/native/libs/<span class="variable">$&#123;ANDROID_ABI&#125;</span>/<span class="variable">$&#123;opencv_lib&#125;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">target_link_libraries</span>(</span><br><span class="line">        <span class="comment"># 目标文件</span></span><br><span class="line"></span><br><span class="line">        opencv_lib</span><br><span class="line">        <span class="comment"># 其他库 )</span></span><br></pre></td></tr></table></figure><ol start="2"><li>修改app的<code>build.gradle</code><ul><li>在<code>android</code>节点下插入,否则会报错找不到<code>libopencv_world.so</code>或<code>libopencv_java3.so</code></li></ul></li></ol><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line"><span class="keyword">sourceSets</span> &#123;</span><br><span class="line">  main &#123;</span><br><span class="line">    jniLibs.srcDirs = [<span class="string">&#x27;/sdk/native/libs 对应目录&#x27;</span>]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h4><p><a href="https://blog.csdn.net/u010677365/article/details/76922541">参考:CSDN</a></p><ol><li><code>CMakeLists.txt</code><ol><li>设置OpenCV查找的目录</li><li>查找OpenCV</li><li>include头文件目录</li><li>将OpenCV的库添加至目标文件</li></ol></li></ol><figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="keyword">set</span>(sdk_dir /home/lynx/fuck_mount/opencv/build_dir/<span class="number">4</span>_1_0_shared)</span><br><span class="line"><span class="keyword">set</span>(OpenCV_DIR <span class="variable">$&#123;sdk_dir&#125;</span>/OpenCV-android-sdk/sdk/native/jni)</span><br><span class="line"><span class="keyword">find_package</span>(OpenCV REQUIRED)</span><br><span class="line"><span class="keyword">include_directories</span>(<span class="variable">$&#123;sdk_dir&#125;</span>/OpenCV-android-sdk/sdk/native/jni/<span class="keyword">include</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">target_link_libraries</span>( </span><br><span class="line">                       <span class="comment"># 目标文件</span></span><br><span class="line"></span><br><span class="line">                       <span class="variable">$&#123;OpenCV_LIBS&#125;</span></span><br><span class="line">                       <span class="comment"># 其他库 )</span></span><br></pre></td></tr></table></figure><ul><li>如果不设置<code>OpenCV_DIR</code>将无法查找<code>OpenCV</code>包</li></ul><ol start="2"><li>修改app的<code>build.gradle</code></li></ol><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line"><span class="keyword">sourceSets</span> &#123;</span><br><span class="line">  main &#123;</span><br><span class="line">    jniLibs.srcDirs = [<span class="string">&#x27;/home/lynx/fuck_mount/opencv/build_dir/4_1_0_shared/OpenCV-android-sdk/sdk/native/libs&#x27;</span>]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>此外,务必将<code>minSdkVersion</code>调至<strong>21</strong>以上,否则将会只有<code>v8a</code>架构才能成功编译</li><li>在app的<code>build.gradle</code>中:<code>minSdkVersion</code>-&gt;<code>ANDROID_PLATFORM</code></li><li>在<code>ndk</code>的<code>android.toolchain.cmake</code>中:<code>ANDROID_PLATFORM</code>-&gt;<code>ANDROID_PLATFORM_LEVEL</code>-&gt;<code>ANDROID_NATIVE_API_LEVEL</code></li><li>如果不设置<code>minSdkVersion</code>,由于以上的确定关系,<code>ANDROID_NATIVE_API_LEVEL</code>会被设置为16,<code>find_package</code>会失败</li></ul><h3 id="4-x-4-1-0-4-x版本"><a href="#4-x-4-1-0-4-x版本" class="headerlink" title="4.x-4.1.0-4.x版本"></a><code>4.x</code>-<code>4.1.0</code>-<code>4.x</code>版本</h3><h4 id="方法一-1"><a href="#方法一-1" class="headerlink" title="方法一"></a>方法一</h4><p>同<code>3.x</code>版本的<code>方法一</code></p><h4 id="方法二-1"><a href="#方法二-1" class="headerlink" title="方法二"></a>方法二</h4><p>同<code>3.x</code>版本的<code>方法二</code></p><h3 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h3><ol><li><code>java.lang.UnsatisfiedLinkError: dlopen failed: library &quot;libc++_shared.so&quot; not found</code>(<code>4.x</code>版本)</li></ol><p><a href="https://stackoverflow.com/questions/39620739/android-studio-cmake-shared-library-missing-libc-shared-so-can-cmake-bundle">stackoverflow</a></p><p>(不确定的解决方法)在app的gradle中修改</p><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line">externalNativeBuild &#123;</span><br><span class="line">  cmake &#123;</span><br><span class="line">    cppFlags <span class="string">&quot;&quot;</span></span><br><span class="line">      arguments <span class="string">&quot;-DANDROID_STL=c++_shared&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>不要使用<code>gnustl_shared</code>或<code>gnustl_static</code>,已经过时</p><ol start="2"><li><code>java.lang.UnsatisfiedLinkError: dlopen failed: library &quot;libopencv_java3.so&quot; not found</code>(或<code>libopencv_java4.so</code>)</li></ol><p>这是由于忘记了上面的第2步.Android Studio默认的<code>jni</code>路径为<code>app/src/main/jniLibs</code>,除了在<code>CMakeLists.txt</code>中导入opencv的库以外还需要二选一</p><ul><li>将对应版本opencv的库(<code>libs/</code>下一级的各个<code>$&#123;ANDROID_ABI&#125;</code>文件夹)移动到<code>jniLibs</code>下</li><li>在<code>build.gradle</code>中修改默认<code>jni</code>路径(见上面第2步)</li></ul><ol start="3"><li>各种<code>undefined reference to *</code>(<code>3.x</code>版本)</li></ol><p>如<code>std::ios_base::Init::Init()</code>等</p><p><strong>TODO</strong></p><ol start="4"><li>各类<code>AndroidBitmap</code>的问题(<code>3.x</code>版本)</li></ol><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">undefined reference to &#96;AndroidBitmap_getInfo&#39;</span><br></pre></td></tr></table></figure><p>在<code>CMakeLists.txt</code>增加</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">target_link_libraries(</span><br><span class="line">        # TODO 解决 AndroidBitmap 报错</span><br><span class="line">        jnigraphics)</span><br></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/lj402159806/article/details/69049587">参考:CSDN</a>,这是一个很小的库,展示一个稳定的,基于C语言的接口,使本机代码安全地访问Java对象的像素缓冲区的位图</p><h2 id="source-code-使用完整代码"><a href="#source-code-使用完整代码" class="headerlink" title="source code(使用完整代码)"></a>source code(使用完整代码)</h2><h3 id="3-x-3-x版本-未成功-需要eclipse"><a href="#3-x-3-x版本-未成功-需要eclipse" class="headerlink" title="3.x-3.x版本(未成功,需要eclipse)"></a><code>3.x</code>-<code>3.x</code>版本(<strong>未成功</strong>,需要eclipse)</h3><h3 id="4-x-4-1-0-4-x版本-1"><a href="#4-x-4-1-0-4-x版本-1" class="headerlink" title="4.x-4.1.0-4.x版本"></a><code>4.x</code>-<code>4.1.0</code>-<code>4.x</code>版本</h3><p><a href="https://blog.csdn.net/qq_38743313/article/details/98958207">参考:CSDN</a></p><ol><li><p>环境变量</p><ul><li><code>JAVA_HOME</code><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> JAVA_HOME=/home/lynx/fuck_mount/Android_Studio/jre <span class="comment"># 使用Android Studio的JDK位置</span></span><br></pre></td></tr></table></figure></li><li><code>ANDROID_SDK</code>(非必须)<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> ANDROID_SDK=/home/lynx/fuck_mount/Android_SDK</span><br></pre></td></tr></table></figure></li><li><code>ANDROID_NDK</code>(非必须)<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> ANDROID_NDK=/home/lynx/fuck_mount/Android_SDK/ndk/&#123;版本&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>调整结构</p><ul><li>修改toolchain:android ndk的<code>ndk/build/cmake/android.toolchain.cmake</code>(约112行)<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="keyword">elseif</span>(ANDROID_TOOLCHAIN_NAME <span class="keyword">MATCHES</span> <span class="string">&quot;-[0-9].[0-9]$&quot;</span>)</span><br><span class="line">  <span class="keyword">set</span>(ANDROID_TOOLCHAIN clang) <span class="comment"># 将gcc改成clang</span></span><br><span class="line"><span class="keyword">endif</span>()</span><br></pre></td></tr></table></figure></li><li>android stl,在源代码的<code>/platforms/android/build_sdk.py</code>(约113行)(非必须)<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">self.cmake_vars = dict(</span><br><span class="line">    ANDROID_STL=<span class="string">&quot;c++_static&quot;</span>, <span class="comment"># change `gnustl_static` to `c++_static` or `c++_shared`</span></span><br><span class="line">    ANDROID_ABI=self.name,</span><br><span class="line">    ANDROID_PLATFORM_ID=platform_id,</span><br><span class="line">)</span><br></pre></td></tr></table></figure></li><li>在<code>Android Studio</code>的android sdk文件夹下,创建软连接<code>ln -s build-tools/&#123;版本&#125; tools</code>,否则无法编译安卓模块</li></ul></li><li><p>修改<code>cmake</code>参数(2选1,推荐world)(修改根<code>CMakeLists.txt</code>)</p><ul><li>java<ul><li><code>OPENCV_ENABLE_NONFREE</code>:改为<code>ON</code></li><li><code>BUILD_SHARED_LIBS</code>:不动或者改为<code>OFF</code>,与生成java库冲突</li><li><code>BUILD_ANDROID_PROJECTS</code>:不动或者改为<code>ON</code></li><li><code>BUILD_FAT_JAVA_LIB</code>:不动或者改为<code>ON</code>,保证生成<code>libopencv_java4.so</code></li><li><code>BUILD_JAVA</code>:不动或者改为<code>ON</code></li><li>对<code>/samples/android/CMakeLists.txt</code>中除了<code>ocv_warnings_disable(CMAKE_CXX_FLAGS -Wmissing-declarations)</code>那一行,其他全部注释掉,否则android sdk会在编译sample时报错</li></ul></li><li>world<ul><li><code>OPENCV_ENABLE_NONFREE</code>:改为<code>ON</code></li><li><code>BUILD_SHARED_LIBS</code>:改为<code>ON</code></li><li><code>BUILD_ANDROID_PROJECTS</code>:不动或者改为<code>ON</code></li><li><code>BUILD_FAT_JAVA_LIB</code>:改为<code>OFF</code>,生成<code>libopencv_world.so</code></li><li><code>BUILD_JAVA</code>:不动或者改为<code>ON</code></li><li>对<code>/samples/android/CMakeLists.txt</code>中除了<code>ocv_warnings_disable(CMAKE_CXX_FLAGS -Wmissing-declarations)</code>那一行,其他全部注释掉,否则android sdk会在编译sample时报错</li></ul></li></ul></li><li><p>执行<code>platforms/android/build_sdk.py</code>,完成编译</p></li></ol><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./build_sdk.py --ndk_path &#123;ndk路径&#125; --sdk_path &#123;android sdk路径&#125; --extra_modules_path &#123;path_to_contrib/modules&#125; &#123;目标位置&#125; &#123;opencv源码位置&#125;</span><br><span class="line"><span class="comment"># example</span></span><br><span class="line">/home/lynx/fuck_mount/opencv_4_1_0/opencv-4.1.0/platforms/android/build_sdk.py --ndk_path /home/lynx/fuck_mount/Android/SDK/ndk/18.1.5063045 --sdk_path /home/lynx/fuck_mount/Android/SDK --extra_modules_path /home/lynx/fuck_mount/opencv/source_code/opencv_contrib_4_1_0/modules /home/lynx/fuck_mount/opencv_4_1_0/android_build /home/lynx/fuck_mount/opencv_4_1_0/opencv-4.1.0</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>如果没有设置则默认为环境变量</p><ul><li><code>sdk-path</code>:Android Studio的SDK目录</li><li><code>ndk-path</code>:Android Studio的SDK目录下<code>ndk/&#123;ndk版本号文件&#125;</code></li></ul><ol start="5"><li>后续关于<code>CMakeLists.txt</code>(android项目内的)和<code>build.gradle</code>的修改同<code>native</code>方法</li></ol><h3 id="常见错误-1"><a href="#常见错误-1" class="headerlink" title="常见错误"></a>常见错误</h3><ol><li><code>java.lang.UnsatisfiedLinkError: dalvik.system.PathClassLoader[DexPathList[[zip file &quot;/data/app/com.example.stitch-sPWgBONIqUrdX9XLB1OY6w==/base.apk&quot;],nativeLibraryDirectories=[/data/app/com.example.stitch-sPWgBONIqUrdX9XLB1OY6w==/lib/arm64, /data/app/com.example.stitch-sPWgBONIqUrdX9XLB1OY6w==/base.apk!/lib/arm64-v8a, /system/lib64, /product/lib64]]] couldn&#39;t find &quot;libnative-lib.so&quot;</code></li></ol><p>缺少相应ABI的<code>so</code>库(目前计时在gradle里加入<code>abiFilters</code>也没有用),上述报错是因为没有编译全ABI.<code>ABI</code>配置:<code>opencv-4.x/platforms/android/ndk-18-api-level-21.config.py</code></p><ol start="2"><li>没装<code>cmake</code></li></ol><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Executing: [&#39;ninja&#39;, &#39;--version&#39;]</span><br><span class="line">Failed: [Errno 2] No such file or directory</span><br></pre></td></tr></table></figure><p>Android Studio需要在SDK Manager里面预先安装<code>CMake</code>,否则编译的时候会找不到<code>ninja</code>等程序</p><ol start="3"><li><p>没有<code>libopencv_java4.so</code></p><ul><li><code>BUILD_FAT_JAVA_LIB</code>和<code>BUILD_ANDROID_PROJECTS</code>要设置<code>ON</code>(或默认)</li><li>记得修改android sdk tools文件结构</li><li>不能同时编译动态库</li></ul></li><li><p>编译错误</p></li></ol><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Regex: &#39;command line option .* is valid for .* but not for C\+\+&#39;</span><br></pre></td></tr></table></figure><p><strong>TODO</strong>,可能是编译器的问题或cmake参数设置错误</p><ol start="5"><li>android project报错</li></ol><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">A problem occurred configuring project &#39;:face-detection&#39;.</span><br><span class="line">&gt; NDK not configured.</span><br><span class="line">  Download it with SDK manager.</span><br></pre></td></tr></table></figure><p>把<code>samples/android/CMakeLists.txt</code>对应代码注释掉</p><ol start="6"><li>ndk报错</li></ol><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">CMake Error at &#x2F;home&#x2F;lynx&#x2F;fuck_mount&#x2F;Android_SDK&#x2F;ndk&#x2F;20.1.5948944&#x2F;build&#x2F;cmake&#x2F;android.toolchain.cmake:169 (message):</span><br><span class="line">  GCC is no longer supported.  See</span><br><span class="line">  https:&#x2F;&#x2F;android.googlesource.com&#x2F;platform&#x2F;ndk&#x2F;+&#x2F;master&#x2F;docs&#x2F;ClangMigration.md.</span><br></pre></td></tr></table></figure><p>需要将<code>ndk</code>的<code>build/cmake/android.toolchain.cmake</code>中<code>set(ANDROID_TOOLCHAIN gcc)</code>改为<code>clang</code></p><ol start="7"><li>ninja报错</li></ol><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">CMake Error: CMake was unable to find a build program corresponding to &quot;Ninja&quot;.  CMAKE_MAKE_PROGRAM is not set.  You probably need to select a different build tool.</span><br></pre></td></tr></table></figure><p>将ndk的<code>bin</code>目录(包含<code>ninja</code>等程序)添加至<code>$PATH</code></p><ol start="8"><li>ccache未安装(<code>3.x</code>版本,<strong>TODO</strong>:不确定是否为必须)</li></ol><p>用apt安装<code>ccache</code>即可</p><ol start="9"><li>ld报错(<code>3.x</code>版本)</li></ol><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cannot open crtbegin_dynamic.o: 没有那个文件或目录</span><br><span class="line">cannot open crtend_android.o: 没有那个文件或目录</span><br><span class="line">cannot find -lstdc++</span><br><span class="line">cannot find -lm</span><br><span class="line">cannot find -lc</span><br><span class="line">cannot find -ldl</span><br></pre></td></tr></table></figure><p><strong>TODO</strong>修改<code>gcc</code>参数(但很大程度上是由于cmake参数配置错误)</p><ol><li>添加<code>-nostdlib</code></li><li>修改<code>--sysroot</code>参数</li></ol><ol start="10"><li>clang++报错</li></ol><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">error while loading shared libraries: libtinfo.so.5: cannot open shared object file: No such file or directory</span><br></pre></td></tr></table></figure><p>使用apt安装<code>libtinfo5</code></p><ol start="11"><li>编译错误</li></ol><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">error: use of undeclared identifier &#39;vcvt_f16_f32&#39;</span><br><span class="line">    float16x4_t v_dst &#x3D; vcvt_f16_f32(v_src);</span><br></pre></td></tr></table></figure><p>多种可能</p><ul><li>换<code>ndk</code></li><li><code>opencv_contrib</code>的路径设置错误</li></ul><ol start="12"><li><code>libopencv_java3.so</code>没有生成(<code>3.x</code>版本)</li></ol><p><strong>TODO</strong>,很大程度上是由于cmake参数配置错误</p><ol start="13"><li>cmake报错</li></ol><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Android SDK: Can&#39;t build Android projects as requested by</span><br><span class="line">  BUILD_ANDROID_PROJECTS&#x3D;ON variable.</span><br></pre></td></tr></table></figure><ul><li><code>4.x</code>:android sdk build tool版本过低</li><li><code>3.x</code>:需要sdk整合ant(ide为eclipse)</li></ul><ol start="14"><li>java报错</li></ol><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">opencv init failed</span><br></pre></td></tr></table></figure><p>检查<code>gradle</code>的<code>lib</code>路径是否正确加载</p><ol start="15"><li><code>freetype</code>/<code>harfbuzz</code>报错</li></ol><p>卸载系统中的<code>freetype</code>和<code>harfbuzz</code>在<code>opencv_contrib/modules/freetype/CMakeLists.txt</code>中修改</p><figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(PKG_CONFIG_FOUND)</span><br><span class="line"><span class="comment"># pkg_search_module(FREETYPE freetype2)</span></span><br><span class="line"><span class="comment"># pkg_search_module(HARFBUZZ harfbuzz)</span></span><br><span class="line"><span class="keyword">endif</span>()</span><br></pre></td></tr></table></figure><p>注释掉搜索<code>freetype</code>和<code>harfbuzz</code>的那两句</p><h3 id="额外说明"><a href="#额外说明" class="headerlink" title="额外说明"></a>额外说明</h3><h4 id="4-x版本"><a href="#4-x版本" class="headerlink" title="4.x版本"></a><code>4.x</code>版本</h4><ul><li>不需要额外安装的软件:<code>jdk</code>,<code>ninja-build</code>,<code>ndk</code>,直接使用android studio的即可</li><li>成功编译的版本:<ul><li><code>ndk</code>:<code>20.1.5948944</code></li><li><code>sdk tools</code>:<code>28.0.3</code></li><li><code>cmake</code>:<code>3.13.4</code></li></ul></li><li>失败的版本:<ul><li><code>ndk</code>:<code>21.0.6113669</code>(报错<code>undefined referrence to &#39;__write_chk&#39;</code>)</li><li><code>sdk tools</code>:<code>25.0.3</code>(不能configure android project)</li></ul></li></ul><h4 id="3-x版本-目前还没能成功编译android-project"><a href="#3-x版本-目前还没能成功编译android-project" class="headerlink" title="3.x版本 目前还没能成功编译android project"></a><code>3.x</code>版本 目前还<strong>没能</strong>成功编译android project</h4><ul><li><code>3.x</code>成功编译的版本:<ul><li>无</li></ul></li><li>失败的版本:<ul><li><code>ndk</code>:<code>20.1.5948944</code>(报错<code>undefined referrence to &#39;__vsnprintf_chk&#39;</code>)</li></ul></li></ul><h2 id="使用JavaCV"><a href="#使用JavaCV" class="headerlink" title="使用JavaCV"></a>使用<code>JavaCV</code></h2><h3 id="4-x版本-1"><a href="#4-x版本-1" class="headerlink" title="4.x版本"></a><code>4.x</code>版本</h3><blockquote><p>不同导入方法,<code>import</code>的class位置可能不同</p></blockquote><h4 id="opencv部分功能的初始化"><a href="#opencv部分功能的初始化" class="headerlink" title="opencv部分功能的初始化"></a><code>opencv</code>部分功能的初始化</h4><p><a href="https://github.com/bytedeco/javacpp-presets/tree/master/opencv#documentation">github原文</a></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Loader.load(opencv_java.class);// 不能直接放在class开头</span><br></pre></td></tr></table></figure><h4 id="使用远程导入"><a href="#使用远程导入" class="headerlink" title="使用远程导入"></a>使用远程导入</h4><p><code>app</code>的<code>build.gradle</code>示例(最外节点)</p><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line">ext &#123;</span><br><span class="line">    versions = [</span><br><span class="line">            <span class="string">&#x27;javacv&#x27;</span>: <span class="string">&#x27;1.4.4&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;ffmpeg&#x27;</span>: <span class="string">&#x27;4.1&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;opencv&#x27;</span>: <span class="string">&#x27;4.0.1&#x27;</span></span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">dependencies</span> &#123;</span><br><span class="line">    ...</span><br><span class="line">    implementation(<span class="keyword">group</span>: <span class="string">&#x27;org.bytedeco&#x27;</span>, name: <span class="string">&#x27;javacv-platform&#x27;</span>, version: versions.javacv) &#123;</span><br><span class="line">      <span class="keyword">exclude</span> <span class="keyword">group</span>: <span class="string">&#x27;org.bytedeco.javacpp-presets&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    implementation <span class="keyword">group</span>: <span class="string">&#x27;org.bytedeco.javacpp-presets&#x27;</span>, name: <span class="string">&#x27;ffmpeg&#x27;</span>, version: <span class="string">&quot;$&#123;versions.ffmpeg&#125;-$&#123;versions.javacv&#125;&quot;</span></span><br><span class="line">    implementation <span class="keyword">group</span>: <span class="string">&#x27;org.bytedeco.javacpp-presets&#x27;</span>, name: <span class="string">&#x27;ffmpeg&#x27;</span>, version: <span class="string">&quot;$&#123;versions.ffmpeg&#125;-$&#123;versions.javacv&#125;&quot;</span>, classifier: <span class="string">&#x27;android-arm&#x27;</span></span><br><span class="line">    implementation <span class="keyword">group</span>: <span class="string">&#x27;org.bytedeco.javacpp-presets&#x27;</span>, name: <span class="string">&#x27;ffmpeg&#x27;</span>, version: <span class="string">&quot;$&#123;versions.ffmpeg&#125;-$&#123;versions.javacv&#125;&quot;</span>, classifier: <span class="string">&#x27;android-arm64&#x27;</span></span><br><span class="line">    implementation <span class="keyword">group</span>: <span class="string">&#x27;org.bytedeco.javacpp-presets&#x27;</span>, name: <span class="string">&#x27;opencv&#x27;</span>, version: <span class="string">&quot;$&#123;versions.opencv&#125;-$&#123;versions.javacv&#125;&quot;</span></span><br><span class="line">    implementation <span class="keyword">group</span>: <span class="string">&#x27;org.bytedeco.javacpp-presets&#x27;</span>, name: <span class="string">&#x27;opencv&#x27;</span>, version: <span class="string">&quot;$&#123;versions.opencv&#125;-$&#123;versions.javacv&#125;&quot;</span>, classifier: <span class="string">&#x27;android-arm&#x27;</span></span><br><span class="line">    implementation <span class="keyword">group</span>: <span class="string">&#x27;org.bytedeco.javacpp-presets&#x27;</span>, name: <span class="string">&#x27;opencv&#x27;</span>, version: <span class="string">&quot;$&#123;versions.opencv&#125;-$&#123;versions.javacv&#125;&quot;</span>, classifier: <span class="string">&#x27;android-arm64&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="作为lib导入"><a href="#作为lib导入" class="headerlink" title="作为lib导入"></a>作为<code>lib</code>导入</h4><blockquote><p>根据手机具体的cpu架构进行导入</p></blockquote><p><code>app</code>的<code>build.gradle</code></p><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line"><span class="keyword">dependencies</span> &#123;</span><br><span class="line">    implementation <span class="keyword">fileTree</span>(dir: <span class="string">&#x27;libs&#x27;</span>, <span class="keyword">include</span>: [<span class="string">&#x27;*.jar&#x27;</span>])</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>将文件(视具体情况)</p><ul><li><code>javacpp.jar</code></li><li><code>javacv.jar</code></li><li><code>openblas.jar</code></li><li><code>openblas-android-arm64.jar</code></li><li><code>opencv.jar</code></li><li><code>opencv-android-arm64.jar</code><br>复制到<code>app/libs/</code>文件夹里</li></ul><h3 id="常见错误-2"><a href="#常见错误-2" class="headerlink" title="常见错误"></a>常见错误</h3><ol><li>cpu架构错误/缺少(需添加<code>-android-arm</code>之类的库)</li></ol><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">2019-10-27 16:01:32.439 29256-29322&#x2F;? E&#x2F;AndroidRuntime: FATAL EXCEPTION: AsyncTask #1</span><br><span class="line">    Process: com.github.crazyorr.ffmpegrecorder, PID: 29256</span><br><span class="line">    java.lang.RuntimeException: An error occurred while executing doInBackground()</span><br></pre></td></tr></table></figure><ol start="2"><li>没有对<code>opencv</code>初始化</li></ol><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">2019-10-27 16:00:43.930 28933-28933&#x2F;? E&#x2F;AndroidRuntime: FATAL EXCEPTION: main</span><br><span class="line">    Process: com.example.javacv, PID: 28933</span><br><span class="line">    java.lang.UnsatisfiedLinkError: No implementation found for long org.opencv.core.Mat.n_Mat() (tried Java_org_opencv_core_Mat_n_1Mat and Java_org_opencv_core_Mat_n_1Mat__)</span><br></pre></td></tr></table></figure><ol start="3"><li>缺少<code>openblas</code>的相关<code>jar</code>库</li></ol><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">2019-10-27 15:59:23.158 28618-28618&#x2F;? E&#x2F;AndroidRuntime: FATAL EXCEPTION: main</span><br><span class="line">    Process: com.example.javacv, PID: 28618</span><br><span class="line">    java.lang.NoClassDefFoundError: Failed resolution of: Lorg&#x2F;bytedeco&#x2F;openblas&#x2F;presets&#x2F;openblas;</span><br></pre></td></tr></table></figure><h2 id="混用java-native模块"><a href="#混用java-native模块" class="headerlink" title="混用java+native模块"></a>混用<code>java</code>+<code>native</code>模块</h2><h3 id="4-x-native-或source-code-3-x-java"><a href="#4-x-native-或source-code-3-x-java" class="headerlink" title="4.x native(或source code)+3.x java"></a><code>4.x</code> <code>native</code>(或source code)+<code>3.x</code> <code>java</code></h3><p><a href="https://blog.csdn.net/weixin_43815930/article/details/90516455">参考:CSDN</a></p><ol><li><p>加载<code>native</code>模块</p></li><li><p><code>File</code>-&gt;<code>New</code>-&gt;<code>Import Module</code>-&gt;选择opencv文件夹下的<code>sdk/java</code>文件夹,自己定义模块的名字</p></li><li><p>修改模块的gradle文件(<strong>TODO</strong>)</p></li></ol><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 将原来的application改成library</span></span><br><span class="line">apply plugin: <span class="string">&#x27;com.android.library&#x27;</span></span><br><span class="line"></span><br><span class="line">android &#123;</span><br><span class="line">  <span class="comment">// 将版本信息改得和`app`的`build.gradle`一样</span></span><br><span class="line">  compileSdkVersion <span class="number">29</span></span><br><span class="line">  buildToolsVersion <span class="string">&quot;29.0.2&quot;</span></span><br><span class="line">  defaultConfig &#123;</span><br><span class="line">    <span class="comment">// 删除applicationId</span></span><br><span class="line">    minSdkVersion <span class="number">15</span></span><br><span class="line">    targetSdkVersion <span class="number">29</span></span><br><span class="line">    versionCode <span class="number">1</span></span><br><span class="line">    versionName <span class="string">&quot;1.0&quot;</span></span><br><span class="line">    testInstrumentationRunner <span class="string">&quot;androidx.test.runner.AndroidJUnitRunner&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 不改动</span></span><br><span class="line">  buildTypes &#123;</span><br><span class="line">    release &#123;</span><br><span class="line">      minifyEnabled <span class="keyword">false</span></span><br><span class="line">        proguardFiles getDefaultProguardFile(<span class="string">&#x27;proguard-android.txt&#x27;</span>), <span class="string">&#x27;proguard-rules.txt&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>修改app的gradle文件,加载两者的lib,缺一不可</li></ol><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line"><span class="keyword">sourceSets</span> &#123;</span><br><span class="line">  main &#123;</span><br><span class="line">    jniLibs.srcDirs = [<span class="string">&#x27;/home/lynx/fuck_mount/opencv/source_code/opencv_3_4_7_android/sdk/native/libs&#x27;</span>,</span><br><span class="line">              <span class="string">&#x27;/home/lynx/fuck_mount/opencv/build_dir/4_1_0_shared/OpenCV-android-sdk/sdk/native/libs&#x27;</span>]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="5"><li>修改app的gradle文件,添加java模块依赖</li></ol><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">dependencies</span> &#123;</span><br><span class="line">    implementation <span class="keyword">project</span>(path: <span class="string">&#x27;:openCVLibrary347&#x27;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h1><h2 id="OpenCV-source-code-3-x-3-4-7"><a href="#OpenCV-source-code-3-x-3-4-7" class="headerlink" title="OpenCV source code 3.x(3.4.7)"></a><code>OpenCV</code> source code <code>3.x</code>(<code>3.4.7</code>)</h2><h3 id="gui安装"><a href="#gui安装" class="headerlink" title="gui安装"></a>gui安装</h3><p>和<code>4.x</code>一样</p><h3 id="常见错误-3"><a href="#常见错误-3" class="headerlink" title="常见错误"></a>常见错误</h3><ol><li><p><code>fatal error: Eigen/Core: 没有那个文件或目录``#include &lt;Eigen/Core&gt;</code></p><ol><li><p>修改<code>WITH_EIGEN=OFF</code></p></li><li><p>(或)</p><ul><li>先保证安装<code>eigen</code>:<code>sudo apt install libeigen3-dev</code></li><li>添加<code>EIGEN_INCLUDE_PATH=/usr/include/eigen3</code>(视具体情况)</li></ul></li></ol></li><li><p><code>ippicv_linux_20141027.tgz</code>下载失败</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">CMake Error at 3rdparty&#x2F;ippicv&#x2F;downloader.cmake:71 (file):</span><br><span class="line">  file DOWNLOAD HASH mismatch</span><br><span class="line"></span><br><span class="line">    for file: [&#x2F;home&#x2F;lynx&#x2F;fuck_mount&#x2F;opencv_3_0_0&#x2F;opencv&#x2F;3rdparty&#x2F;ippicv&#x2F;downloads&#x2F;linux-8b449a536a2157bcad08a2b9f266828b&#x2F;ippicv_linux_20141027.tgz]</span><br><span class="line">      expected hash: [8b449a536a2157bcad08a2b9f266828b]</span><br><span class="line">        actual hash: [5c4f36bf7b2421d52289f0297ba1406f]</span><br><span class="line">             status: [28;&quot;Timeout was reached&quot;]</span><br></pre></td></tr></table></figure></li></ol><p><strong>TODO</strong></p><ol start="3"><li><p><code>ippicv_2019_lnx_intel64_general_20180723.tgz</code>下载超时</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">IPPICV: Download: ippicv_2019_lnx_intel64_general_20180723.tgz</span><br><span class="line">CMake Warning at cmake&#x2F;OpenCVDownload.cmake:193 (message):</span><br><span class="line">  IPPICV: Download failed: 28;&quot;Timeout was reached&quot;</span><br></pre></td></tr></table></figure><ol><li><p>在<code>opencv/opencv_3rdparty</code>的<code>ippicv</code>对应分支中下载对应的<code>tgz</code></p></li><li><p>将<code>tgz</code>放入<code>/home/lynx/Downloads/</code></p></li><li><p>修改opencv的source code: <code>vi /3rdparty/ippicv/ippicv.cmake</code>,将<code>ippicv</code>的<code>https</code>地址改为<code>file:/home/lynx/Downloads/</code></p></li><li><p>重新<code>cmake-gui</code></p></li></ol></li></ol><h2 id="OpenCV-source-code-4-x-4-1-0"><a href="#OpenCV-source-code-4-x-4-1-0" class="headerlink" title="OpenCV source code 4.x(4.1.0)"></a><code>OpenCV</code> source code <code>4.x</code>(<code>4.1.0</code>)</h2><h3 id="依赖包"><a href="#依赖包" class="headerlink" title="依赖包"></a>依赖包</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt install libgtk2.0-dev pkg-config <span class="comment"># libgtk-3-dev</span></span><br></pre></td></tr></table></figure><p><strong>一定要安装</strong>,否则会报错</p><ul><li>缺少<code>gtk</code></li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">terminate called after throwing an instance of &#39;cv::Exception&#39;</span><br><span class="line">  what():  OpenCV(4.1.0) &#x2F;home&#x2F;lynx&#x2F;fuck_mount&#x2F;opencv&#x2F;source_code&#x2F;opencv_4_1_0&#x2F;modules&#x2F;highgui&#x2F;src&#x2F;window.cpp:610: error: (-2:Unspecified error) The function is not implemented. Rebuild the library with Windows, GTK+ 2.x or Cocoa support. If you are on Ubuntu or Debian, install libgtk2.0-dev and pkg-config, then re-run cmake or configure script in function &#39;cvNamedWindow&#39;</span><br></pre></td></tr></table></figure><h3 id="命令行安装-TODO"><a href="#命令行安装-TODO" class="headerlink" title="命令行安装(TODO)"></a>命令行安装(TODO)</h3><ol><li><code>cmake</code></li></ol><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> &#123;生成makefile的位置&#125;</span><br><span class="line">cmake &#123;<span class="built_in">source</span>的位置&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li><code>make</code></li></ol><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> &#123;生成makefile的位置&#125;</span><br><span class="line">make</span><br></pre></td></tr></table></figure><ol start="3"><li><code>make install</code></li></ol><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">make install &#123;安装的位置&#125;</span><br></pre></td></tr></table></figure><h3 id="gui安装-1"><a href="#gui安装-1" class="headerlink" title="gui安装"></a>gui安装</h3><p><a href="https://blog.csdn.net/u011897411/article/details/89743448#2CMAKE_INSTALL_PREFIX__101">参考:CSDN</a></p><ol><li>安装<code>cmake-gui</code></li></ol><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt install cmake-gui</span><br></pre></td></tr></table></figure><ol start="2"><li>启动<code>cmake-gui</code></li></ol><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> &#123;build二进制文件的目录&#125;</span><br><span class="line">cmake-gui &#123;opencv <span class="built_in">source</span> code&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li><p><code>Configure</code>-&gt;<code>Unix Makefiles</code>:<code>Use default native compilers</code>-&gt;<code>finish</code></p></li><li><p>狂点<code>Configure</code>直到没有红色区域</p></li><li><p>赋值</p></li></ol><table><thead><tr><th align="center">变量名</th><th align="center">赋值</th></tr></thead><tbody><tr><td align="center"><code>BUILD_EXAMPLES</code></td><td align="center">勾选</td></tr><tr><td align="center"><code>CMAKE_BUILD_TYPE</code></td><td align="center"><code>Release</code></td></tr><tr><td align="center"><code>CMAKE_INSTALL_PREFIX</code></td><td align="center">{自己定的<code>cmake_install</code>路径}</td></tr><tr><td align="center"><code>OPENCV_ENABLE_NONFREE</code></td><td align="center">勾选</td></tr><tr><td align="center"><code>OPENCV_EXTRA_MODULES_PATH</code></td><td align="center"><code>&#123;opencv-contrib source code&#125;/modules</code></td></tr><tr><td align="center"><code>OPENCV_GENERATE_PKGCONFIG</code></td><td align="center">勾选</td></tr></tbody></table><ol start="6"><li><p>狂点<code>Configure</code></p></li><li><p><code>Generate</code>,等到<code>Generating done</code></p></li><li><p>在build路径<code>make</code></p></li></ol><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo make -j4 <span class="comment"># 具体看有多少cpu</span></span><br><span class="line">cat /proc/cpuinfo | grep <span class="string">&quot;processor&quot;</span> | wc -l <span class="comment"># 查看cpu个数</span></span><br><span class="line">sudo make install</span><br></pre></td></tr></table></figure><ol start="9"><li><p>配置<code>opencv4.pc</code>(2选1)</p><ul><li>修改<code>PKG_CONFIG_PATH</code>:增加<code>&#123;你cmake_install的路径&#125;/lib/pkgconfig</code>(<code>opencv4.pc</code>所在的路径)</li><li>(TODO,没试过)复制<code>opencv4.pc</code>到<code>/usr/lib/pkgconfig</code></li></ul></li><li><p>配置库路径,(新建)<code>/etc/ld.so.conf.d/opencv.conf</code></p></li></ol><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;你cmake_install路径&#125;&#x2F;lib&#x2F; # 自己的lib路径</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo ldconfig</span><br></pre></td></tr></table></figure><ol start="11"><li>编译测试</li></ol><blockquote><p>如果是<code>opencv.pc</code>将<code>opencv4</code>改成<code>opencv</code></p></blockquote><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pkg-config --modversion opencv4</span><br><span class="line">g++ a.cpp `pkg-config --cflags --libs opencv4` -o <span class="built_in">test</span> &amp;&amp; ./<span class="built_in">test</span></span><br></pre></td></tr></table></figure><h3 id="常见问题-1"><a href="#常见问题-1" class="headerlink" title="常见问题"></a>常见问题</h3><ol><li>在其他项目中用<code>CMake</code>导入<code>OpenCV</code>模块:<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="keyword">find_package</span>(OpenCV REQUIRED)</span><br><span class="line"><span class="keyword">include_directories</span>(<span class="variable">$&#123;OpenCV_INCLUDE_DIRS&#125;</span>)</span><br></pre></td></tr></table></figure>之后<code>cmake</code>出现<code>By not providing &quot;FindOpenCV.cmake&quot; in CMAKE_MODULE_PATH ...</code>:</li></ol><p>这是由于没有设置环境变量<code>OpenCV_DIR</code>,设置为<code>OpenCV</code>编译后的目录下含有<code>OpenCVConfig.cmake</code>的对应路径</p>]]></content>
      
      
      
        <tags>
            
            <tag> android studio </tag>
            
            <tag> android </tag>
            
            <tag> java </tag>
            
            <tag> cmake </tag>
            
            <tag> ndk </tag>
            
            <tag> opencv </tag>
            
            <tag> gradle </tag>
            
            <tag> javacv </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Cubism3-SDK-for-web功能扩展</title>
      <link href="/2019/10/09/Cubism3-SDK-for-web%E5%8A%9F%E8%83%BD%E6%89%A9%E5%B1%95/"/>
      <url>/2019/10/09/Cubism3-SDK-for-web%E5%8A%9F%E8%83%BD%E6%89%A9%E5%B1%95/</url>
      
        <content type="html"><![CDATA[<h1 id="全局跟踪鼠标"><a href="#全局跟踪鼠标" class="headerlink" title="全局跟踪鼠标"></a>全局跟踪鼠标</h1><h2 id="修改事件监听-只针对鼠标"><a href="#修改事件监听-只针对鼠标" class="headerlink" title="修改事件监听(只针对鼠标)"></a>修改事件监听(只针对鼠标)</h2><p>在<code>lappdelegate.js</code></p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">LAppDelegate.prototype.initialize = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  ...</span><br><span class="line">  <span class="keyword">else</span> &#123;</span><br><span class="line">    canvas.onmousedown = onClickBegan;<span class="comment">// 执行动画</span></span><br><span class="line">    <span class="comment">// canvas.onmousemove = onMouseMoved;</span></span><br><span class="line">    canvas.onmouseup = onClickEnded;<span class="comment">// 需要执行动画</span></span><br><span class="line">    <span class="comment">// document.onmouseenter = onClickBegan;</span></span><br><span class="line">    <span class="built_in">document</span>.onmousemove = onMouseMoved;</span><br><span class="line">    <span class="built_in">document</span>.onmouseleave = onMouseLeave;<span class="comment">// 回头</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="在鼠标移出后回头"><a href="#在鼠标移出后回头" class="headerlink" title="在鼠标移出后回头"></a>在鼠标移出后回头</h2><p>在<code>lappdelegate.js</code>中自定义回头函数</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 回头,不触发点击事件</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">onMouseLeave</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (!LAppDelegate.getInstance()._view) &#123;</span><br><span class="line">    _lapppal__WEBPACK_IMPORTED_MODULE_3__[<span class="string">&quot;LAppPal&quot;</span>].printLog(<span class="string">&quot;view notfound&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">var</span> live2DManager = _lapplive2dmanager__WEBPACK_IMPORTED_MODULE_5__[<span class="string">&quot;LAppLive2DManager&quot;</span>].getInstance();</span><br><span class="line">  live2DManager.onDrag(<span class="number">0.0</span>, <span class="number">0.0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="调整位置和大小"><a href="#调整位置和大小" class="headerlink" title="调整位置和大小"></a>调整位置和大小</h1><h2 id="比例放缩"><a href="#比例放缩" class="headerlink" title="比例放缩"></a>比例放缩</h2><ol><li>现在<code>lappdefine.js</code>定义比例</li><li>在<code>lapplive2dmanager.js</code>中比例放缩</li></ol><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">LAppLive2DManager.prototype.onUpdate = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> scale_rate = _lappdefine__WEBPACK_IMPORTED_MODULE_3__[<span class="string">&quot;LAppDefine&quot;</span>].ScaleRate;</span><br><span class="line">  projection.scale(scale_rate, width / height * scale_rate);<span class="comment">// 调整放缩倍数</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="点击位置比例放缩"><a href="#点击位置比例放缩" class="headerlink" title="点击位置比例放缩"></a>点击位置比例放缩</h2><p>在<code>lapplive2dmanager.js</code>中</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">LAppLive2DManager.prototype.onTap = <span class="function"><span class="keyword">function</span> (<span class="params">x, y</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> scale_rate = _lappdefine__WEBPACK_IMPORTED_MODULE_3__[<span class="string">&quot;LAppDefine&quot;</span>].ScaleRate;</span><br><span class="line">  x /= scale_rate;</span><br><span class="line">  y /= scale_rate;</span><br><span class="line">  ...</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h1 id="背景透明"><a href="#背景透明" class="headerlink" title="背景透明"></a>背景透明</h1><p>位于<code>lappdelegate.js</code>的<code>run</code></p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">LAppDelegate.prototype.run = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  ...</span><br><span class="line">  gl.clearColor(<span class="number">0.0</span>, <span class="number">0.0</span>, <span class="number">0.0</span>, <span class="number">0.0</span>);<span class="comment">// 背景颜色</span></span><br><span class="line">  ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="切换模型"><a href="#切换模型" class="headerlink" title="切换模型"></a>切换模型</h1><h2 id="删除原切换按钮"><a href="#删除原切换按钮" class="headerlink" title="删除原切换按钮"></a>删除原切换按钮</h2><p>删除的位置(TODO)</p><ul><li><code>lappview.js</code><ul><li><code>initializeSprite</code></li><li><code>onTouchesEnded</code></li></ul></li></ul><blockquote><p>如果只删除图片会报错</p></blockquote><h2 id="讲切换模型绑定到按钮"><a href="#讲切换模型绑定到按钮" class="headerlink" title="讲切换模型绑定到按钮"></a>讲切换模型绑定到按钮</h2><p>在<code>lappdelegate.js</code>的<code>run</code></p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">LAppDelegate.prototype.run = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="comment">// 自定义切换模型</span></span><br><span class="line"><span class="keyword">var</span> btnChange = <span class="built_in">document</span>.getElementById(<span class="string">&quot;btnChange&quot;</span>);</span><br><span class="line">  btnChange.addEventListener(<span class="string">&quot;click&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> live2DManager = _lapplive2dmanager__WEBPACK_IMPORTED_MODULE_5__[<span class="string">&quot;LAppLive2DManager&quot;</span>].getInstance();</span><br><span class="line">  live2DManager.nextScene();</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="拖拽元素"><a href="#拖拽元素" class="headerlink" title="拖拽元素"></a>拖拽元素</h1><h2 id="引入jquery-ui"><a href="#引入jquery-ui" class="headerlink" title="引入jquery-ui"></a>引入jquery-ui</h2><p>新建js文件<code>JsManager.js</code></p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">myDrag</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;<span class="comment">// 使模型能够拖拽</span></span><br><span class="line">  $(<span class="string">&quot;.drag&quot;</span>).draggable(</span><br><span class="line">  &#123;</span><br><span class="line">    containment: <span class="built_in">document</span>.body</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>注意调整<code>drag</code>类的大小</p></blockquote><h2 id="修正鼠标点击位置"><a href="#修正鼠标点击位置" class="headerlink" title="修正鼠标点击位置"></a>修正鼠标点击位置</h2><p>在<code>lappdelegate.js</code>的<code>onClickBegan</code></p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">onClickBegan</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">  ...</span><br><span class="line">  <span class="comment">//   LAppDelegate.getInstance()._captured = true;</span></span><br><span class="line">  <span class="comment">//   var posX = e.pageX;</span></span><br><span class="line">  <span class="comment">//   var posY = e.pageY;</span></span><br><span class="line">  <span class="comment">// 修正鼠标点击位置判定</span></span><br><span class="line">  <span class="keyword">var</span> rect = e.target.getBoundingClientRect();</span><br><span class="line">  <span class="keyword">var</span> posX = e.clientX - rect.left;</span><br><span class="line">  <span class="keyword">var</span> posY = e.clientY - rect.top;</span><br><span class="line">  ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="修正鼠标跟随"><a href="#修正鼠标跟随" class="headerlink" title="修正鼠标跟随"></a>修正鼠标跟随</h2><p>在<code>lappdelegate.js</code>的<code>onMouseMoved</code></p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">onMouseMoved</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">  <span class="comment">//   if (!LAppDelegate.getInstance()._captured) &#123;// TODO</span></span><br><span class="line">  <span class="comment">//       return;</span></span><br><span class="line">  <span class="comment">//   &#125;</span></span><br><span class="line">  <span class="keyword">if</span> (!LAppDelegate.getInstance()._view) &#123;</span><br><span class="line">    _lapppal__WEBPACK_IMPORTED_MODULE_3__[<span class="string">&quot;LAppPal&quot;</span>].printLog(<span class="string">&quot;view notfound&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">var</span> tempDrag = <span class="built_in">document</span>.getElementById(<span class="string">&quot;drag_&quot;</span> + <span class="string">&quot;0&quot;</span>);<span class="comment">// TODO 获取拖拽元素</span></span><br><span class="line">  <span class="comment">//   var rect = document.body.getBoundingClientRect();</span></span><br><span class="line">  <span class="comment">//   var posX = e.clientX - rect.left;</span></span><br><span class="line">  <span class="comment">//   var posY = e.clientY - rect.top;</span></span><br><span class="line">  <span class="keyword">var</span> posX = e.clientX - tempDrag.offsetLeft;</span><br><span class="line">  <span class="keyword">var</span> posY = e.clientY - tempDrag.offsetTop;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&quot;lappdelegate onMouseMoved (&quot;</span> + posX + <span class="string">&quot;, &quot;</span> + posY + <span class="string">&quot;), target: &quot;</span> + e.target);</span><br><span class="line">  LAppDelegate.getInstance()._view.onTouchesMoved(posX, posY);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>直接计算拖拽元素在body上的相对偏差</p><h1 id="多重canvas"><a href="#多重canvas" class="headerlink" title="多重canvas"></a>多重canvas</h1><h2 id="修改鼠标的事件监听"><a href="#修改鼠标的事件监听" class="headerlink" title="修改鼠标的事件监听"></a>修改鼠标的事件监听</h2><p>在<code>lappdelegate.js</code>的<code>initialize</code>中将原sdk的<code>=</code>赋值改为<code>addEventListener</code></p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">else</span> &#123;<span class="comment">// TODO 绑定到特定canvas</span></span><br><span class="line">  <span class="keyword">var</span> tempNum = <span class="built_in">this</span>._num;</span><br><span class="line">  <span class="keyword">if</span> (tempNum == <span class="literal">null</span>) &#123; tempNum.fuckshit(); &#125;;</span><br><span class="line">  canvas.addEventListener(<span class="string">&quot;mousedown&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">      onClickBegan(<span class="built_in">window</span>.event, tempNum);</span><br><span class="line">      &#125;, <span class="literal">false</span>);</span><br><span class="line">  canvas.addEventListener(<span class="string">&quot;mouseup&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;<span class="comment">// 需要执行动画</span></span><br><span class="line">      onClickEnded(<span class="built_in">window</span>.event, tempNum);</span><br><span class="line">      &#125;, <span class="literal">false</span>);</span><br><span class="line">  <span class="comment">// document.onmouseenter = onClickBegan;</span></span><br><span class="line"></span><br><span class="line">  <span class="built_in">document</span>.body.addEventListener(<span class="string">&quot;mousemove&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;<span class="comment">// TODO</span></span><br><span class="line">      onMouseMoved(<span class="built_in">window</span>.event, tempNum);</span><br><span class="line">      &#125;, <span class="literal">false</span>);<span class="comment">// 全局鼠标跟随</span></span><br><span class="line"></span><br><span class="line">  <span class="built_in">document</span>.body.addEventListener(<span class="string">&quot;mouseleave&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;<span class="comment">// TODO</span></span><br><span class="line">      onMouseLeave(<span class="built_in">window</span>.event, tempNum);</span><br><span class="line">      &#125;, <span class="literal">false</span>);<span class="comment">// 回头</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="调整速度"><a href="#调整速度" class="headerlink" title="调整速度"></a>调整速度</h2><p>由于原版sdk在增加模型后会严重减慢动画速度,需要对sdk进行修改</p><p>可能的位置:</p><ul><li><code>motion</code>/<code>cubismmotionqueuemanager.js</code>的<code>doUpdateMotion(model, userTimeSeconds)</code></li></ul><h2 id="投影到多个canvas"><a href="#投影到多个canvas" class="headerlink" title="投影到多个canvas"></a>投影到多个canvas</h2><h1 id="点击事件修改"><a href="#点击事件修改" class="headerlink" title="点击事件修改"></a>点击事件修改</h1><h1 id="添加tips"><a href="#添加tips" class="headerlink" title="添加tips"></a>添加tips</h1>]]></content>
      
      
      
        <tags>
            
            <tag> cubism </tag>
            
            <tag> javascript </tag>
            
            <tag> live2d </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>百度网盘资料</title>
      <link href="/2019/09/29/%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E8%B5%84%E6%96%99/"/>
      <url>/2019/09/29/%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E8%B5%84%E6%96%99/</url>
      
        <content type="html"><![CDATA[<h1 id="已经挂掉的软件"><a href="#已经挂掉的软件" class="headerlink" title="已经挂掉的软件"></a>已经挂掉的软件</h1><p><a href="https://www.sdbeta.com/mf/2018/0118/218423.html">部分内容来自</a></p><h2 id="BaiduPCS-Go"><a href="#BaiduPCS-Go" class="headerlink" title="BaiduPCS-Go"></a>BaiduPCS-Go</h2><h2 id="DU盘解析下载器"><a href="#DU盘解析下载器" class="headerlink" title="DU盘解析下载器"></a>DU盘解析下载器</h2><h2 id="highspeed-downloader"><a href="#highspeed-downloader" class="headerlink" title="highspeed_downloader"></a>highspeed_downloader</h2><h2 id="老毛子Aria2"><a href="#老毛子Aria2" class="headerlink" title="老毛子Aria2"></a>老毛子Aria2</h2><h2 id="Pandownload"><a href="#Pandownload" class="headerlink" title="Pandownload"></a>Pandownload</h2><h2 id="Proxyee-down"><a href="#Proxyee-down" class="headerlink" title="Proxyee_down"></a>Proxyee_down</h2><h2 id="YunDownload重置版"><a href="#YunDownload重置版" class="headerlink" title="YunDownload重置版"></a>YunDownload重置版</h2>]]></content>
      
      
      
        <tags>
            
            <tag> windows </tag>
            
            <tag> 百度网盘 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Cubism3 SDK for web笔记</title>
      <link href="/2019/09/25/Cubism3-SDK-for-web%E7%AC%94%E8%AE%B0/"/>
      <url>/2019/09/25/Cubism3-SDK-for-web%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="安装-编译后即扔"><a href="#安装-编译后即扔" class="headerlink" title="安装(编译后即扔)"></a>安装(编译后即扔)</h1><ol><li><p>终端<code>npm install</code></p></li><li><p><code>vscode</code></p><ul><li><code>windows</code>/<code>linux</code>:<code>ctrl</code>+<code>shift</code>+<code>p</code>:<code>Task: run Task</code>-&gt;<code>build-all</code></li><li>会有一堆报错,再在终端把所有缺的用<code>npm install</code>补上</li><li>关于<code>build-all</code>:<code>grep &quot;build-all&quot; -nr .</code></li></ul></li><li><p>如果只管使用的话,接下来的事就和<code>typescript</code>和<code>npm</code>没关系了,文件可以全部删掉</p></li></ol><h1 id="重构"><a href="#重构" class="headerlink" title="重构"></a>重构</h1><ul><li>顺序<ul><li><code>./Framework/cubismdefaultparameterid.ts</code>,// 1</li><li><code>./Framework/cubismframeworkconfig.ts</code>,// 2</li><li><code>./Framework/cubismmodelsettingjson.ts</code>,// 3</li><li><code>./Framework/effect/cubismbreath.ts</code>,// 4</li><li><code>./Framework/effect/cubismeyeblink.ts</code>,// 5</li><li><code>./Framework/effect/cubismpose.ts</code>,// 6</li><li><code>./Framework/icubismmodelsetting.ts</code>,// 7</li><li><code>./Framework/id/cubismid.ts</code>,// 8</li><li><code>./Framework/id/cubismidmanager.ts</code>,// 9</li><li><code>./Framework/live2dcubismframework.ts</code>,// 10</li><li><code>./Framework/math/cubismmath.ts</code>,// 11</li><li><code>./Framework/math/cubismmatrix44.ts</code>,// 12</li><li><code>./Framework/math/cubismmodelmatrix.ts</code>,// 13</li><li><code>./Framework/math/cubismtargetpoint.ts</code>,// 14</li><li><code>./Framework/math/cubismvector2.ts</code>,// 15</li><li><code>./Framework/math/cubismviewmatrix.ts</code>,// 16</li><li><code>./Framework/model/cubismmoc.ts</code>,// 17</li><li><code>./Framework/model/cubismmodel.ts</code>,// 18</li><li><code>./Framework/model/cubismmodeluserdata.ts</code>,// 19</li><li><code>./Framework/model/cubismmodeluserdatajson.ts</code>,// 20</li><li><code>./Framework/model/cubismusermodel.ts</code>,// 21</li><li><code>./Framework/motion/acubismmotion.ts</code>,// 22</li><li><code>./Framework/motion/cubismexpressionmotion.ts</code>,// 23</li><li><code>./Framework/motion/cubismmotion.ts</code>,// 24</li><li><code>./Framework/motion/cubismmotioninternal.ts</code>,// 25</li><li><code>./Framework/motion/cubismmotionjson.ts</code>,// 26</li><li><code>./Framework/motion/cubismmotionmanager.ts</code>,// 27</li><li><code>./Framework/motion/cubismmotionqueueentry.ts</code>,// 28</li><li><code>./Framework/motion/cubismmotionqueuemanager.ts</code>,// 29</li><li><code>./Framework/physics/cubismphysics.ts</code>,// 30</li><li><code>./Framework/physics/cubismphysicsinternal.ts</code>,// 31</li><li><code>./Framework/physics/cubismphysicsjson.ts</code>,// 32</li><li><code>./Framework/rendering/cubismrenderer.ts</code>,// 33</li><li><code>./Framework/rendering/cubismrenderer_webgl.ts</code>,// 34</li><li><code>./Framework/type/csmmap.ts</code>,// 35</li><li><code>./Framework/type/csmrectf.ts</code>,// 36</li><li><code>./Framework/type/csmstring.ts</code>,// 37</li><li><code>./Framework/type/csmvector.ts</code>,// 38</li><li><code>./Framework/utils/cubismdebug.ts</code>,// 39</li><li><code>./Framework/utils/cubismjson.ts</code>,// 40</li><li><code>./Framework/utils/cubismstring.ts</code>,// 41</li><li><code>./Sample/TypeScript/Demo/src/lappdefine.ts</code>,// 42</li><li><code>./Sample/TypeScript/Demo/src/lappdelegate.ts</code>,// 43</li><li><code>./Sample/TypeScript/Demo/src/lapplive2dmanager.ts</code>,// 44</li><li><code>./Sample/TypeScript/Demo/src/lappmodel.ts</code>,// 45</li><li><code>./Sample/TypeScript/Demo/src/lapppal.ts</code>,// 46</li><li><code>./Sample/TypeScript/Demo/src/lappsprite.ts</code>,// 47</li><li><code>./Sample/TypeScript/Demo/src/lapptexturemanager.ts</code>,// 48</li><li><code>./Sample/TypeScript/Demo/src/lappview.ts</code>,// 49</li><li><code>./Sample/TypeScript/Demo/src/main.ts</code>,// 50</li><li><code>./Sample/TypeScript/Demo/src/touchmanager.ts</code>,// 51</li><li><code>./node_modules/whatwg-fetch/fetch.js</code>// 52</li></ul></li></ul><h1 id="文件分析"><a href="#文件分析" class="headerlink" title="文件分析"></a>文件分析</h1><h2 id="src"><a href="#src" class="headerlink" title="src"></a>src</h2><h3 id="lappdefine-js"><a href="#lappdefine-js" class="headerlink" title="lappdefine.js"></a>lappdefine.js</h3><ul><li><code>ModelDir()</code></li></ul><p>对于每个模型文件夹,其<code>model2.json</code>命名必须和文件夹一样</p><h3 id="lappview-js"><a href="#lappview-js" class="headerlink" title="lappview.js"></a>lappview.js</h3><ul><li><code>onTouchesEnded()</code></li></ul><h3 id="lapplive2dmanager-js"><a href="#lapplive2dmanager-js" class="headerlink" title="lapplive2dmanager.js"></a>lapplive2dmanager.js</h3><ul><li><code>nextScene()</code>:切换模型</li><li><code>onDrag()</code>:跟踪鼠标</li><li><code>onTap()</code></li></ul><h3 id="lappdelegate-js"><a href="#lappdelegate-js" class="headerlink" title="lappdelegate.js"></a>lappdelegate.js</h3><ul><li><code>onClickBegan()</code></li><li><code>onTouchBegan()</code></li></ul><h3 id="lapptexturemanager-js"><a href="#lapptexturemanager-js" class="headerlink" title="lapptexturemanager.js"></a>lapptexturemanager.js</h3><ul><li><code>createTextureFromPngFile()</code></li></ul><h3 id="main-js"><a href="#main-js" class="headerlink" title="main.js"></a>main.js</h3><ul><li><code>main()</code>:入口函数</li></ul><h2 id="math"><a href="#math" class="headerlink" title="math"></a>math</h2><h3 id="cubismmatrix44"><a href="#cubismmatrix44" class="headerlink" title="cubismmatrix44"></a>cubismmatrix44</h3><ul><li><code>scale(x, y)</code>:模型的长和宽</li></ul><h1 id="引用关系"><a href="#引用关系" class="headerlink" title="引用关系"></a>引用关系</h1><h2 id="lappdelegate-js-1"><a href="#lappdelegate-js-1" class="headerlink" title="lappdelegate.js"></a>lappdelegate.js</h2><table><thead><tr><th align="center">函数名</th><th align="center">引用位置</th></tr></thead><tbody><tr><td align="center"><code>LAppDelegate.getInstance()</code></td><td align="center"><code>main.js</code>,<code>lappmodel.js</code>,<code>lappview.js</code></td></tr></tbody></table><h2 id="lappmodel-js"><a href="#lappmodel-js" class="headerlink" title="lappmodel.js"></a>lappmodel.js</h2><h2 id="lappview-js-1"><a href="#lappview-js-1" class="headerlink" title="lappview.js"></a>lappview.js</h2>]]></content>
      
      
      
        <tags>
            
            <tag> cubism </tag>
            
            <tag> javascript </tag>
            
            <tag> live2d </tag>
            
            <tag> typescript </tag>
            
            <tag> npm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>gnome笔记</title>
      <link href="/2019/09/19/gnome%E7%AC%94%E8%AE%B0/"/>
      <url>/2019/09/19/gnome%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="调试"><a href="#调试" class="headerlink" title="调试"></a>调试</h1><h2 id="使用log"><a href="#使用log" class="headerlink" title="使用log"></a>使用<code>log</code></h2><ul><li>在终端接收<code>log</code>:</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">journalctl /usr/bin/gnome-shell -f</span><br></pre></td></tr></table></figure><ul><li>在<code>js</code>中使用<code>log(message)</code>打印log</li></ul><h2 id="卡死-没用-TODO"><a href="#卡死-没用-TODO" class="headerlink" title="卡死(没用,TODO)"></a>卡死(没用,TODO)</h2><ol><li><code>ctrl</code>+<code>alt</code>+<code>f3</code>切换终端</li><li><code>DISPLAY=:0 gnome-shell</code></li></ol><h1 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h1><p><a href="https://www.xttblog.com/?p=1764">关于箭头运算符<code>=&gt;</code></a></p><h2 id="TODO"><a href="#TODO" class="headerlink" title="TODO"></a>TODO</h2><ul><li><code>set_position(int, int)</code>:TODO(数据类型)</li><li><code>set_chlild(?)</code></li><li><code>connect(String e, function f)</code>:监听事件<code>e</code>,之后执行<code>f</code></li><li><code>insert_child_at_index(?, int)</code>:TODO</li><li><code>remove_child()</code></li></ul><h2 id="const-St-imports-gi-St"><a href="#const-St-imports-gi-St" class="headerlink" title="const St = imports.gi.St"></a><code>const St = imports.gi.St</code></h2><ul><li><code>St.Bin(&#123;&#125;)</code>:按钮<ul><li><code>style_class</code></li><li><code>reactive</code></li><li><code>can_focus</code></li><li><code>x_fill</code></li><li><code>y_fill</code></li><li><code>track_hover</code></li></ul></li><li><code>St.Icon(&#123;&#125;)</code>:图标<ul><li><code>icon_name</code></li><li><code>style_class</code></li></ul></li><li><code>St.Label(&#123;&#125;)</code>:TODO<ul><li><code>style_class</code></li><li><code>text</code></li></ul></li></ul><h2 id="const-Main-imports-ui-main"><a href="#const-Main-imports-ui-main" class="headerlink" title="const Main = imports.ui.main"></a><code>const Main = imports.ui.main</code></h2><ul><li><code>Main.uiGroup.add_actor()</code>:TODO</li><li><code>Main.uiGroup.remove_actor()</code>:TODO</li><li><code>Main.layoutManager.primaryMonitor</code>:TODO</li></ul><h2 id="Tweener-imports-ui-tweener"><a href="#Tweener-imports-ui-tweener" class="headerlink" title="Tweener = imports.ui.tweener"></a><code>Tweener = imports.ui.tweener</code></h2><ul><li><code>Tweener.addTween(?, &#123;&#125;)</code>:TODO<ul><li><code>opacity</code></li><li><code>time</code></li><li><code>transition</code></li><li><code>onComplete</code>:回调函数</li></ul></li></ul><h1 id="元素"><a href="#元素" class="headerlink" title="元素"></a>元素</h1><ul><li><code>pannel</code>:状态栏<ul><li><code>_rightBox</code></li><li><code>_leftBox</code></li></ul></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> javascript </tag>
            
            <tag> linux </tag>
            
            <tag> gnome </tag>
            
            <tag> c </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Qt笔记</title>
      <link href="/2019/09/18/Qt%E7%AC%94%E8%AE%B0/"/>
      <url>/2019/09/18/Qt%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="QMainWindow"><a href="#QMainWindow" class="headerlink" title="QMainWindow"></a><code>QMainWindow</code></h2><ul><li>完全透明:<code>this-&gt;setWindowOpacity(0)</code></li></ul><h2 id="QWebEngineView"><a href="#QWebEngineView" class="headerlink" title="QWebEngineView"></a><code>QWebEngineView</code></h2><ul><li>监听非特殊鼠标事件</li></ul><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">MainWindow::eventFilter</span><span class="params">(QObject *watched, QEvent *event)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (event-&gt;type() == QEvent::ShortcutOverride) &#123;</span><br><span class="line">      QKeyEvent *keyEvent = <span class="keyword">static_cast</span>&lt;QKeyEvent *&gt;(event);</span><br><span class="line">  &#125;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="关于调试"><a href="#关于调试" class="headerlink" title="关于调试"></a>关于调试</h2><ul><li><code>qDebug() &lt;&lt; __FUNCTION__</code></li></ul><h2 id="软件打包"><a href="#软件打包" class="headerlink" title="软件打包"></a>软件打包</h2><h3 id="使用debreate"><a href="#使用debreate" class="headerlink" title="使用debreate"></a>使用<code>debreate</code></h3><style>#my_pdf{  width: 90%;  height: 800px;  text-align: center;  margin-left: 5%;}</style><p><a href="http://debreate.sourceforge.net/res/doc/usage_en.pdf">Debreate Usage</a><br><embed id="my_pdf" src="/pdf/debreate.pdf#toolbar=0&navpanes=0&scrollbar=0&zoom=120&statusbar=0&messages=0"></p><p><a href="https://www.maketecheasier.com/create-deb-packages-with-debreate/">参考</a></p><h3 id="手动dpkg"><a href="#手动dpkg" class="headerlink" title="手动dpkg"></a>手动<code>dpkg</code></h3><p><a href="https://segmentfault.com/a/1190000005029385">思否</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> c </tag>
            
            <tag> qt </tag>
            
            <tag> cpp </tag>
            
            <tag> deb </tag>
            
            <tag> debreate </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>xml笔记</title>
      <link href="/2019/09/06/xml%E7%AC%94%E8%AE%B0/"/>
      <url>/2019/09/06/xml%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="Palette说明"><a href="#Palette说明" class="headerlink" title="Palette说明"></a><code>Palette</code>说明</h1><h2 id="Common"><a href="#Common" class="headerlink" title="Common"></a><code>Common</code></h2><h2 id="Text"><a href="#Text" class="headerlink" title="Text"></a><code>Text</code></h2><ul><li><p><code>android:gravity=&quot;start|top&quot;</code>:和文字位置相关</p></li><li><p><code>android:ems=&quot;10&quot;</code>:没有设定宽度时的下划线长度?(TODO)</p></li><li><p><code>android:text=&quot;AutoCompletView&quot;</code>:默认字符</p></li><li><p><code>tools:layout_editor_absoluteX=&quot;200dp&quot;</code>:不知道</p></li><li><p><code>app:layout_constraintTop_toTopOf=&quot;parent&quot;</code>:约束布局,参照为parent</p></li></ul><h3 id="android-inputType"><a href="#android-inputType" class="headerlink" title="android:inputType"></a><code>android:inputType</code></h3><ul><li><p><code>Plain Text</code></p><ul><li><code>EditText</code></li><li><code>textPersonName</code></li><li>单行,超出宽度不会换行</li></ul></li><li><p><code>Multiline Text</code></p><ul><li><code>EditText</code></li><li><code>textMultiLine</code></li><li>多行,自动换行,超出高度可以上下翻</li></ul></li><li><p><code>Time</code></p><ul><li><code>EditText</code></li><li><code>time</code></li><li>单行,只能输入数字</li></ul></li><li><p><code>AutoCompleteTextView</code></p><ul><li><code>AutoCompleteTextView</code></li><li><code>AutoCompleteTextView</code></li><li>自动换行,下划线自动长度,(TODO:输入提示)</li></ul></li><li><p><code>MultiAutoCompleteTextView</code></p><ul><li><code>MultiAutoCompleteTextView</code></li><li><code>MultiAutoCompleteTextView</code></li><li>TODO</li></ul></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> android studio </tag>
            
            <tag> android </tag>
            
            <tag> xml </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android开发笔记</title>
      <link href="/2019/09/04/Android%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/"/>
      <url>/2019/09/04/Android%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="Music开发笔记"><a href="#Music开发笔记" class="headerlink" title="Music开发笔记"></a><code>Music</code>开发笔记</h1><p><a href="https://blog.csdn.net/youxun1312/article/details/80356060">CSDN:实例</a><br><a href="https://www.cnblogs.com/HDK2016/p/8043247.html">cnblogs:其他几种方式</a></p><h2 id="音乐进度"><a href="#音乐进度" class="headerlink" title="音乐进度"></a>音乐进度</h2><h3 id="MediaPlayer"><a href="#MediaPlayer" class="headerlink" title="MediaPlayer"></a><code>MediaPlayer</code></h3><p><a href="https://www.jianshu.com/p/4bd3d91c7813">MediaPlayer参数–简书</a></p><h3 id="时长"><a href="#时长" class="headerlink" title="时长"></a>时长</h3><p><a href="https://blog.csdn.net/aree/article/details/19078445">CSDN:数字格式化</a></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">total_time = MainPlayer.player.getDuration();</span><br><span class="line">SimpleDateFormat format = <span class="keyword">new</span> SimpleDateFormat(<span class="string">&quot;mm:ss&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// TODO 更新总时长</span></span><br><span class="line">tmp = <span class="keyword">new</span> Date(total_time);</span><br><span class="line">formatTime = format.format(tmp);</span><br><span class="line">MainPlayer.totalTime.setText(formatTime);</span><br></pre></td></tr></table></figure><h3 id="进度条"><a href="#进度条" class="headerlink" title="进度条"></a>进度条</h3><h2 id="媒体信号"><a href="#媒体信号" class="headerlink" title="媒体信号"></a>媒体信号</h2><ul><li>蓝牙</li></ul><p><a href="https://blog.csdn.net/qq_25827845/article/details/52997523">CSDN:配对全过程</a><br><a href="https://blog.csdn.net/u010005281/article/details/79550492">CSDN:简易</a></p><ul><li>有线耳机</li></ul><p><a href="https://blog.csdn.net/ITxiaobing123/article/details/70740316">CSDN</a></p><ol><li>创建一个继承<code>BroadcastReceiver</code>的类</li></ol><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MediaReceiver</span> <span class="keyword">extends</span> <span class="title">BroadcastReceiver</span> </span>&#123;</span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onReceive</span><span class="params">(Context context, Intent intent)</span> </span>&#123;<span class="comment">// 重载方法</span></span><br><span class="line">    String action = intent.getAction();</span><br><span class="line">    <span class="keyword">if</span> (action != <span class="keyword">null</span>) &#123;</span><br><span class="line">      MainPlayer.infoLog(<span class="string">&quot;action: &quot;</span> + action);<span class="comment">// TODO debug</span></span><br><span class="line">      <span class="keyword">switch</span> (action) &#123;</span><br><span class="line">        <span class="comment">// 有线耳机状态改变</span></span><br><span class="line">        <span class="keyword">case</span> Intent.ACTION_HEADSET_PLUG:</span><br><span class="line">          <span class="keyword">int</span> mediaState = intent.getIntExtra(<span class="string">&quot;state&quot;</span>, <span class="number">0</span>);<span class="comment">// 判断插拔</span></span><br><span class="line"></span><br><span class="line">          <span class="comment">// 蓝牙连接状态改变</span></span><br><span class="line">        <span class="keyword">case</span> BluetoothAdapter.ACTION_CONNECTION_STATE_CHANGED:<span class="comment">// 安卓端主动改变蓝牙状态</span></span><br><span class="line">          <span class="keyword">int</span> bluetoothState = intent.getIntExtra(BluetoothAdapter.EXTRA_STATE, <span class="number">0</span>);<span class="comment">// 获取蓝牙状态</span></span><br><span class="line"></span><br><span class="line">          <span class="comment">// 接收蓝牙/媒体按键信号</span></span><br><span class="line">        <span class="keyword">case</span> Intent.ACTION_MEDIA_BUTTON:</span><br><span class="line">          KeyEvent keyEvent = (KeyEvent) intent.getParcelableExtra(Intent.EXTRA_KEY_EVENT);<span class="comment">// 获取键码</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// receiver注册函数</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">registerReceiver</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line">    AudioManager audioManager = (AudioManager) context.getSystemService(Context.AUDIO_SERVICE);</span><br><span class="line">    ComponentName name = <span class="keyword">new</span> ComponentName(context.getPackageName(), MediaReceiver.class.getName());</span><br><span class="line">    audioManager.registerMediaButtonEventReceiver(name);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">unregisterReceiver</span><span class="params">(Context context)</span></span>&#123;</span><br><span class="line">    AudioManager audioManager = (AudioManager) context.getSystemService(Context.AUDIO_SERVICE);</span><br><span class="line">    ComponentName name = <span class="keyword">new</span> ComponentName(context.getPackageName(), MediaReceiver.class.getName());</span><br><span class="line">    audioManager.unregisterMediaButtonEventReceiver(name);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意点:</p><ul><li>注册函数的函数名随意,可以在<code>onCreate</code>或<code>onResume</code>等函数中调用注册函数</li><li><code>BroadcastReceiver</code>子类必须要有无参的构造方法,否则会直接崩溃</li></ul><ol start="2"><li>修改<code>AndroidManifest.xml</code></li></ol><p>父节点为<code>application</code>,<code>android:name</code>要和<code>BroadcastReceiver</code>的子类名相同,<code>priority</code>可以不要</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">receiver</span> <span class="attr">android:name</span>=<span class="string">&quot;.MediaReceiver&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">intent-filter</span> <span class="attr">android:priority</span>=<span class="string">&quot;1000&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.action.MEDIA_BUTTON&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">action</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">receiver</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="3"><li>初始化<code>MediaReceiver</code></li></ol><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">bluetoothAdapter = BluetoothAdapter.getDefaultAdapter();<span class="comment">// 获取蓝牙适配器</span></span><br><span class="line">receiver = <span class="keyword">new</span> MediaReceiver(<span class="keyword">this</span>);<span class="comment">// 接收蓝牙信号</span></span><br><span class="line"></span><br><span class="line">IntentFilter intentFilter = <span class="keyword">new</span> IntentFilter();</span><br><span class="line"></span><br><span class="line">intentFilter.addAction(BluetoothAdapter.ACTION_STATE_CHANGED);<span class="comment">// 监视蓝牙设备与APP连接的状态</span></span><br><span class="line">intentFilter.addAction(BluetoothDevice.ACTION_ACL_DISCONNECTED);</span><br><span class="line">intentFilter.addAction(BluetoothDevice.ACTION_ACL_CONNECTED);</span><br><span class="line">intentFilter.addAction(Intent.ACTION_HEADSET_PLUG);<span class="comment">// 监听有线耳机的插拔</span></span><br><span class="line">intentFilter.addAction(Intent.ACTION_MEDIA_BUTTON);<span class="comment">// TODO</span></span><br><span class="line"></span><br><span class="line">registerReceiver(<span class="keyword">this</span>.receiver, intentFilter);<span class="comment">// 注册广播</span></span><br><span class="line">receiver.registerReceiver(<span class="keyword">this</span>);<span class="comment">// 初始化广播</span></span><br></pre></td></tr></table></figure><h2 id="adb"><a href="#adb" class="headerlink" title="adb"></a>adb</h2><p>华为手机配置adb:<code>*#*#2846579#*#*</code>-&gt;<code>后台设置</code>-&gt;<code>usb端口设置</code>-&gt;<code>生产模式</code></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">adb devices</span><br><span class="line">adb tcpip 5555</span><br><span class="line"><span class="comment"># 拔掉数据线</span></span><br><span class="line">adb connect 手机ip</span><br></pre></td></tr></table></figure><p>若安卓设备显示<code>offline</code>,可能是由于<code>adb</code>版本过低</p><h2 id="蓝牙连接管理"><a href="#蓝牙连接管理" class="headerlink" title="蓝牙连接管理"></a>蓝牙连接管理</h2><p>无需在<code>AndroidManifest</code>里注册</p><h3 id="蓝牙连接"><a href="#蓝牙连接" class="headerlink" title="蓝牙连接"></a>蓝牙连接</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Method createBond = device.getClass().getMethod(<span class="string">&quot;createBond&quot;</span>);</span><br><span class="line">            createBond.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">            result = (Boolean) createBond.invoke(device);</span><br></pre></td></tr></table></figure><ol><li>注意区分已经配对的设备</li><li><strong>特殊的蓝牙设备仍未解决</strong></li></ol><h2 id="状态栏部件"><a href="#状态栏部件" class="headerlink" title="状态栏部件"></a>状态栏部件</h2><h3 id="创建"><a href="#创建" class="headerlink" title="创建"></a>创建</h3><p><a href="https://www.jianshu.com/p/92afa56aee05">简书:notification channel</a></p><p>可使用<code>NotificationCompat</code>或<code>Notification</code>,注意常量取值</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">NotificationManager notificationManager = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.O) &#123;</span><br><span class="line">  notificationManager  = getSystemService(NotificationManager.class);</span><br><span class="line">  CharSequence name = <span class="string">&quot;fuck&quot;</span>;<span class="comment">// 通知渠道名称</span></span><br><span class="line">  String description = <span class="string">&quot;shit&quot;</span>;</span><br><span class="line">  String id = <span class="string">&quot;111&quot;</span>;</span><br><span class="line">  NotificationChannel channel = <span class="keyword">new</span> NotificationChannel(id, name, NotificationManager.IMPORTANCE_HIGH);</span><br><span class="line">  channel.setDescription(description);</span><br><span class="line">  notificationManager.createNotificationChannel(channel);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">NotificationCompat.Builder builder = <span class="keyword">new</span> NotificationCompat.Builder(MainActivity.<span class="keyword">this</span>, id)</span><br><span class="line">  .setSmallIcon(R.drawable.ic_launcher_background)</span><br><span class="line">  <span class="comment">// .setPriority(NotificationCompat.PRIORITY_MAX)</span></span><br><span class="line">  .setVisibility(NotificationCompat.VISIBILITY_PUBLIC);</span><br></pre></td></tr></table></figure><h3 id="显示"><a href="#显示" class="headerlink" title="显示"></a>显示</h3><ol><li><p>首先保证系统更新并能够支持notification category</p></li><li><p>保证给应用程序提供锁屏通知权限</p></li></ol><h4 id="startForeground"><a href="#startForeground" class="headerlink" title="startForeground"></a><code>startForeground</code></h4><p>常驻通知栏</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i ++) &#123;</span><br><span class="line">  stopForeground(<span class="keyword">true</span>);</span><br><span class="line">  Thread.sleep(<span class="number">500</span>);</span><br><span class="line">  startForeground(<span class="number">10</span>, builder.build());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li><p>在<code>mainifest</code>节点下增加权限</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.FOREGROUND_SERVICE&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>清除通知不要使用<code>deleteNotificationChannel</code>,否则无法控制音效/震动,使用<code>stopForeground</code></p></li></ol><h4 id="notify"><a href="#notify" class="headerlink" title="notify"></a><code>notify</code></h4><p>可以被作为通知清除</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">for (int i &#x3D; 0; i &lt; 10; i ++) &#123;</span><br><span class="line">  notificationManager.cancel(0);</span><br><span class="line">  Thread.sleep(500);</span><br><span class="line">  notificationManager.notify(0, builder.build());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意<code>channel</code>的<code>id</code>和<code>Builder</code>的<code>id</code>要一致</p><h3 id="通信"><a href="#通信" class="headerlink" title="通信"></a>通信</h3><ol><li>注意不同<code>intent</code>要使用不同的<code>requestCode</code></li><li>切换到<code>MainActivity</code>,<code>MainActivity</code>要使用<code>singleTask</code><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Intent intent = <span class="keyword">new</span> Intent(<span class="keyword">this</span>, MusicList.class);</span><br><span class="line">remoteViews.setOnClickPendingIntent(R.id.button_open, PendingIntent.getActivity(<span class="keyword">this</span>, <span class="number">6</span>, intent, <span class="number">0</span>));</span><br></pre></td></tr></table></figure></li><li>使用空<code>pendingIntent</code>来防止点击通知会消失</li></ol><h3 id="锁屏通知"><a href="#锁屏通知" class="headerlink" title="锁屏通知"></a>锁屏通知</h3><p>只能够从系统中手动打开权限</p><table><thead><tr><th align="center">事件</th><th align="center"><code>intent</code></th></tr></thead><tbody><tr><td align="center">亮屏</td><td align="center"><code>Intent.ACTION_SCREEN_ON</code></td></tr><tr><td align="center">关屏</td><td align="center"><code>Intent.ACTION_SCREEN_OFF</code></td></tr><tr><td align="center">解锁</td><td align="center"><code>Intent.ACTION_USER_PRESENT</code></td></tr></tbody></table><h2 id="桌面部件"><a href="#桌面部件" class="headerlink" title="桌面部件"></a>桌面部件</h2><p>在进程完全被杀死后通过<code>widget</code>启动app</p><ol><li><code>PendingIntent.getActivity()</code>/<code>startActivity()</code></li><li><code>PendingIntent.getForegroundService()</code>/<code>startForegroundService()</code>,不要使用<code>Service</code></li></ol><h1 id="Editor开发笔记"><a href="#Editor开发笔记" class="headerlink" title="Editor开发笔记"></a><code>Editor</code>开发笔记</h1><h2 id="获取读写权限"><a href="#获取读写权限" class="headerlink" title="获取读写权限"></a>获取读写权限</h2><h3 id="AndroidManifest"><a href="#AndroidManifest" class="headerlink" title="AndroidManifest"></a><code>AndroidManifest</code></h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&lt;!-- manifest节点下  --&gt;</span><br><span class="line">&lt;uses-permission android:name=<span class="string">&quot;android.permission.WRITE_EXTERNAL_STORAGE&quot;</span>/&gt;</span><br><span class="line">&lt;uses-permission android:name=<span class="string">&quot;android.permission.READ_EXTERNAL_STORAGE&quot;</span>/&gt;</span><br></pre></td></tr></table></figure><h3 id="Activity"><a href="#Activity" class="headerlink" title="Activity"></a><code>Activity</code></h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">String permission = <span class="string">&quot;android.permission.WRITE_EXTERNAL_STORAGE&quot;</span>;</span><br><span class="line"><span class="keyword">int</span> check_result = ActivityCompat.checkSelfPermission(<span class="keyword">this</span>, permission);<span class="comment">// `允许`返回0,`拒绝`返回-1</span></span><br><span class="line"><span class="keyword">if</span> (check_result != PackageManager.PERMISSION_GRANTED) &#123;<span class="comment">// 没有`写`权限</span></span><br><span class="line">  ActivityCompat.requestPermissions(<span class="keyword">this</span>, <span class="keyword">new</span> String[]&#123;permission&#125;, <span class="number">1</span>);<span class="comment">// 获取`写`权限</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="关联文件类型"><a href="#关联文件类型" class="headerlink" title="关联文件类型"></a>关联文件类型</h2><h3 id="文本文件"><a href="#文本文件" class="headerlink" title="文本文件"></a>文本文件</h3><figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;intent-filter android:scheme=<span class="string">&quot;http&quot;</span></span><br><span class="line">  tools:ignore=<span class="string">&quot;AppLinkUrlError&quot;</span>&gt;</span><br><span class="line">  &lt;action android:name=<span class="string">&quot;android.intent.action.VIEW&quot;</span>/&gt;</span><br><span class="line">  &lt;category android:name=<span class="string">&quot;android.intent.category.DEFAULT&quot;</span>/&gt;</span><br><span class="line">  &lt;data android:mimeType=<span class="string">&quot;text/*&quot;</span>/&gt;</span><br><span class="line">&lt;/intent-filter&gt;</span><br></pre></td></tr></table></figure><h2 id="修改默认Toast"><a href="#修改默认Toast" class="headerlink" title="修改默认Toast"></a>修改默认<code>Toast</code></h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">public</span> <span class="keyword">void</span> <span class="title">info</span><span class="params">(Context context, String log)</span> </span>&#123;</span><br><span class="line">  Toast toast =  Toast.makeText(context, log, Toast.LENGTH_SHORT);</span><br><span class="line">  View view = toast.getView();</span><br><span class="line">  view.setBackgroundResource(R.drawable.toast);</span><br><span class="line">  TextView textView = view.findViewById(android.R.id.message);</span><br><span class="line">  textView.setTextColor(Color.rgb(<span class="number">0xff</span>, <span class="number">0xff</span>, <span class="number">0xff</span>));</span><br><span class="line">  toast.show();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="由外部打开文件"><a href="#由外部打开文件" class="headerlink" title="由外部打开文件"></a>由外部打开文件</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Intent intent = getIntent();</span><br><span class="line">String action = intent.getAction();<span class="comment">// 判断本activity启动的方式</span></span><br><span class="line"><span class="keyword">if</span> (action.equals(<span class="string">&quot;android.intent.action.VIEW&quot;</span>)) &#123;<span class="comment">// 由其他软件打开本软件</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="控制activity数目"><a href="#控制activity数目" class="headerlink" title="控制activity数目"></a>控制<code>activity</code>数目</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:name</span>=<span class="string">&quot;.Editor&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:launchMode</span>=<span class="string">&quot;singleTask&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="获取根view"><a href="#获取根view" class="headerlink" title="获取根view"></a>获取根<code>view</code></h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">View view = getWindow().getDecorView().findViewById(android.R.id.content);</span><br></pre></td></tr></table></figure><h2 id="数据保存"><a href="#数据保存" class="headerlink" title="数据保存"></a>数据保存</h2><h3 id="SharedPreferences"><a href="#SharedPreferences" class="headerlink" title="SharedPreferences"></a><code>SharedPreferences</code></h3><p><code>SharedPreferences</code>:基于xml的键值对,存储于<code>/data/data/应用程序包/shared_prefs</code></p><h2 id="提示框-窗口"><a href="#提示框-窗口" class="headerlink" title="提示框/窗口"></a>提示框/窗口</h2><h3 id="Dialog"><a href="#Dialog" class="headerlink" title="Dialog"></a><code>Dialog</code></h3><p><a href="https://www.jb51.net/article/122510.htm">参考</a></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">  setContentView(R.layout.save_layout);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 初始化`保存`按钮</span></span><br><span class="line">  yes.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;<span class="comment">//</span></span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 初始化`取消`按钮</span></span><br><span class="line">  cancel.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 初始化`删除`按钮</span></span><br><span class="line">  no.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initButton</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="comment">// 初始化按钮</span></span><br><span class="line">  yes = findViewById(R.id.yes_button);</span><br><span class="line">  cancel = findViewById(R.id.cancel_button);</span><br><span class="line">  no = findViewById(R.id.no_button);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">myWindow = <span class="keyword">new</span> MyWindow(MainActivity.<span class="keyword">this</span>, R.style.save_style);</span><br><span class="line">myWindow.setCanceledOnTouchOutside(<span class="keyword">false</span>);</span><br><span class="line">myWindow.setOnDismissListener(<span class="keyword">new</span> DialogInterface.OnDismissListener() &#123;</span><br><span class="line">&#125;);</span><br><span class="line">myWindow.show();<span class="comment">// TODO 获取点击结果</span></span><br></pre></td></tr></table></figure><h3 id="PopupWindow"><a href="#PopupWindow" class="headerlink" title="PopupWindow"></a><code>PopupWindow</code></h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyWindow</span> <span class="keyword">extends</span> <span class="title">PopupWindow</span> </span>&#123;</span><br><span class="line">  <span class="keyword">public</span> Button yes;</span><br><span class="line">  <span class="keyword">public</span> Button cancel;</span><br><span class="line">  <span class="keyword">public</span> Button no;</span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">int</span> result;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="title">MyWindow</span><span class="params">(Context context, View view)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>(context);</span><br><span class="line">    <span class="keyword">this</span>.setContentView(LayoutInflater.from(context).inflate(R.layout.manager_layout, <span class="keyword">null</span>));</span><br><span class="line">    <span class="comment">// this.setOutsideTouchable(false);</span></span><br><span class="line">    <span class="keyword">this</span>.setFocusable(<span class="keyword">true</span>);<span class="comment">// 否则无法进行edittext输入</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>.showAsDropDown(view);</span><br><span class="line">    <span class="keyword">this</span>.setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_ADJUST_RESIZE);</span><br><span class="line">    <span class="keyword">this</span>.setInputMethodMode(PopupWindow.INPUT_METHOD_NEEDED);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>响应键盘:<code>this.setFocusable(true);</code>,否则无法进行EditText输入</li></ul><h3 id="DialogFragment"><a href="#DialogFragment" class="headerlink" title="DialogFragment"></a><code>DialogFragment</code></h3><p><a href="https://www.jianshu.com/p/0861ee5b9028">参考</a></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyWindow</span> <span class="keyword">extends</span> <span class="title">DialogFragment</span> </span>&#123;</span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> View <span class="title">onCreateView</span><span class="params">(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">      View view = inflater.inflate(R.layout.manager_layout, container);</span><br><span class="line">      getDialog().getWindow().setBackgroundDrawable(<span class="keyword">new</span> ColorDrawable(<span class="number">0x00000000</span>));</span><br><span class="line">      <span class="keyword">return</span> view;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">      setStyle(STYLE_NO_FRAME, android.R.style.Theme);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">myWindow = <span class="keyword">new</span> MyWindow();</span><br><span class="line">myWindow.show(getSupportFragmentManager(), <span class="string">&quot;edit&quot;</span>);</span><br></pre></td></tr></table></figure><h1 id="全景相机开发笔记"><a href="#全景相机开发笔记" class="headerlink" title="全景相机开发笔记"></a>全景相机开发笔记</h1><h2 id="自定义相机界面"><a href="#自定义相机界面" class="headerlink" title="自定义相机界面"></a>自定义相机界面</h2><hr><h2 id="过期内容"><a href="#过期内容" class="headerlink" title="过期内容"></a>过期内容</h2><h3 id="调用系统文件浏览器"><a href="#调用系统文件浏览器" class="headerlink" title="调用系统文件浏览器"></a>调用系统文件浏览器</h3><h4 id="1-绑定点击事件"><a href="#1-绑定点击事件" class="headerlink" title="1.绑定点击事件"></a>1.绑定点击事件</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Intent intent = <span class="keyword">new</span> Intent(Intent.ACTION_GET_CONTENT);</span><br><span class="line">intent.setType(<span class="string">&quot;*/*&quot;</span>);<span class="comment">// 所有类型文件</span></span><br><span class="line">intent.addCategory(Intent.CATEGORY_OPENABLE);</span><br><span class="line">startActivityForResult(intent, <span class="number">1</span>);</span><br></pre></td></tr></table></figure><h4 id="2-根据requestCode接收数据"><a href="#2-根据requestCode接收数据" class="headerlink" title="2.根据requestCode接收数据"></a>2.根据<code>requestCode</code>接收数据</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onActivityResult</span><span class="params">(<span class="keyword">int</span> requestCode, <span class="keyword">int</span> resultCode, Intent data)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (resultCode == Activity.RESULT_OK) &#123;</span><br><span class="line">    <span class="keyword">if</span> (requestCode == <span class="number">1</span>) &#123;<span class="comment">// `打开`按钮</span></span><br><span class="line">        ...</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li><p><code>Intent.ACTION_GET_CONTENT</code>:用于调用系统程序,比如一个打开一个文件的时候会提示你用哪个软件打开</p></li><li><p><code>Intent.setType()</code>:设置默认打开格式,如<code>&quot;video/*&quot;</code>,<code>&quot;audio/amr&quot;</code></p></li></ol><h3 id="调用相册"><a href="#调用相册" class="headerlink" title="调用相册"></a>调用相册</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Intent intent = <span class="keyword">new</span> Intent(Intent.ACTION_PICK);<span class="comment">//intent  action属性</span></span><br><span class="line">intent.setType(<span class="string">&quot;image/*&quot;</span>);</span><br><span class="line">startActivityForResult(intent, <span class="number">2</span>);</span><br></pre></td></tr></table></figure><h2 id="通用框架修改"><a href="#通用框架修改" class="headerlink" title="通用框架修改"></a>通用框架修改</h2><h3 id="drawable"><a href="#drawable" class="headerlink" title="drawable"></a><code>drawable</code></h3><p>添加<code>button</code>和<code>dialog</code></p><h3 id="values"><a href="#values" class="headerlink" title="values"></a><code>values</code></h3><p>删掉<code>styles</code>,修改<code>colors</code>,添加<code>styles_button</code>(按钮)和<code>styles_tab</code>(工具栏)</p><h3 id="manifests"><a href="#manifests" class="headerlink" title="manifests"></a><code>manifests</code></h3><p>增加权限,删除<code>label</code>,增加<code>android:launchMode=&quot;singleTask&quot;</code></p><h1 id="相机相关"><a href="#相机相关" class="headerlink" title="相机相关"></a>相机相关</h1><ul><li><code>FileProvider</code><a href="https://www.cnblogs.com/loaderman/p/12107057.html">cnblogs</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> android studio </tag>
            
            <tag> android </tag>
            
            <tag> adb </tag>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android Studio笔记</title>
      <link href="/2019/09/02/Android-Studio%E7%AC%94%E8%AE%B0/"/>
      <url>/2019/09/02/Android-Studio%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p><a href="https://developer.android.google.cn/studio/install#64bit-libs">官方文档</a><br><a href="http://www.android-studio.org/">国内网站</a></p><h2 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h2><ul><li><p>运行程序:<code>android-studio/bin/studio.sh</code></p></li><li><p>64位机器需要安装32位库</p></li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get install libc6:i386 libncurses5:i386 libstdc++6:i386 lib32z1 libbz2-1.0:i386</span><br></pre></td></tr></table></figure><ul><li>设置代理(<strong>不推荐,会搞出一堆问题</strong>)</li></ul><p>手动设置:<code>mirrors.neusoft.edu.cn:80</code></p><h1 id="汉化"><a href="#汉化" class="headerlink" title="汉化"></a>汉化</h1><p><a href="https://github.com/pingfangx/TranslatorX/wiki/Usage#%E5%9B%BE%E6%96%87%E6%95%99%E7%A8%8B">教程</a></p><p><a href="https://github.com/pingfangx/TranslatorX">汉化包</a></p><h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><h2 id="windows"><a href="#windows" class="headerlink" title="windows"></a>windows</h2><p>配置文件夹位置:<code>C:/Users/lynx/.AndroidStudio3.5</code></p><p>增加虚拟设备:<code>Tools</code>-&gt;<code>AVD Manager</code></p><p>android device monitor位置:<code>E:\Android\Sdk\tools\monitor.bat</code></p><p>memory monitor 打开:<code>Run</code>-&gt;<code>Profiler</code></p><p>解决网络问题:<code>Configure</code>-&gt;<code>Setting</code>-&gt;<code>System Setting</code>-&gt;<code>HTTP Proxy</code>-&gt;<code>Auto-detect proxy settings</code></p><p>布局编辑器打开:打开一个<code>xml</code>文件-&gt;底部选择<code>Design</code></p><h2 id="Linux-1"><a href="#Linux-1" class="headerlink" title="Linux"></a>Linux</h2><p>清除缓存:<code>Build</code>-&gt;<code>Clear Project</code></p><h3 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h3><ul><li>向前/后跳转:<code>alt</code>+<code>shift</code>+<code>left</code>/<code>right</code></li><li>打开Logcat:<code>alt</code>+<code>6</code></li><li>重构:<code>shift</code>+<code>f6</code></li><li>运行:<code>shift</code>+<code>f10</code></li></ul><h1 id="常见错误"><a href="#常见错误" class="headerlink" title="常见错误"></a>常见错误</h1><ol><li><code>Android resource linking failed</code></li></ol><p>查看app的gradle有没有缺少<code>implementation</code></p><ol start="2"><li><code>SDK tools directory is missing</code></li></ol><p><strong>TODO</strong></p><ol start="3"><li><code>SDK does not contain any platforms</code></li></ol><p>SDK的目录下要有名为<code>platforms</code>的文件夹</p><ol start="4"><li><code>Connection failed</code></li></ol><p><strong>TODO</strong></p><ol start="5"><li><p><code>Could not install Gradle distribution from &#39;https://services.gradle.org/distributions/gradle-x.x.x-all.zip&#39;</code></p></li><li><p><code>Gradle sync failed: Unable to tunnel through proxy. Proxy returns &quot;HTTP/1.1 400 Bad Request&quot; (973 ms)</code></p></li></ol><p>直接下载解压相应文件到本地,修改<code>gradle</code>配置:<code>Setting</code>-&gt;<code>Build, Execution, Deployment</code>-&gt;<code>Gradle</code></p><ol start="7"><li><code>Could not GET ...</code></li></ol><p>不使用代理(<code>No proxy</code>),同时在<code>gradle</code>目录下编辑<code>gradle.properties</code>,删除所有代理</p>]]></content>
      
      
      
        <tags>
            
            <tag> android studio </tag>
            
            <tag> android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>win10网络</title>
      <link href="/2019/08/30/win10%E7%BD%91%E7%BB%9C/"/>
      <url>/2019/08/30/win10%E7%BD%91%E7%BB%9C/</url>
      
        <content type="html"><![CDATA[<h2 id="wegame导致的无限配置更新和重启"><a href="#wegame导致的无限配置更新和重启" class="headerlink" title="wegame导致的无限配置更新和重启"></a><code>wegame</code>导致的无限配置更新和重启</h2><h3 id="诊断启动-待验证"><a href="#诊断启动-待验证" class="headerlink" title="诊断启动(待验证)"></a>诊断启动(待验证)</h3><p><a href="https://www.kafan.cn/A/23me29eonm.html">参考</a></p><ol><li><p>长按<code>电源</code>强制关机并重启3次以上,自动进入<code>系统菜单</code></p></li><li><p><code>疑难解答</code>-&gt;<code>高级选项</code>-&gt;<code>启动设置</code>-&gt;启用安全模式(4~6)</p></li><li><p>进入安全模式后,运行<code>misconfig</code></p></li><li><p><code>常规</code>-&gt;<code>诊断启动</code>-&gt;<code>确定</code></p></li></ol><h3 id="重置网络"><a href="#重置网络" class="headerlink" title="重置网络"></a>重置网络</h3><p><a href="https://www.jianshu.com/p/a650cd0a498c">参考</a></p><ol><li><p>同上</p></li><li><p>同上</p></li><li><p>进入安全模式后,运行<code>cmd</code></p></li><li><p>输入<code>netsh winsock reset</code>回车,重启</p></li></ol><h2 id="shadowsocks-win10全局代理-导致的上网问题"><a href="#shadowsocks-win10全局代理-导致的上网问题" class="headerlink" title="shadowsocks(win10全局代理)导致的上网问题"></a><code>shadowsocks</code>(win10全局代理)导致的上网问题</h2><ol><li><p>打开浏览器</p></li><li><p><code>工具</code>-&gt;<code>Internet选项</code>-&gt;<code>连接</code>-&gt;<code>局域网设置</code>-&gt;开启<code>自动检测设置</code>,关闭<code>代理服务器</code></p></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> windows </tag>
            
            <tag> shadowsocks </tag>
            
            <tag> wegame </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>cubism笔记</title>
      <link href="/2019/08/30/cubism%E7%AC%94%E8%AE%B0/"/>
      <url>/2019/08/30/cubism%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="标准参数id"><a href="#标准参数id" class="headerlink" title="标准参数id"></a>标准参数id</h2><table><thead><tr><th align="center">名称</th><th align="center">作用</th></tr></thead><tbody><tr><td align="center"><code>ParamAngleX</code></td><td align="center"><code>X</code>:左右,<code>Y</code>:上下,<code>Z</code>:摇摆</td></tr><tr><td align="center"><code>ParamEyeLOpen</code></td><td align="center"><code>L</code>,<code>R</code></td></tr><tr><td align="center"><code>ParamEyeLSmile</code></td><td align="center"><code>L</code>,<code>R</code>,主要用于闭眼</td></tr><tr><td align="center"><code>ParamEyeballX</code></td><td align="center"><code>X</code>,<code>Y</code></td></tr><tr><td align="center"><code>ParamBrowLY</code></td><td align="center"><code>LY</code>,<code>LX</code>,<code>RY</code>,<code>RX</code></td></tr><tr><td align="center"><code>ParamBrowLAngle</code></td><td align="center"></td></tr><tr><td align="center"><code>ParamBrowLForm</code></td><td align="center">主要和表情相关</td></tr><tr><td align="center"><code>ParamMouthForm</code></td><td align="center">主要和表情相关</td></tr><tr><td align="center"><code>ParamMouthOpen</code></td><td align="center"></td></tr><tr><td align="center"><code>ParamCheek</code></td><td align="center">脸颊(主要修改透明度)</td></tr><tr><td align="center"><code>ParamBodyX</code></td><td align="center"><code>X</code>:左右旋转,<code>Y</code>:上下伸缩,<code>Z</code>:左右摇摆</td></tr><tr><td align="center"><code>ParamBreathing</code></td><td align="center">呼吸动作</td></tr><tr><td align="center"><code>ParamHairFront</code></td><td align="center"></td></tr><tr><td align="center"><code>ParamHairSide</code></td><td align="center"></td></tr><tr><td align="center"><code>ParamHairBack</code></td><td align="center"></td></tr></tbody></table><h2 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h2><h3 id="放缩"><a href="#放缩" class="headerlink" title="放缩"></a>放缩</h3><p><code>alt</code>:中心放缩<br><code>ctrl</code>:只改变<code>deformer</code>的大小</p><h3 id="平移"><a href="#平移" class="headerlink" title="平移"></a>平移</h3><p><code>shift</code>:水平/垂直拖动</p><h3 id="选定"><a href="#选定" class="headerlink" title="选定"></a>选定</h3><p><code>ctrl</code>+<code>shift</code>:间隔多选</p><h3 id="ctrl"><a href="#ctrl" class="headerlink" title="ctrl"></a><code>ctrl</code></h3><ul><li><code>ctrl</code>+<code>t</code>:编辑材质图</li></ul><h2 id="还原"><a href="#还原" class="headerlink" title="还原"></a>还原</h2><h3 id="备份文件夹"><a href="#备份文件夹" class="headerlink" title="备份文件夹"></a>备份文件夹</h3><ul><li><p><code>window</code>-&gt;<code>open auto backup folder</code></p></li><li><p>或:<code>C:\Users\lynx\AppData\Roaming\Live2D\Cubism3_Editor\backup</code></p></li></ul><h2 id="参数调整"><a href="#参数调整" class="headerlink" title="参数调整"></a>参数调整</h2><h3 id="使2维参数同时生效"><a href="#使2维参数同时生效" class="headerlink" title="使2维参数同时生效"></a>使2维参数同时生效</h3><p><code>synthesize corners</code>并选择合并的参数名</p><h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><h3 id="调整动画参数没有效果"><a href="#调整动画参数没有效果" class="headerlink" title="调整动画参数没有效果"></a>调整动画参数没有效果</h3><p>要在对应图层<code>deformer</code>的参数增加关键点</p><h3 id="使用deformer拉扯没有效果"><a href="#使用deformer拉扯没有效果" class="headerlink" title="使用deformer拉扯没有效果"></a>使用<code>deformer</code>拉扯没有效果</h3><p>要在对应图层上增加锚点</p><h3 id="闭眼"><a href="#闭眼" class="headerlink" title="闭眼"></a>闭眼</h3><p>设置<code>clipping ID</code>(为眼白ID)</p>]]></content>
      
      
      
        <tags>
            
            <tag> cubism </tag>
            
            <tag> live2d </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>photoshop笔记</title>
      <link href="/2019/08/27/photoshop%E7%AC%94%E8%AE%B0/"/>
      <url>/2019/08/27/photoshop%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="wacom配置"><a href="#wacom配置" class="headerlink" title="wacom配置"></a>wacom配置</h2><ul><li><code>上</code>:右键</li><li><code>下</code>:平移/卷动</li></ul><h2 id="按键"><a href="#按键" class="headerlink" title="按键"></a>按键</h2><ul><li><p><code>F5</code>画笔预设</p></li><li><p><code>F6</code>颜色面板</p></li><li><p><code>F7</code>图层</p></li><li><p><code>[</code>/<code>]</code>:画笔缩小/放大</p></li><li><p><code>,</code>/<code>.</code>:切换上/下笔刷</p></li><li><p><code>b</code>:画笔</p></li><li><p><code>e</code>:橡皮擦</p></li><li><p><code>g</code>:渐变工具</p></li><li><p><code>l</code>:套索</p></li><li><p><code>r</code>:旋转画布</p></li><li><p><code>w</code>:快速选择工具</p></li><li><p><code>x</code>:前后景色互换</p></li><li><p><code>z</code>:放缩</p></li><li><p><code>ctrl</code>:移动</p></li><li><p><code>alt</code>:吸管</p></li><li><p><code>shift</code>:直线,增加到选区</p></li><li><p><code>space</code>:画布移动</p></li><li><p><code>alt</code>+<code>[</code>:下一图层</p></li><li><p><code>alt</code>+<code>]</code>:上一图层</p></li><li><p><code>alt</code>+<code>backspace</code>:快速填充前景色</p></li><li><p><code>alt</code>+<code>delete</code>:快速填充前景色</p></li><li><p><code>ctrl</code>+<code>[</code>:下移图层</p></li><li><p><code>ctrl</code>+<code>]</code>:上移图层</p></li><li><p><code>ctrl</code>+<code>d</code>:!取消套索</p></li><li><p><code>ctrl</code>+<code>n</code>:自由变换</p></li><li><p><code>ctrl</code>+<code>u</code>:色相/饱和度</p></li><li><p><code>ctrl</code>+<code>enter</code>:!确认修改</p></li><li><p><code>ctrl</code>+<code>shift</code>+<code>i</code>:反选</p></li><li><p><code>ctrl</code>+<code>shift</code>+<code>n</code>:新建图层</p></li></ul><h2 id="笔刷"><a href="#笔刷" class="headerlink" title="笔刷"></a>笔刷</h2><h3 id="笔刷加载"><a href="#笔刷加载" class="headerlink" title="笔刷加载"></a>笔刷加载</h3><p>左侧栏<code>笔刷</code>-&gt;顶栏笔刷处展开-&gt;<code>设置</code>-&gt;<code>大小可调的圆形画笔</code>-&gt;<code>喷枪钢笔不透明描画</code></p><h3 id="颜色覆盖"><a href="#颜色覆盖" class="headerlink" title="颜色覆盖"></a>颜色覆盖</h3><p>顶栏<code>模式</code>-&gt;<code>正常</code></p><h3 id="笔刷设置"><a href="#笔刷设置" class="headerlink" title="笔刷设置"></a>笔刷设置</h3><ul><li><p>画笔笔尖形状</p><blockquote><p>打型:高硬度</p></blockquote></li><li><p>形状动态</p><ul><li>大小抖动<ul><li>控制:<code>钢笔压力</code></li></ul></li></ul></li><li><p>传递(其他动态)</p><ul><li>不透明度抖动<ul><li>控制:<code>钢笔压力</code></li></ul></li><li>流量抖动<ul><li>控制:<code>钢笔压力</code><blockquote><p>注意顶栏<code>始终对&#39;大小&#39;使用&#39;压力&#39;,在关闭时&#39;画笔预设&#39;控制压力</code>,<code>始终对&#39;不透明度&#39;使用&#39;压力&#39;,在关闭时&#39;画笔预设&#39;控制压力</code></p></blockquote></li></ul></li></ul></li><li><p>湿边</p><blockquote><p>打型:开启,过度:关闭</p></blockquote></li></ul><h2 id="钢笔"><a href="#钢笔" class="headerlink" title="钢笔"></a>钢笔</h2><p><code>alt</code>:锚点增加/重置杠杆,移动杠杆<br><code>ctrl</code>:移动锚点/调整锚点杠杆,同时移动2侧杠杆</p><h2 id="材质"><a href="#材质" class="headerlink" title="材质(?)"></a>材质(?)</h2><p><code>图层</code>-&gt;<code>正片叠底</code>/<code>叠加</code></p><h2 id="选区"><a href="#选区" class="headerlink" title="选区"></a>选区</h2><ul><li><code>扩展选区</code>:<code>选择</code>-&gt;<code>修改</code></li></ul><h2 id="图像"><a href="#图像" class="headerlink" title="图像"></a>图像</h2><h3 id="裁剪透明区域"><a href="#裁剪透明区域" class="headerlink" title="裁剪透明区域"></a>裁剪透明区域</h3><p><code>图像</code>-&gt;<code>裁切</code></p>]]></content>
      
      
      
        <tags>
            
            <tag> photoshop </tag>
            
            <tag> 绘画 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>krita笔记</title>
      <link href="/2019/08/08/krita%E7%AC%94%E8%AE%B0/"/>
      <url>/2019/08/08/krita%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="添加中文"><a href="#添加中文" class="headerlink" title="添加中文"></a>添加中文</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt install krita-l10n</span><br></pre></td></tr></table></figure><h2 id="笔刷设置"><a href="#笔刷设置" class="headerlink" title="笔刷设置"></a>笔刷设置</h2><ul><li>顶栏<code>编辑笔刷设置</code>-&gt;<code>不透明度</code>-&gt;<code>启用压感笔设置</code></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> krita </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ubuntu配置ss和ssr</title>
      <link href="/2019/08/08/ubuntu%E9%85%8D%E7%BD%AEss%E5%92%8Cssr/"/>
      <url>/2019/08/08/ubuntu%E9%85%8D%E7%BD%AEss%E5%92%8Cssr/</url>
      
        <content type="html"><![CDATA[<h1 id="shadowsocks"><a href="#shadowsocks" class="headerlink" title="shadowsocks"></a>shadowsocks</h1><p><a href="https://www.sundabao.com/ubuntu%E4%BD%BF%E7%94%A8shadowsocks/">参考</a></p><h2 id="命令行"><a href="#命令行" class="headerlink" title="命令行"></a>命令行</h2><p>TODO</p><h2 id="gui"><a href="#gui" class="headerlink" title="gui"></a>gui</h2><h3 id="安装shadowsocks-qt5"><a href="#安装shadowsocks-qt5" class="headerlink" title="安装shadowsocks-qt5"></a>安装shadowsocks-qt5</h3><ol><li><p><a href="https://github.com/shadowsocks/shadowsocks-qt5/wiki/%E5%AE%89%E8%A3%85%E6%8C%87%E5%8D%97">github</a></p></li><li><p>PPA</p></li></ol><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo add-apt-repository ppa:hzwhuang/ss-qt5</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install shadowsocks-qt5</span><br></pre></td></tr></table></figure><h3 id="配置浏览器插件"><a href="#配置浏览器插件" class="headerlink" title="配置浏览器插件"></a>配置浏览器插件</h3><h4 id="firefox"><a href="#firefox" class="headerlink" title="firefox"></a>firefox</h4><p>TODO</p><h4 id="chrome"><a href="#chrome" class="headerlink" title="chrome"></a>chrome</h4><ul><li><p>下载地址:<a href="https://github.com/FelisCatus/SwitchyOmega/releases/">https://github.com/FelisCatus/SwitchyOmega/releases/</a></p></li><li><p>设置新的情景模式(其他的不用管)-&gt;<code>代理服务器</code>:</p><ul><li>代理协议:<code>socks5</code></li><li>代理服务器:<code>127.0.0.1</code></li><li>代理端口:<code>1080</code></li><li>不代理的地址列表:<code>&lt;local&gt;</code></li><li>-&gt;<code>应用选项</code></li></ul></li><li><p>编辑<code>auto switch</code></p><ul><li>规则列表网址:<code>https://raw.githubusercontent.com/gfwlist/gfwlist/master/gfwlist.txt</code>-&gt;<code>立即更新情景模式</code></li><li><code>规则列表规则</code>的<code>情景模式</code>改为代理服务器对应的模式</li><li>-&gt;<code>应用选项</code></li></ul></li><li><p>在浏览器插件部分切换<code>auto switch</code></p></li></ul><h1 id="shadowsocksR"><a href="#shadowsocksR" class="headerlink" title="shadowsocksR"></a>shadowsocksR</h1><p><a href="https://alanlee.fun/2018/05/18/ubuntu-ssr/">参考</a></p><ol><li>安装依赖</li></ol><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt install libcanberra-gtk-module libcanberra-gtk3-module gconf2 gconf-service libappindicator1</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> vpn </tag>
            
            <tag> shadowsocks </tag>
            
            <tag> ssr </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ubuntu空间扩展</title>
      <link href="/2019/07/28/ubuntu%E7%A9%BA%E9%97%B4%E6%89%A9%E5%B1%95/"/>
      <url>/2019/07/28/ubuntu%E7%A9%BA%E9%97%B4%E6%89%A9%E5%B1%95/</url>
      
        <content type="html"><![CDATA[<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://blog.csdn.net/yjkkkkk/article/details/78577143">CSDN</a></p><h1 id="查看"><a href="#查看" class="headerlink" title="查看"></a>查看</h1><ul><li>文件系统使用情况</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">df -T -h <span class="comment"># 查看文件系统类型</span></span><br></pre></td></tr></table></figure><ul><li>查看分区</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo fdisk -l</span><br></pre></td></tr></table></figure><blockquote><p>不会显示未分配的空间</p></blockquote><h1 id="扩展"><a href="#扩展" class="headerlink" title="扩展"></a>扩展</h1><ul><li>创建新的分区</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo fdisk /dev/sda</span><br><span class="line">命令(输入 m 获取帮助): n</span><br><span class="line">分区号 (11-128, 默认  11):</span><br><span class="line">第一个扇区 (92237824-500118158, 默认 213557248):</span><br><span class="line">上个扇区，+sectors 或 +size&#123;K,M,G,T,P&#125; (213557248-315959295, 默认 315959295):</span><br><span class="line">命令(输入 m 获取帮助): w</span><br><span class="line"><span class="comment"># 分区表已调整</span></span><br><span class="line"><span class="comment"># 正在同步磁盘</span></span><br></pre></td></tr></table></figure><ul><li>挂载新的分区</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo mkfs -t ext4 /dev/sda11 <span class="comment"># -t:指定格式化何种文件系统</span></span><br><span class="line">sudo e2label /dev/sda11 ubuntu_mount <span class="comment"># 重命名</span></span><br><span class="line">sudo mount /dev/sda11 fuck_mount</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>os复习</title>
      <link href="/2019/06/21/os%E5%A4%8D%E4%B9%A0/"/>
      <url>/2019/06/21/os%E5%A4%8D%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<ul><li>1题基本概念</li><li>2题进程和虚存</li><li>1题文件系统</li><li>1题并发编程</li></ul><h1 id="编译-链接"><a href="#编译-链接" class="headerlink" title="编译 链接"></a>编译 链接</h1><h2 id="gcc-o的系统调用"><a href="#gcc-o的系统调用" class="headerlink" title="gcc -o的系统调用"></a><code>gcc -o</code>的系统调用</h2><ul><li><p>预处理-&gt;编译-&gt;链接</p></li><li><p><code>strace</code>:</p><ul><li><code>-f</code>:跟踪由fork调用所产生的子进程</li></ul></li></ul><h2 id="elf文件格式"><a href="#elf文件格式" class="headerlink" title="elf文件格式"></a><code>elf</code>文件格式</h2><ul><li><code>readelf</code>命令</li></ul><h1 id="终端-shell"><a href="#终端-shell" class="headerlink" title="终端 shell"></a>终端 shell</h1><h2 id="为什么按键能显示在屏幕上-按下回车命令就会执行"><a href="#为什么按键能显示在屏幕上-按下回车命令就会执行" class="headerlink" title="为什么按键能显示在屏幕上?按下回车命令就会执行?"></a>为什么按键能显示在屏幕上?按下回车命令就会执行?</h2><h3 id="I-O设备模型"><a href="#I-O设备模型" class="headerlink" title="I/O设备模型"></a><strong>I/O设备模型</strong></h3><ul><li>I/O设备:可以与计算机(?)进行数据传输的硬件(?)<ol><li>发送命令</li><li>读取状态</li><li>传输数据</li></ol></li><li>设备驱动程序:进程(operating system?)与设备控制器(?)之间的通信程序</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ ps</span><br><span class="line">  PID TTY          TIME CMD</span><br><span class="line"> 6577 pts/3    00:00:00 zsh</span><br><span class="line"> 9178 pts/3    00:00:00 ps</span><br><span class="line"></span><br><span class="line">$ ps -l</span><br><span class="line">F S   UID   PID  PPID  C PRI  NI ADDR SZ WCHAN  TTY          TIME CMD</span><br><span class="line">0 S  1000  6577  1883  0  80   0 -  7676 sigsus pts/3    00:00:00 zsh</span><br><span class="line">4 R  1000  9265  6577  0  80   0 -  7531 -      pts/3    00:00:00 ps</span><br></pre></td></tr></table></figure><ul><li>polling</li><li>interupt</li><li>hybrid</li><li>DMA(直接存储器访问):允许外设可以独立地直接读写系统的存储器(?),而不需要cpu介入处理</li></ul><h2 id="hello如何被执行"><a href="#hello如何被执行" class="headerlink" title="./hello如何被执行"></a><code>./hello</code>如何被执行</h2><ol><li>先调用<code>fork</code></li><li>子进程调用<code>execve</code>-&gt;<code>hello</code></li><li>父进程<code>wait</code></li></ol><ul><li><code>execve</code>不会改变进程文件的状态,只会把进程替换成另一个程序</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo <span class="built_in">echo</span> <span class="string">&quot;a&quot;</span> &gt; shit</span><br><span class="line">zsh: 权限不够: shit <span class="comment"># 重定向发生在`execve`之前,open失败</span></span><br><span class="line"></span><br><span class="line">$ sudo bash -c <span class="string">&#x27;echo &quot;a&quot; &gt; shit&#x27;</span></span><br></pre></td></tr></table></figure><h1 id="加载器-文件如何变成进程"><a href="#加载器-文件如何变成进程" class="headerlink" title="加载器(文件如何变成进程?)"></a>加载器(文件如何变成进程?)</h1><h2 id="第一条指令在哪里"><a href="#第一条指令在哪里" class="headerlink" title="第一条指令在哪里?"></a><strong>第一条指令在哪里?</strong></h2><h2 id="main函数执行之前-系统发生了什么"><a href="#main函数执行之前-系统发生了什么" class="headerlink" title="main函数执行之前,系统发生了什么?"></a><code>main</code>函数执行之前,系统发生了什么?</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">gdb shit</span><br><span class="line"></span><br><span class="line">(gdb) starti</span><br><span class="line">Program stopped.</span><br><span class="line">0x00007ffff7fd4090 <span class="keyword">in</span> _start () from /lib64/ld-linux-x86-64.so.2 </span><br><span class="line"><span class="comment"># 不是hello的_start,是加载器的_start(静态链接)(动态加载在操作系统的...)</span></span><br><span class="line"></span><br><span class="line">(gdb) info inferior <span class="comment"># 查看进程号</span></span><br><span class="line">* 1    process 6569      /shit</span><br><span class="line"></span><br><span class="line">$ pmap 6569</span><br><span class="line">6569:   /shit</span><br><span class="line">0000555555554000      4K r---- shit <span class="comment"># 代码和数据</span></span><br><span class="line">0000555555555000      4K r-x-- shit</span><br><span class="line">0000555555556000      4K r---- shit</span><br><span class="line">0000555555557000      8K rw--- shit</span><br><span class="line">00007ffff7fce000     12K r----   [ anon ]</span><br><span class="line">00007ffff7fd1000      8K r-x--   [ anon ]</span><br><span class="line">00007ffff7fd3000      4K r---- ld-2.28.so</span><br><span class="line">00007ffff7fd4000    128K r-x-- ld-2.28.so</span><br><span class="line">00007ffff7ff4000     32K r---- ld-2.28.so</span><br><span class="line">00007ffff7ffc000      8K rw--- ld-2.28.so</span><br><span class="line">00007ffff7ffe000      4K rw---   [ anon ]</span><br><span class="line">00007ffffffde000    132K rw---   [ stack ]</span><br><span class="line">ffffffffff600000      4K r-x--   [ anon ]</span><br><span class="line"> total              352K</span><br><span class="line"></span><br><span class="line">(gdb) b _start</span><br><span class="line">Breakpoint 1 at 0x555555555060</span><br><span class="line"></span><br><span class="line">(gdb) c</span><br><span class="line">Breakpoint 1, 0x0000555555555060 <span class="keyword">in</span> _start ()</span><br><span class="line"></span><br><span class="line">$ pmap 6569</span><br><span class="line">6569:   /shit</span><br><span class="line">0000555555554000      4K r---- shit</span><br><span class="line">0000555555555000      4K r-x-- shit</span><br><span class="line">0000555555556000      4K r---- shit</span><br><span class="line">0000555555557000      4K r---- shit</span><br><span class="line">0000555555558000      4K rw--- shit</span><br><span class="line">00007ffff7dc3000    136K r---- libc-2.28.so <span class="comment"># printf的代码</span></span><br><span class="line">00007ffff7de5000   1476K r-x-- libc-2.28.so</span><br><span class="line">00007ffff7f56000    304K r---- libc-2.28.so</span><br><span class="line">00007ffff7fa2000      4K ----- libc-2.28.so</span><br><span class="line">00007ffff7fa3000     16K r---- libc-2.28.so</span><br><span class="line">00007ffff7fa7000      8K rw--- libc-2.28.so</span><br><span class="line">00007ffff7fa9000     24K rw---   [ anon ]</span><br><span class="line">00007ffff7fce000     12K r----   [ anon ]</span><br><span class="line">00007ffff7fd1000      8K r-x--   [ anon ]</span><br><span class="line">00007ffff7fd3000      4K r---- ld-2.28.so</span><br><span class="line">00007ffff7fd4000    128K r-x-- ld-2.28.so</span><br><span class="line">00007ffff7ff4000     32K r---- ld-2.28.so</span><br><span class="line">00007ffff7ffc000      4K r---- ld-2.28.so</span><br><span class="line">00007ffff7ffd000      4K rw--- ld-2.28.so</span><br><span class="line">00007ffff7ffe000      4K rw---   [ anon ]</span><br><span class="line">00007ffffffde000    132K rw---   [ stack ]</span><br><span class="line">ffffffffff600000      4K r-x--   [ anon ]</span><br><span class="line"> total             2320K</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line">Breakpoint 1, 0x0000555555555149 <span class="keyword">in</span> main ()</span><br><span class="line"></span><br><span class="line">$ pmap 6569</span><br><span class="line"><span class="comment"># 输出同上</span></span><br></pre></td></tr></table></figure><h1 id="printf"><a href="#printf" class="headerlink" title="printf"></a>printf</h1><h2 id="printf代码位于何处"><a href="#printf代码位于何处" class="headerlink" title="printf代码位于何处?"></a><code>printf</code>代码位于何处?</h2><ul><li><code>objdump</code></li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="keyword">void</span> __attribute__ ((constructor)) fuck()<span class="comment">// 在main之前执行</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;hello\n&quot;</span>);<span class="comment">// 编译优化,puts</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="实现线程安全的printf-20分的并发编程题"><a href="#实现线程安全的printf-20分的并发编程题" class="headerlink" title="实现线程安全的printf?(20分的并发编程题)"></a><strong>实现线程安全的<code>printf</code></strong>?(20分的并发编程题)</h2><h3 id="PV操作"><a href="#PV操作" class="headerlink" title="PV操作"></a><a href="https://blog.csdn.net/wzh402/article/details/44889671">PV操作</a></h3><ul><li>P操作<code>P(S)</code>:将信号量S减去1,若结果小于0,则把调用<code>P(S)</code>的进程置成等待信号量S的状态,即为请求资源</li><li>V操作<code>V(S)</code>:将信号量S加上1,若结果不大于0,则释放一个等待信号量S的进程,即为释放资源</li></ul><h3 id="生产者消费者问题"><a href="#生产者消费者问题" class="headerlink" title="生产者消费者问题"></a><a href="https://blog.csdn.net/liushall/article/details/81569609">生产者消费者问题</a></h3><ul><li>条件变量(先上锁?)</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">producer</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">    mutex_lock(&amp;mutex);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (count == n) wait(&amp;notfull, &amp;mutex);</span><br><span class="line">    produce();</span><br><span class="line">    count ++;</span><br><span class="line">    signal(&amp;notempty);</span><br><span class="line"></span><br><span class="line">    mutex_unlock(&amp;mutex);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">consumer</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">    mutex_lock(&amp;mutex);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (count == <span class="number">0</span>) wait(&amp;notempty, &amp;mutex);</span><br><span class="line">    consume();</span><br><span class="line">    count --;</span><br><span class="line">    signal(&amp;notfull);</span><br><span class="line">    </span><br><span class="line">    mutex_unlock(&amp;mutex);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>信号量(后上锁?)</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">producer</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">    P(&amp;space);</span><br><span class="line">    mutex_lock(&amp;mutex);</span><br><span class="line"></span><br><span class="line">    produce();</span><br><span class="line"></span><br><span class="line">    mutex_unlock(&amp;mutex);</span><br><span class="line">    V(&amp;items);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">consumer</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">    P(&amp;items);</span><br><span class="line">    mutex_lock(&amp;mutex);</span><br><span class="line"></span><br><span class="line">    consume();</span><br><span class="line"></span><br><span class="line">    mutex_unlock(&amp;mutex);</span><br><span class="line">    V(&amp;space);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="printf末尾换行"><a href="#printf末尾换行" class="headerlink" title="printf末尾换行"></a>printf末尾换行</h2><blockquote><p>异常退出</p></blockquote><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  FILE *fp = fopen(<span class="string">&quot;del&quot;</span>, <span class="string">&quot;w&quot;</span>);</span><br><span class="line">  setbuf(fp, <span class="literal">NULL</span>); <span class="comment">// 自定义fp的缓冲区,NULL:不要缓冲区</span></span><br><span class="line">  <span class="built_in">fputs</span>(<span class="string">&quot;fuck&quot;</span>, fp);</span><br><span class="line">  assert(<span class="number">0</span>);<span class="comment">// 程序异常退出</span></span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># cont&#x27;d</span></span><br><span class="line">$ gcc hello.c -o shit</span><br><span class="line">$ ./shit</span><br><span class="line">shit: hello.c:11: main: Assertion `0<span class="string">&#x27; failed.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">$ cat del</span></span><br><span class="line"><span class="string">fuck%</span></span><br></pre></td></tr></table></figure><blockquote><p>fork</p></blockquote><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i ++) &#123;</span><br><span class="line">    fork();</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;hello\n&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th align="center">n</th><th align="center"><code>./hello │ wc -l</code></th><th align="center"><code>./hello</code></th></tr></thead><tbody><tr><td align="center">1</td><td align="center">2</td><td align="center">2</td></tr><tr><td align="center">2</td><td align="center">8</td><td align="center">6</td></tr></tbody></table><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  setbuf(<span class="built_in">stdout</span>, <span class="literal">NULL</span>);</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i ++) &#123;</span><br><span class="line">    fork();</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;hello\n&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th align="center">n</th><th align="center"><code>./hello │ wc -l</code></th><th align="center"><code>./hello</code></th></tr></thead><tbody><tr><td align="center">1</td><td align="center">2</td><td align="center">2</td></tr><tr><td align="center">2</td><td align="center">6</td><td align="center">6</td></tr></tbody></table><h2 id="printf的系统调用"><a href="#printf的系统调用" class="headerlink" title="printf的系统调用"></a>printf的系统调用</h2><ul><li><code>ltrace</code>命令</li><li>libc缓冲区</li><li>write系统调用</li></ul><h1 id="write"><a href="#write" class="headerlink" title="write"></a>write</h1><h2 id="write写到哪里"><a href="#write写到哪里" class="headerlink" title="write写到哪里?"></a>write写到哪里?</h2><ul><li>文件描述符对应的文件,例如一个设备(<code>/dev/ttyx</code>),或是文件系统中的一个文件</li></ul><h2 id="文件系统如何实现"><a href="#文件系统如何实现" class="headerlink" title="文件系统如何实现?"></a><strong>文件系统如何实现</strong>?</h2><ul><li>文件系统:存储和组织计算机数据的方法(?)</li></ul><h3 id="FAT-文件分配表"><a href="#FAT-文件分配表" class="headerlink" title="FAT(文件分配表)"></a><strong>FAT</strong>(文件分配表)</h3><p><a href="https://blog.csdn.net/u010650845/article/details/60881687">FAT32文件系统快速入门,CSDN</a><br><a href="https://blog.csdn.net/u010650845/article/details/60780979">长文件名</a></p><h3 id="ext2-inode"><a href="#ext2-inode" class="headerlink" title="ext2(inode)"></a><strong>ext2</strong>(inode)</h3><p><a href="http://linux.vbird.org/linux_basic/0230filesystem.php#top">鸟哥的Linux私房菜:Linux的ext2档案系统</a></p><ul><li>最大单一文件大小<ol><li>12直接,1间接,1双间接,1三间接,设块大小为x(kb),1个block号4byte</li><li><code>x*12 + x*(x*1024/4) + x*(x*1024/4)^2 + x*(x*1024/4)^3</code>(byte)</li></ol></li><li>资料存放区:<code>inode table</code>,<code>data block</code></li><li><code>metadata</code>:<code>superblock</code>,<code>block bitmap</code>,<code>inode bitmap</code></li></ul><h2 id="如何保护我们的数据不受损害"><a href="#如何保护我们的数据不受损害" class="headerlink" title="如何保护我们的数据不受损害?"></a><strong>如何保护我们的数据不受损害</strong>?</h2><h3 id="RAID"><a href="#RAID" class="headerlink" title="RAID"></a>RAID</h3><p><a href="http://linux.vbird.org/linux_basic/0420quota.php#raid">鸟哥的Linux私房菜:Software RAID</a></p><table><thead><tr><th align="center">RAID</th><th align="center">容量</th><th align="center">容错</th><th align="center">顺序度</th><th align="center">随机读</th><th align="center">顺序写</th><th align="center">随机写</th></tr></thead><tbody><tr><td align="center">0</td><td align="center">$n$</td><td align="center">0</td><td align="center">$n$</td><td align="center">$n$</td><td align="center">$n$</td><td align="center">$n$</td></tr><tr><td align="center">1</td><td align="center">$n/2$</td><td align="center"></td><td align="center">$&gt; n/2$</td><td align="center">$n$</td><td align="center">$n/2$</td><td align="center">$n/2$</td></tr><tr><td align="center">4</td><td align="center">$n-1$</td><td align="center">1</td><td align="center">$n-1$</td><td align="center">$n-1$</td><td align="center">$n-1$</td><td align="center">$1/2$</td></tr><tr><td align="center">5</td><td align="center">$n-1$</td><td align="center">1</td><td align="center">$n-1$</td><td align="center">$n$</td><td align="center">$n-1$</td><td align="center"><strong>$n/4$</strong></td></tr></tbody></table><h3 id="fsck"><a href="#fsck" class="headerlink" title="fsck"></a>fsck</h3><p>扫描inodes里的所有数据块,检查bitmap的一致性</p><h3 id="日志"><a href="#日志" class="headerlink" title="日志"></a>日志</h3><p><a href="http://linux.vbird.org/linux_basic/0230filesystem.php#top">鸟哥的Linux私房菜:Linux的ext2档案系统</a></p><p>在磁盘上保存所有对数据结构的操作,每次启动时重做这些操作,在内存里重新建立文件系统</p><p>优化</p><ul><li>批处理</li><li>Metadata journaling<ul><li>只对inode和bitmap做journaling,数据可以随意写入</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 操作系统 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>问求复习</title>
      <link href="/2019/06/17/%E9%97%AE%E6%B1%82%E5%A4%8D%E4%B9%A0/"/>
      <url>/2019/06/17/%E9%97%AE%E6%B1%82%E5%A4%8D%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="线性规划"><a href="#线性规划" class="headerlink" title="线性规划"></a>线性规划</h1><blockquote><p>TODO</p></blockquote><h1 id="群论"><a href="#群论" class="headerlink" title="群论"></a>群论</h1><h2 id="群"><a href="#群" class="headerlink" title="群"></a>群</h2><ul><li>封闭</li><li>结合律</li><li>单位元</li><li>逆元</li></ul><h2 id="阿贝尔群-abelian-or-commutative"><a href="#阿贝尔群-abelian-or-commutative" class="headerlink" title="阿贝尔群(abelian or commutative)"></a>阿贝尔群(abelian or commutative)</h2><p>$a\circ b=b\circ a$</p><h2 id="子群"><a href="#子群" class="headerlink" title="子群"></a>子群</h2><ul><li>封闭</li><li>单位元</li><li>逆元</li></ul><h2 id="cyclic-group-循环群"><a href="#cyclic-group-循环群" class="headerlink" title="cyclic group(循环群)"></a>cyclic group(循环群)</h2><ul><li>存在一些$a\in G$使得$G=\langle a\rangle$</li><li><strong>order</strong> of $a$:满足$a^n=e$的最小正整数$n$ </li><li>循环群是阿贝尔群</li><li>循环群的子群是循环群</li><li>$C_{\infty}\cong\mathbb{Z}(\mathbb{Z},+),C_n\cong\mathbb{Z}_n$</li><li>无限循环群$C_{\infty}$<ul><li>$|g^k|=\infty$</li><li>生成元:$g,g^{-1}$</li><li>子群:$\langle g^k\rangle,k\in\mathbb{N}$</li></ul></li><li>有限循环群$C_n$<ul><li>生成元:$g^k,\gcd(k,n)=1$</li></ul></li></ul><h2 id="symmetric-group-对称群"><a href="#symmetric-group-对称群" class="headerlink" title="symmetric group(对称群)"></a>symmetric group(对称群)</h2><p>$|S_n|=n!$</p><h2 id="permutation-group"><a href="#permutation-group" class="headerlink" title="permutation group"></a>permutation group</h2><ul><li>$S_n$的子群是<strong>permutation group</strong></li></ul><h2 id="cycle"><a href="#cycle" class="headerlink" title="cycle"></a>cycle</h2><ul><li><strong>cycle of length $k$</strong>:$\sigma(a_k)=a_1$</li><li>$\sigma,\tau$是$S_X$中不相交的cycles,那么$\sigma\tau=\tau\sigma$</li><li><strong>transpositions</strong>:长度为2的cycle<ul><li>$(a_1,a_2,…,a_n)=(a_1a_n)(a_1a_{n-1})…(a_1a_3)(a_1a_2)$</li></ul></li></ul><h2 id="alternating-group-交代群"><a href="#alternating-group-交代群" class="headerlink" title="alternating group(交代群)"></a>alternating group(交代群)</h2><ul><li>even permutations</li></ul><h2 id="dihedral-group-二面体群"><a href="#dihedral-group-二面体群" class="headerlink" title="dihedral group(二面体群)"></a>dihedral group(二面体群)</h2><ul><li>$D_n$是$S_n$的一个阶为$2n$的子群</li></ul><h2 id="cosets-陪集"><a href="#cosets-陪集" class="headerlink" title="cosets(陪集)"></a>cosets(陪集)</h2><ul><li>$g\in G$<ul><li>左陪集:$gH=\{gh:h\in H\}$</li><li>右陪集:$Hg=\{hg:h\in H\}$</li></ul></li><li>令$H$是$G$的子群,$g_1,g_2\in G$,以下条件等价:<ol><li>$g_1H=g_2H$</li><li>$Hg_1^{-1}=Hg_2^{-1}$</li><li>$g_1H\subset g_2H$</li><li>$g_2\in g_1H$</li><li>$g_1^{-1}g_2\in H$</li></ol></li><li><strong>index</strong> of $H$ in $G$:$H$在$G$中左陪集数$[G:H]$</li></ul><h2 id="拉格朗日定理"><a href="#拉格朗日定理" class="headerlink" title="拉格朗日定理"></a>拉格朗日定理</h2><blockquote><p>TODO</p></blockquote><h2 id="isomorphism-同构"><a href="#isomorphism-同构" class="headerlink" title="isomorphism(同构)"></a>isomorphism(同构)</h2><p>单射,满射$G\to H:\forall a,b\in G,\phi(a\cdot b)=\phi(a)\circ\phi(b)$</p><ul><li>无限循环群同构于$\mathbb{Z}$</li><li>$n$阶有限循环群同构于$\mathbb{Z}_n$</li><li>$p$阶($p$为质数)群同构于$\mathbb{Z}_p$</li></ul><h2 id="external-direct-products-外直积"><a href="#external-direct-products-外直积" class="headerlink" title="external direct products(外直积)"></a>external direct products(外直积)</h2><p>$G\times H:(g_1,h_1)(g_2,h_2)=(g_1\cdot g_2,h_1\circ h_2)$</p><ul><li>令$(g,h)\in G\times H$,$g,h$的阶各为$r,s$,那么$(g,h)$在$G\times H$中的阶为$s,r$的最小公倍数</li></ul><h2 id="internal-direct-products-内直积"><a href="#internal-direct-products-内直积" class="headerlink" title="internal direct products(内直积)"></a>internal direct products(内直积)</h2><ul><li>$G$是$H$和$K$的内直积:<ul><li>$G=HK=\{hk:h\in H,k\in K\}$</li><li>$H\cap K=\{e\}$</li><li>$hk=kh$</li></ul></li><li>若$G$是$H$和$K$的内直积,$G\cong H\times K$</li></ul><h2 id="正规子群"><a href="#正规子群" class="headerlink" title="正规子群"></a>正规子群</h2><p>$H$是$G$的子群,$H$ is <strong>normal</strong>:$\forall g\in G,gH=Hg$</p><ul><li>令$N$是$G$子群,以下等价<ol><li>$N$ normal in $G$</li><li>$\forall g\in G,gNg^{-1}\subset N$</li><li>$\forall g\in G,gNg^{-1}=N$</li></ol></li></ul><h2 id="商群-factor-or-quotient-group"><a href="#商群-factor-or-quotient-group" class="headerlink" title="商群(factor or quotient group)"></a>商群(factor or quotient group)</h2><p>若$N$是$G$的正规子群,那么$N$的陪集在运算$(aN)(bN)=abN$下构成群$G/N$(阶为$[G:N]$)</p><h2 id="the-simplicity-of-the-alternating-group"><a href="#the-simplicity-of-the-alternating-group" class="headerlink" title="the simplicity of the alternating group"></a>the simplicity of the alternating group</h2><blockquote><p>TODO</p></blockquote><h2 id="Homomorphisms-同态"><a href="#Homomorphisms-同态" class="headerlink" title="Homomorphisms(同态)"></a>Homomorphisms(同态)</h2><p>映射$G\to H:\forall a,b\in G,\phi(a\cdot b)=\phi(a)\circ\phi(b)$</p><ul><li>令同态映射$\phi:G\to H$,<strong>kernel</strong>:$\phi(\{e\})^{-1}$($G$的正规子群)</li></ul><h2 id="同构定理"><a href="#同构定理" class="headerlink" title="同构定理"></a>同构定理</h2><ul><li>natural/canonical homomorphism:<ul><li>$H$是$G$的正规子群,定义$\phi:G\to G/H$ by $\phi(g)=gH$</li></ul></li><li>第一同构定理<ul><li>如果$\psi:G\to H$是同态映射且$K=\ker\psi$,那么$K$ is normal in $G$</li><li>令$\phi:G\to G/K$为canonical homomorphism,那么存在唯一的同构映射$\eta:G/K\to\phi(G)$ such that $\psi=\eta\phi$</li></ul></li><li>第二同构定理<ul><li>$H$是$G$的子群,且$N$是$G$的正则子群,那么:<ul><li>$HN$是$G$的子群</li><li>$H\cap N$是$H$的正规子群</li><li>$H/H\cap N\cong HN/N$</li></ul></li></ul></li></ul><h1 id="串匹配"><a href="#串匹配" class="headerlink" title="串匹配"></a>串匹配</h1><blockquote><p>TODO</p></blockquote><h1 id="数论"><a href="#数论" class="headerlink" title="数论"></a>数论</h1><h2 id="欧几里得算法"><a href="#欧几里得算法" class="headerlink" title="欧几里得算法"></a>欧几里得算法</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">euclid</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (b == <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> a;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> euclid(b, a % b);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">fuck</span> &#123;</span></span><br><span class="line">  <span class="keyword">int</span> d, x, y;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function">fuck <span class="title">extended_euclid</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span><span class="comment">// gcd(a, b) = d = a * x + b * y</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (b == <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> (a, <span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  (d_, x_, y_) = extended_euclid(b, a % b);</span><br><span class="line">  (d, x, y) = (d_, y_, x_ - (a / b) * y_);</span><br><span class="line">  <span class="keyword">return</span> (d, x, y);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="欧拉函数"><a href="#欧拉函数" class="headerlink" title="欧拉函数"></a>欧拉函数</h2><p>$\phi(n):\le n$正整数中与$n$互质的数的个数</p><ul><li>$\phi(n)=n\prod(1-\dfrac{1}{p}),p$是$n$的质因子,不重复</li><li>若$m,n$互质,$\phi(mn)=\phi(m)\phi(n)$</li><li>若$n$为质数,$\phi(n)=n-1$</li></ul><h2 id="求解模线性方程"><a href="#求解模线性方程" class="headerlink" title="求解模线性方程"></a>求解模线性方程</h2><ul><li>当且仅当$d|b$时,$ax\equiv b(\mod n)$有解,$d=\gcd(a,n)$</li><li>对任意正整数$a,n$,如果$d=\gcd(a,n)$,则在$\mathbb{Z}_n$中<ol><li>$\langle a\rangle=\langle d\rangle=\{0,d,2d,…,((n/d)-1)d\}$</li><li>$|\langle a\rangle|=n/d$</li></ol></li></ul><h2 id="中国余数定理"><a href="#中国余数定理" class="headerlink" title="中国余数定理"></a>中国余数定理</h2><ul><li>$n_1,n_2…n_k$两两互质,且$n=n_1n_2…n_k$,则对任意整数$a_1,a_2…a_k$,关于$x$的方程组$x\equiv a_i(\mod n_i),i=1,2…k$有唯一解</li><li>$n_1,n_2…n_k$两两互质,且$n=n_1n_2…n_k$,则对所有整数$x,a$:$x\equiv a(\mod n_i),i=1,2…k$当且仅当$x\equiv a(\mod n_i)$</li></ul><h2 id="元素的幂"><a href="#元素的幂" class="headerlink" title="元素的幂"></a>元素的幂</h2><ul><li>欧拉定理:$\forall n &gt; 1,a^{\phi(n)}\equiv1(\mod n),a\in\mathbb{Z}_n^{*}$</li><li>费马定理:$p$是素数,则$a^{p-1}\equiv1(\mod p),a\in\mathbb{Z}_n^{*}$</li></ul><h2 id="Mille-Rabin"><a href="#Mille-Rabin" class="headerlink" title="Mille-Rabin"></a>Mille-Rabin</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> num[] = &#123;<span class="number">2</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">11</span>, <span class="number">13</span>, <span class="number">17</span>, <span class="number">19</span>&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">MR</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (a == <span class="number">1</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  <span class="number">2</span>^t * u = a - <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; num.length; i ++) &#123;</span><br><span class="line">    x = num[i]^u % a;</span><br><span class="line">    <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; t; j ++) &#123;</span><br><span class="line">      last = x;</span><br><span class="line">      x = x * x % a;</span><br><span class="line">      <span class="keyword">if</span> (x == <span class="number">1</span> &amp;&amp; last != <span class="number">1</span> &amp;&amp; last != a - <span class="number">1</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (x != <span class="number">1</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="RSA"><a href="#RSA" class="headerlink" title="RSA"></a>RSA</h2><ol><li>选两个素数$p\not=q$</li><li>$n=pq$</li><li>选与$\phi(n)$互质的小奇数$e$</li><li>计算模$\phi(n)$下$e$的乘法逆元$d$</li><li>公开$e,n$</li></ol><h2 id="代数编码"><a href="#代数编码" class="headerlink" title="代数编码"></a>代数编码</h2><ul><li>$(n,m)$-<strong>block code</strong>:$m$位编码成$n$位</li><li>矩阵$H\in\mathbb{M}_{m\times n}(\mathbb{Z}_2)的$<strong>null space</strong>($Null(H)$):使得$Hx=0$的$x$集合</li><li><strong>canonical parity-check matrix</strong>:$H=(A|I_m)$</li><li><strong>standard generator matrix</strong>:$G=(\dfrac{I_{n-m}}{A})$</li><li>$\{y:Gx=y,x\in\mathbb{Z}_2^k\}=C=Null(H),((n,k)$-block code)</li><li>$HG=0$</li><li>$y\in C$当且仅当$Hy=0$</li><li>$C$是single error-correcting code当且仅当$H$没有全0的column且$H$任意两columns都不相同</li><li><strong>syndrome</strong> of $x$(校验子):$Hx$</li><li>对$r$行(校验位长度)的汉明奇偶校验矩阵,其列数至多$2^r-1$(除去0),设信息位长度为$k$,则$2^r-1\ge k+r$</li></ul><h1 id="NPC理论"><a href="#NPC理论" class="headerlink" title="NPC理论"></a>NPC理论</h1><h2 id="判定问题-L-U-Sigma"><a href="#判定问题-L-U-Sigma" class="headerlink" title="判定问题$(L,U,\Sigma)$"></a>判定问题$(L,U,\Sigma)$</h2><ul><li>input: An $x\in U$</li><li>output: ‘yes’ if $x\in L$, ‘no’ otherwise</li></ul><h2 id="最优化问题-Sigma-I-Sigma-O-L-L-I-M-cost-goal"><a href="#最优化问题-Sigma-I-Sigma-O-L-L-I-M-cost-goal" class="headerlink" title="最优化问题$(\Sigma_I,\Sigma_O,L,L_I,M,cost,goal)$"></a>最优化问题$(\Sigma_I,\Sigma_O,L,L_I,M,cost,goal)$</h2><ul><li>input: $L_I$的问题实例</li><li>constraints: 对于$x\in L_I$的约束条件$M(x)$</li><li>costs: cost函数</li><li>goal: maximum/minimun</li></ul><h2 id="NP完全性"><a href="#NP完全性" class="headerlink" title="NP完全性"></a>NP完全性</h2><ul><li>co-NP:{$L|L^C\in$NP}</li><li>$L_1\le_PL_2$:$x\in L_1$当且仅当$f(x)\in L_2$</li><li>NP-hard:<ol><li>不一定是NP</li><li>所有NP可以约化到它</li></ol></li><li>$L_2\in P,L_1\le_PL_2$则$L_1\in P$</li><li>$L’\in$NPC,$L’\le_PL$则$L$是NP难度的</li></ul><h2 id="3-CNF可满足性-le-P-团问题"><a href="#3-CNF可满足性-le-P-团问题" class="headerlink" title="3-CNF可满足性$\le_P$团问题"></a>3-CNF可满足性$\le_P$团问题</h2><ul><li>建图:<ol><li>对每个子句$C=(x\vee y\vee z)$,将$x,y,z$以3元组的形式加入到点集$V$</li><li>对所有$V$中来自不同3元组的两个点$u,v$,若$u$不是$v$的非,则建边$(u,v)$</li></ol></li><li>3-CNF可满足$\to$规模为$k$的团:<ul><li>每个3元组中至少会有一个文字为真,在每个3元组中选一个这样的顶点,组成规模为$k$的集合$V’$</li><li>因为$k$个顶点对应的文字不可能互补,所以两两之间有边,所以$V’$是团</li></ul></li><li>规模为$k$的团$\to$3-CNF可满足<ul><li>$k$个顶点对应的文字两两互不为补,令这些顶点对应的文字为真</li></ul></li></ul><h2 id="团问题-le-P-顶点覆盖问题"><a href="#团问题-le-P-顶点覆盖问题" class="headerlink" title="团问题$\le_P$顶点覆盖问题"></a>团问题$\le_P$顶点覆盖问题</h2><ul><li>建图:<ul><li>根据输入$G$建立补图$\bar{G}$</li></ul></li><li>$G$有规模为$k$的团$\to\bar{G}$有规模为$|V|-k$的顶点覆盖:<ul><li>设$G$包含规模为$k$的团$V’$</li><li>对$\bar{G}$中任意一条边$(u,v)$,$(u,v)\not\in G$,所以$u,v$至少一个不在团$V’$中,即$u,v$至少一个在$V-V’$中,即$u,v$两点被点集$V-V’$覆盖,所以$V-V’$能覆盖$\bar{G}$中的所有顶点</li></ul></li><li>$\bar{G}$有规模为$|V|-k$的顶点覆盖$\to G$有规模为$k$的团:<ul><li>设$\bar{G}$包含规模为$|V|-k$的顶点覆盖$V’$</li><li>对$G$中任意2个顶点$u,v$,若$u\not\in V’$且$v\not\in V’$,那么$G$中一定有边$(u,v)$,所以任意$u,v\in V-V’$存在边$(u,v)$,所以$V-V’$是团</li></ul></li></ul><h2 id="哈密顿回路问题-le-P-旅行商问题"><a href="#哈密顿回路问题-le-P-旅行商问题" class="headerlink" title="哈密顿回路问题$\le_P$旅行商问题"></a>哈密顿回路问题$\le_P$旅行商问题</h2><ul><li>建图:<ul><li>对于输入$G$,建立完全图$G’$,定义费用$c(i,j)=\begin{cases}<br>0\quad(i,j)\in E\\<br>1\quad(i,j)\not\in E\\<br>\end{cases}$</li></ul></li><li>$G$有哈密顿回路$\to G’$中有费用至多为0的回路:</li><li>$G’$中有费用至多为0的回路$\to G$有哈密顿回路:</li></ul><h2 id="3-CNF可满足性-le-P-子集和问题"><a href="#3-CNF可满足性-le-P-子集和问题" class="headerlink" title="3-CNF可满足性$\le_P$子集和问题"></a>3-CNF可满足性$\le_P$子集和问题</h2><ul><li>建模:<ol><li>输入含$n$个变量,$k$个子句</li><li>集合$S$为$2k+2n$个$k+n$位10进制数的集合(高$n$位对应$n$个变量,低$k$为对应$k$个子句):<ol><li>对于每个变量$x$,在$S$中构建2个数$v,v’$:<ol><li>$v,v’$对应$x$的那一位为1</li><li>对所有子句$C$,若$C$包含$x$,则$v$对应的$C$那一位为1,若$C$包含$\lnot x$,则$v’$对应$C$的那一位为1</li></ol></li><li>对于每个子句$C$,在$S$中构建两个数$s,s’$:<ol><li>$s$对应$C$的那一位为1</li><li>$s’$对应$C$的那一位为2</li></ol></li></ol></li><li>目标:选取$S’\subseteq S$,其中所有数之和$t$高$n$位全为1,低$k$位全为$4$</li></ol></li><li>3-CNF可满足$\to$存在$S’\subseteq S$和为$t$:<ol><li>若变量$x_i=1$则将$v_i$包含进$S’$,否则将$v_i’$包含进$S’$:$t$的高$n$位为全1</li><li>现在$t$的低$k$位每一位可能为$1,2,3$,再对每一个集合$\{s_j,s_j’\}$选取一个非空集合,使得$t$在对应子句$C_i$的位置为4</li></ol></li><li>存在$S’\subseteq S’$和为$t\to$3-CNF可满足:<ol><li>因为$t$的高$n$位全为1,那么每对$v_i,v_i’$,$S’$都只包含2者之1</li><li>若$v_i\in S’$,$x_i$置1,否则置0</li><li>TODO</li></ol></li></ul><h1 id="随机化算法"><a href="#随机化算法" class="headerlink" title="随机化算法"></a>随机化算法</h1><h2 id="拉斯维加斯算法"><a href="#拉斯维加斯算法" class="headerlink" title="拉斯维加斯算法"></a>拉斯维加斯算法</h2><ul><li>$Prob(A(x)=F(x))=1$</li><li>$Prob(A(x)=?)=1-Prob(A(x)=F(x))\le\dfrac{1}{2}$</li></ul><h2 id="蒙特卡洛算法"><a href="#蒙特卡洛算法" class="headerlink" title="蒙特卡洛算法"></a>蒙特卡洛算法</h2><ul><li><strong>one-sided-error</strong>:<ol><li>$x\in L,Prob(A(x)=1)\ge1/2$</li><li>$x\not\in L,Prob(A(x)=0)=1$</li></ol></li><li><strong>two-sided-error</strong>:<ol><li>$Prob(A(x)=F(x))\ge1/2+\varepsilon$</li></ol></li><li><strong>unbounded-error</strong>:<ol><li>$Prob(A(x)=F(x)) &gt; \dfrac{1}{2}$</li></ol></li></ul>]]></content>
      
      
      <categories>
          
          <category> 问题求解 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>oj复习</title>
      <link href="/2019/06/16/oj%E5%A4%8D%E4%B9%A0/"/>
      <url>/2019/06/16/oj%E5%A4%8D%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h2 id="模拟退火"><a href="#模拟退火" class="headerlink" title="模拟退火"></a>模拟退火</h2><h3 id="poj2069"><a href="#poj2069" class="headerlink" title="poj2069"></a>poj2069</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;assert.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN = <span class="number">31</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">fuck</span> &#123;</span></span><br><span class="line">  <span class="keyword">double</span> x, y, z;</span><br><span class="line">&#125; p[MAXN], ans;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">double</span> radius;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SA</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">dis</span><span class="params">(fuck a, fuck b)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span> (~<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n)) &#123;</span><br><span class="line">    <span class="keyword">if</span> (n == <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i ++) &#123;</span><br><span class="line">      <span class="built_in">scanf</span>(<span class="string">&quot;%lf%lf%lf&quot;</span>, &amp;p[i].x, &amp;p[i].y, &amp;p[i].z);</span><br><span class="line">    &#125;</span><br><span class="line">    SA();</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%.5lf\n&quot;</span>, radius);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SA</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  ans.x = ans.y = ans.z = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">int</span> max_p = <span class="number">-1</span>;</span><br><span class="line">  <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">double</span> t = <span class="number">100</span>; t &gt; <span class="number">0.0000001</span>; t *= <span class="number">0.99</span>) &#123;</span><br><span class="line">    radius = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i ++) &#123;</span><br><span class="line">      <span class="keyword">double</span> tmp_dis = dis(ans, p[i]);</span><br><span class="line">      <span class="keyword">if</span> (tmp_dis &gt; radius) &#123;</span><br><span class="line">        max_p = i;</span><br><span class="line">        radius = tmp_dis;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    ans.x -= (ans.x - p[max_p].x) / radius * t;</span><br><span class="line">    ans.y -= (ans.y - p[max_p].y) / radius * t;</span><br><span class="line">    ans.z -= (ans.z - p[max_p].z) / radius * t;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">dis</span><span class="params">(fuck a, fuck b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">sqrt</span>((a.x - b.x)*(a.x - b.x) + (a.y - b.y)*(a.y - b.y) + (a.z - b.z)*(a.z - b.z));</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="p4035"><a href="#p4035" class="headerlink" title="p4035"></a>p4035</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;assert.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN = <span class="number">12</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">fuck</span> &#123;</span></span><br><span class="line">  <span class="keyword">double</span> num[MAXN];</span><br><span class="line">&#125; point[MAXN], center, delta;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SA</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">dis</span><span class="params">(fuck a, fuck b)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">  <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n + <span class="number">1</span>; i ++) &#123;</span><br><span class="line">    <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; n; j ++) &#123;</span><br><span class="line">      <span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>, &amp;point[i].num[j]);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  SA();</span><br><span class="line">  <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i ++) &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%.3lf%c&quot;</span>, center.num[i], i == n - <span class="number">1</span> ? <span class="string">&#x27;\n&#x27;</span> : <span class="string">&#x27; &#x27;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SA</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i ++) &#123;</span><br><span class="line">    center.num[i] = <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">double</span> t = <span class="number">10000</span>; t &gt; <span class="number">0.0001</span>; t *= <span class="number">0.99995</span>) &#123;</span><br><span class="line">    <span class="keyword">double</span> ave = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">double</span> each_dis[MAXN];</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n + <span class="number">1</span>; i ++) &#123;</span><br><span class="line">      each_dis[i] = dis(center, point[i]);</span><br><span class="line">      ave += each_dis[i];</span><br><span class="line">    &#125;</span><br><span class="line">    ave /= n + <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i ++) &#123;</span><br><span class="line">      delta.num[i] = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n + <span class="number">1</span>; i ++) &#123;</span><br><span class="line">      <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; n; j ++) &#123;</span><br><span class="line">        delta.num[j] += (ave - each_dis[i]) / (ave) * (center.num[j] - point[i].num[j]);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i ++) &#123;</span><br><span class="line">     center.num[i] += t * delta.num[i];</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">dis</span><span class="params">(fuck a, fuck b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">double</span> ans = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i ++) &#123;</span><br><span class="line">    ans += (a.num[i] - b.num[i]) * (a.num[i] - b.num[i]);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">sqrt</span>(ans);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="素数判定"><a href="#素数判定" class="headerlink" title="素数判定"></a>素数判定</h2><h3 id="p3383"><a href="#p3383" class="headerlink" title="p3383"></a>p3383</h3><ul><li>增大步长</li></ul><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;assert.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">is_prime</span><span class="params">(<span class="keyword">int</span> a)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;n, &amp;n);</span><br><span class="line">  <span class="keyword">while</span> (n --) &#123;</span><br><span class="line">    <span class="keyword">int</span> test = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;test);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>, is_prime(test) ? <span class="string">&quot;Yes&quot;</span> : <span class="string">&quot;No&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">is_prime</span><span class="params">(<span class="keyword">int</span> a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (a == <span class="number">1</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">if</span> (a == <span class="number">2</span> || a == <span class="number">3</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">if</span> ((a % <span class="number">6</span> != <span class="number">1</span>) &amp;&amp; (a % <span class="number">6</span> != <span class="number">5</span>)) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">5</span>; i * i &lt;= a; i += <span class="number">6</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (a % i == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (a % (i + <span class="number">2</span>) == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><code>Miller-Rabin</code></li></ul><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;assert.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">my_exp</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> m)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">MR</span><span class="params">(<span class="keyword">int</span> a)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">int</span> num[] = &#123;<span class="number">2</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">11</span>, <span class="number">13</span>, <span class="number">17</span>, <span class="number">19</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;n, &amp;n);</span><br><span class="line">  <span class="keyword">while</span> (n --) &#123;</span><br><span class="line">    <span class="keyword">int</span> test = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;test);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>, MR(test) ? <span class="string">&quot;Yes&quot;</span> : <span class="string">&quot;No&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">my_exp</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> m)</span></span></span><br><span class="line"><span class="function"></span>&#123;<span class="comment">// a^b % m</span></span><br><span class="line">  <span class="keyword">long</span> <span class="keyword">long</span> ans = <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">while</span> (b) &#123;</span><br><span class="line">    <span class="keyword">if</span> (b &amp; <span class="number">1</span>) &#123;</span><br><span class="line">      ans = ans * a % m;</span><br><span class="line">    &#125;</span><br><span class="line">    a = (<span class="keyword">long</span> <span class="keyword">long</span>)a * a % m;</span><br><span class="line">    b &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> (<span class="keyword">int</span>)ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">MR</span><span class="params">(<span class="keyword">int</span> a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (a == <span class="number">1</span>) <span class="keyword">return</span> <span class="number">0</span>;<span class="comment">// 特判</span></span><br><span class="line">  <span class="comment">// 计算 a - 1 == 2^t * u</span></span><br><span class="line">  <span class="keyword">int</span> u = a - <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">int</span> t = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span> (u % <span class="number">2</span> == <span class="number">0</span>) &#123;</span><br><span class="line">    u &gt;&gt;= <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    t ++;</span><br><span class="line">  &#125;</span><br><span class="line">  assert(u % <span class="number">2</span> == <span class="number">1</span>);</span><br><span class="line">  <span class="comment">// witness</span></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; (<span class="keyword">int</span>)(<span class="keyword">sizeof</span>(num) / <span class="keyword">sizeof</span>(<span class="keyword">int</span>)); i ++)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span> (a == num[i]) <span class="keyword">return</span> <span class="number">1</span>;<span class="comment">// 特判</span></span><br><span class="line">    <span class="keyword">int</span> x = my_exp(num[i], u, a);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= t; j ++) &#123;</span><br><span class="line">      <span class="keyword">int</span> last = x;</span><br><span class="line">      x = (<span class="keyword">int</span>)((<span class="keyword">long</span> <span class="keyword">long</span>)last * last % a);</span><br><span class="line">      <span class="keyword">if</span> ((x == <span class="number">1</span>) &amp;&amp; (last != <span class="number">1</span>) &amp;&amp; (last != a - <span class="number">1</span>)) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (x != <span class="number">1</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="poj3641"><a href="#poj3641" class="headerlink" title="poj3641"></a>poj3641</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;assert.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">my_exp</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> a, <span class="keyword">long</span> <span class="keyword">long</span> b, <span class="keyword">long</span> <span class="keyword">long</span> m)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">MR</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> a)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> p, a;</span><br><span class="line"><span class="keyword">int</span> num[] = &#123;<span class="number">2</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">11</span>, <span class="number">13</span>, <span class="number">17</span>, <span class="number">19</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">while</span> (~<span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;p, &amp;a)) &#123;</span><br><span class="line">    <span class="keyword">if</span> ((p == <span class="number">0</span>) &amp;&amp; (a == <span class="number">0</span>)) <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">if</span> (my_exp(a, p, p) == a &amp;&amp; MR(p) == <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;yes\n&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;no\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">my_exp</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> a, <span class="keyword">long</span> <span class="keyword">long</span> b, <span class="keyword">long</span> <span class="keyword">long</span> m)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">long</span> <span class="keyword">long</span> ans = <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">while</span> (b) &#123;</span><br><span class="line">    <span class="keyword">if</span> (b &amp; <span class="number">1</span>) &#123;</span><br><span class="line">      ans = ans * a % m;</span><br><span class="line">    &#125;</span><br><span class="line">    a = a * a % m;</span><br><span class="line">    b &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">MR</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (a == <span class="number">1</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  <span class="comment">// a - 1 = 2^t * u</span></span><br><span class="line">  <span class="keyword">long</span> <span class="keyword">long</span> u = a - <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">int</span> t = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span> (u % <span class="number">2</span> == <span class="number">0</span>) &#123;</span><br><span class="line">    u /= <span class="number">2</span>;</span><br><span class="line">    t ++;</span><br><span class="line">  &#125;</span><br><span class="line">  assert(u % <span class="number">2</span> == <span class="number">1</span>);</span><br><span class="line">  <span class="comment">// witness</span></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; (<span class="keyword">int</span>)(<span class="keyword">sizeof</span>(num)/<span class="keyword">sizeof</span>(<span class="keyword">int</span>)); i ++) &#123;</span><br><span class="line">    <span class="keyword">if</span> (a == num[i]) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> x = my_exp(num[i], u, a);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; t; j ++) &#123;</span><br><span class="line">      <span class="keyword">long</span> <span class="keyword">long</span> last = x;</span><br><span class="line">      x = x * x % a;</span><br><span class="line">      <span class="keyword">if</span> (x == <span class="number">1</span> &amp;&amp; last != <span class="number">1</span> &amp;&amp; last != a - <span class="number">1</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (x != <span class="number">1</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="hdoj2138"><a href="#hdoj2138" class="headerlink" title="hdoj2138"></a>hdoj2138</h3><blockquote><p>多组cases</p></blockquote><h2 id="KMP"><a href="#KMP" class="headerlink" title="KMP"></a>KMP</h2><h3 id="p3375"><a href="#p3375" class="headerlink" title="p3375"></a>p3375</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;assert.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN = <span class="number">1000001</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXM = <span class="number">1000001</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> next[MAXM];</span><br><span class="line"><span class="keyword">char</span> s1[MAXN];</span><br><span class="line"><span class="keyword">char</span> s2[MAXM];</span><br><span class="line"><span class="keyword">int</span> s1_len, s2_len;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pre</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">kmp</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">&quot;%s%s&quot;</span>, s1, s2);</span><br><span class="line">  pre();</span><br><span class="line">  kmp();</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; s2_len; i ++) &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d%c&quot;</span>, next[i], i == s2_len - <span class="number">1</span> ? <span class="string">&#x27;\n&#x27;</span> : <span class="string">&#x27; &#x27;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pre</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  s2_len = <span class="built_in">strlen</span>(s2);</span><br><span class="line">  <span class="keyword">int</span> len = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">int</span> i = <span class="number">1</span>;</span><br><span class="line">  next[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span> (i &lt; s2_len) &#123;</span><br><span class="line">    <span class="keyword">if</span> (s2[i] == s2[len]) &#123;<span class="comment">// 增加长度</span></span><br><span class="line">      len ++;</span><br><span class="line">      next[i] = len;</span><br><span class="line">      i ++;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">while</span> (len &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        len = next[len - <span class="number">1</span>];</span><br><span class="line">        <span class="keyword">if</span> (s2[i] == s2[len]) &#123;</span><br><span class="line">          len ++;</span><br><span class="line">          next[i] = len;</span><br><span class="line">          i ++;</span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (len == <span class="number">0</span>) &#123;<span class="comment">// 没有找到匹配</span></span><br><span class="line">        next[i] = len;</span><br><span class="line">        i ++;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">kmp</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  s1_len = <span class="built_in">strlen</span>(s1);</span><br><span class="line">  <span class="keyword">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span> (i &lt; s1_len) &#123;</span><br><span class="line">    <span class="keyword">if</span> (s1[i] == s2[j]) &#123;</span><br><span class="line">      i ++;</span><br><span class="line">      j ++;</span><br><span class="line">      <span class="keyword">if</span> (j == s2_len) &#123;<span class="comment">// 找到匹配</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, i + <span class="number">1</span> - s2_len);</span><br><span class="line">        j = next[j - <span class="number">1</span>];</span><br><span class="line">      &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">int</span> found = <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">while</span> (j &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        j = next[j - <span class="number">1</span>];</span><br><span class="line">        <span class="keyword">if</span> (s1[i] == s2[j]) &#123;</span><br><span class="line">          i ++;</span><br><span class="line">          j ++;</span><br><span class="line">          <span class="keyword">if</span> (j == s2_len) &#123;<span class="comment">// 找到匹配</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, i);</span><br><span class="line">            j = next[j - <span class="number">1</span>];</span><br><span class="line">            found = <span class="number">1</span>;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (j == <span class="number">0</span> &amp;&amp; found == <span class="number">0</span>) &#123;</span><br><span class="line">        i ++;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="poj3461"><a href="#poj3461" class="headerlink" title="poj3461"></a>poj3461</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;assert.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN = <span class="number">1000010</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> W[MAXN];</span><br><span class="line"><span class="keyword">char</span> T[MAXN];</span><br><span class="line"><span class="keyword">int</span> next[MAXN];</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">int</span> wlen, tlen;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">prefix</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">kmp</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">  <span class="keyword">while</span> (n --) &#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s%s&quot;</span>, W, T);</span><br><span class="line">    prefix();</span><br><span class="line">    kmp();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">prefix</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  wlen = <span class="built_in">strlen</span>(W);</span><br><span class="line">  <span class="keyword">int</span> i = <span class="number">1</span>, j = <span class="number">0</span>;</span><br><span class="line">  next[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span> (i &lt; wlen) &#123;</span><br><span class="line">    <span class="keyword">while</span> (j &gt; <span class="number">0</span> &amp;&amp; W[j] != W[i]) j = next[j - <span class="number">1</span>];</span><br><span class="line">    <span class="keyword">if</span> (W[j] == W[i]) &#123;</span><br><span class="line">      j ++;</span><br><span class="line">      next[i] = j;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      next[i] = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    i ++;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">kmp</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  tlen = <span class="built_in">strlen</span>(T);</span><br><span class="line">  <span class="keyword">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span> (i &lt; tlen) &#123;</span><br><span class="line">    <span class="keyword">while</span> (j &gt; <span class="number">0</span> &amp;&amp; W[j] != T[i]) &#123;</span><br><span class="line">      j = next[j - <span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (W[j] == T[i]) j ++;</span><br><span class="line">    <span class="keyword">if</span> (j == wlen) &#123;</span><br><span class="line">      ans ++;</span><br><span class="line">      j = next[j - <span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    i ++;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, ans);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 问题求解 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>数理逻辑复习</title>
      <link href="/2019/06/09/%E6%95%B0%E7%90%86%E9%80%BB%E8%BE%91%E5%A4%8D%E4%B9%A0/"/>
      <url>/2019/06/09/%E6%95%B0%E7%90%86%E9%80%BB%E8%BE%91%E5%A4%8D%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<blockquote><p>搬运自<a href="https://blog.zhengzangw.com/">Fermat</a></p></blockquote><h1 id="Propositional-Logic-PL"><a href="#Propositional-Logic-PL" class="headerlink" title="Propositional Logic (PL)"></a>Propositional Logic (PL)</h1><h2 id="语言"><a href="#语言" class="headerlink" title="语言"></a>语言</h2><ul><li>字母表:命题符+联结词+辅助符<ul><li>命题符:$\text{PS}$ (propositional symbol):${P_n|n\in\mathbb{N}}$</li></ul></li><li>命题集 $\text{PROP}$ (proposition):为函数 $C_{\neg},C_{*}$ 下 $PS$ 的归纳闭包<ul><li>$C_{\neg}(A)=(\neg A),C_{*}(A,B)=(A*B),*\in{\vee,\wedge,\rightarrow}$</li></ul></li></ul><h3 id="定理"><a href="#定理" class="headerlink" title="定理"></a>定理</h3><ul><li>括号引理:$A$为命题,则$A$中左右括号个数相等</li><li>构造序列:$A\in PROP\iff \exists A_0,\cdots,A_n,n\in\mathbb{N},A=A_n$ 且对于任意的 $A_i,i\leq n$ 至少满足下列三条之一<ul><li>$A_i\in PS$</li><li>$\exists k &lt; i,A_i=A_k$</li><li>$\exists k,l &lt; i, A_i=(A_k*A_l)$</li></ul></li><li>结构归纳:事实上是对$A$的构造长度作归纳,是自然数上的归纳<ul><li>数学归纳法:<ul><li>Basis</li><li>I.H.</li><li>Ind. Step</li></ul></li></ul></li></ul><h2 id="语义"><a href="#语义" class="headerlink" title="语义"></a>语义</h2><ul><li>真值集$B={T,F}$<ul><li>$\neg:H_\neg:B\rightarrow B$</li><li>$*:H_{*}:B^2\rightarrow B$s</li></ul></li><li>赋值(模型):函数$v:\text{PS}\rightarrow B$</li><li>命题的解释:函数$\hat v:\text{PROP}\rightarrow B$<ul><li>$\hat v(P_n)=v(P_n),n\in \mathbb{N}$</li><li>$\hat v(\neg A)=H_\neg(\hat v(A))$</li><li>$\hat v(A*B)=H_\neg(\hat v(A),\hat v(B))$</li><li>$FV$(free variable):$FV(A)=${$P\in PS|P$出现在$A$中}</li></ul></li><li>满足:<ul><li>$v\vDash \phi$(等价于$\hat v(A)=T$)</li><li>$v\vDash P\iff v(P)=T$</li><li>$v\vDash \neg \phi \iff v\not\vDash \phi$</li><li>$v\vDash \phi_1 \wedge/\vee \phi_2\iff v\vDash \phi_1 \text{and/or}\ \phi_2$</li><li>$v\vDash \phi_1 \rightarrow \phi_2\iff v\not\vDash\phi_1\ \text{or}\ v\vDash\phi_2$</li><li>tautology:$\vDash\phi\iff\forall v:v\vDash\phi$</li><li>可满足:$\exists v,v\vDash A$</li><li>语义结论:$\Gamma\subset PROP,\Gamma\vDash A\iff\forall v$有$\forall B\in\Gamma,\hat v(B)=T$则$\hat v(A)=T$</li></ul></li></ul><h3 id="定理-1"><a href="#定理-1" class="headerlink" title="定理"></a>定理</h3><ul><li><p>$v\upharpoonright FV(A)$:$v$的限制</p><ul><li>$v_1\upharpoonright FV(A)=v_2\upharpoonright FV(A)$则$\hat v_1(A)=\hat v_2(A)$</li></ul></li><li><p>$n$元真值函数:$A\in \text{PROP}, FV(A)={Q_1,\cdots,Q_n},H_A:B^n\rightarrow B,\forall (a_1,\cdots,a_n)\in B^n, H_A(a_1,\cdots,a_n)=\hat v(A),v$满足$v(Q_i)=a_i(1\leq i\leq n)$.$H_A$为由$A$定义的真值函数</p></li><li><p>析合范式($\vee\wedge-nf$):$A$呈形$\bigvee_{i=1}^m(\bigwedge_{k=1}^nP_{i,k}),P_{i,k}$为命题符或命题符之否定</p><ul><li>$f:B^n\rightarrow B$,存在析合范式$A$,$f=H_A$</li></ul></li><li><p>合析范式($\wedge\vee-nf$):$A$呈形$\bigwedge_{j=1}^l(\bigvee_{k=1}^nQ_{j,k})$</p><ul><li>$f:B^n\rightarrow B$,存在合析范式$A$,$f=H_A$</li></ul></li><li><p>求析合范式,合析范式</p></li><li><p>逻辑等价:$A\simeq B$指$\forall v,v\vDash A$ iff $v\vDash B$</p></li><li><p>任何命题均有逻辑等价的析合范式/合析范式</p></li><li><p>联结词的函数完全组</p><ul><li>$\{\neg,\wedge,\vee\},\{\neg,\wedge\},\{\neg,\vee\},\{\neg,\rightarrow\}$</li></ul></li></ul><h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><h3 id="自然推理系统"><a href="#自然推理系统" class="headerlink" title="自然推理系统"></a>自然推理系统</h3><ul><li><p>sequent:二元组$(\Gamma,\Delta)$,记为$\Gamma\vdash\Delta$,$\Gamma,\Delta$为命题的有穷集合.$\Gamma$为前件,$\Delta$为后件</p></li><li><p>公理:$\Gamma,A,\Delta\vdash\Lambda,A,\Theta$</p></li><li><p>规则:</p><ul><li>$\neg L:\dfrac{\Gamma,\Delta\vdash\Lambda,A}{\Gamma,\neg A,\Delta\vdash\Lambda}$</li><li>$\neg R$</li><li>$\vee L$</li><li>$\vee R$</li><li>$\wedge L$</li><li>$\wedge R$</li><li>$\rightarrow L: \dfrac{\Gamma,\Delta,\Gamma\ \Gamma,B,\Delta\vdash\Lambda}{\Gamma,A\rightarrow B,\Delta\Lambda}$</li><li>$\rightarrow R$</li><li>$Cut:\dfrac{\Gamma\vdash\Lambda,A\ \Delta,A\vdash\Theta}{\Gamma,\Delta\vdash\Lambda,\Theta}$</li></ul></li><li><p>反例:存在赋值$v$,$v\vDash(A_1\wedge\cdots\wedge A_m)\wedge(\neg B_1\wedge\cdots B_n)$,$v$反驳$\Gamma\vdash \Delta$</p></li><li><p>valid:$\forall v,v\vdash(A_1\wedge\cdots\wedge A_n)\rightarrow(B_1\vee\cdots\vee B_n)$,$v$满足$v\vdash\Delta$或$v\vDash\Delta$</p></li><li><p>soundness:$\Gamma\vdash\Delta\Rightarrow\Gamma\vDash\Delta$</p></li><li><p>completeness:$\Gamma\vDash\Delta\Rightarrow\Gamma\vdash\Delta$</p></li><li><p>compactness:$\Gamma$的任意有穷子集可满足则$\Gamma$可满足</p></li></ul><h3 id="命题逻辑的永真推理系统-H"><a href="#命题逻辑的永真推理系统-H" class="headerlink" title="命题逻辑的永真推理系统$H$"></a>命题逻辑的永真推理系统$H$</h3><ul><li><p>公理模式</p><ul><li>A1 : $A\rightarrow B$</li><li>A2 : $(A\rightarrow(B\rightarrow C))\rightarrow(B\rightarrow(A\rightarrow C))$</li><li>A3 : $(A\rightarrow B)\rightarrow((B\rightarrow C)\rightarrow(A\rightarrow C))$</li><li>A4 : $(A\rightarrow(A\rightarrow B))\rightarrow(A\rightarrow B)$</li><li>A5 : $(A\rightarrow\neg B)\rightarrow(B\rightarrow\neg A)$</li><li>A6 : $(\neg\neg A)\rightarrow A$</li><li>A7 : $(A\wedge B)\rightarrow A$</li><li>A8 : $(A\wedge B)\rightarrow B$</li><li>A9 : $A\rightarrow(B\rightarrow(A\wedge B))$</li><li>A10: $A\rightarrow(A\vee B)$</li><li>A11: $B\rightarrow(A\vee B)$</li><li>A12: $(A\rightarrow C)\rightarrow((B\rightarrow C)\rightarrow ((A\vee B)\rightarrow C))$</li></ul></li><li><p>定理</p><ul><li>T13: $(A\rightarrow B)\rightarrow((C\rightarrow A)\rightarrow(C\rightarrow B))$</li><li>T14: $(A\rightarrow B)\rightarrow((D\rightarrow(C\rightarrow A))\rightarrow(D\rightarrow(C\rightarrow B)))$</li><li>T15: $\vdash A\rightarrow (B\rightarrow A)$</li><li>T16: $\vdash (A\rightarrow(B\rightarrow(A\wedge B)))\rightarrow(A\rightarrow(B\rightarrow A))$</li><li>T17: $\vdash (\neg A\rightarrow\neg B)\rightarrow(B\rightarrow A)$</li><li>T18: $\vdash A\rightarrow\neg\neg A$</li><li>T19: $\vdash (A\rightarrow B)\rightarrow(\neg B\rightarrow\neg A)$</li><li>T20: $\vdash A\vee\neg A$</li><li>T21: $A,\neg A\vdash\neg B$</li><li>T22: $A,\neg A\vdash B$</li><li>T23: $(B\rightarrow\neg B)\rightarrow\neg B$</li><li>T24: $\vdash(A\rightarrow (C\wedge\neg C))\rightarrow\neg A$</li><li>T25: $(B\vee A)\rightarrow(\neg A\rightarrow B)$</li><li>T26: $(A\rightarrow B)\rightarrow(B\vee\neg A)$</li><li>T27: $(A\vee B)\rightarrow(B\vee A)$</li><li>T28: $(A\rightarrow(B\rightarrow C))\rightarrow((A\wedge B)\rightarrow C)$</li><li>T29: $(C\vee A)\rightarrow((C\vee B)\rightarrow(C\vee(A\wedge B)))$</li><li>T30: $(C\vee A)\rightarrow((B\rightarrow C)\rightarrow((A\rightarrow B)\rightarrow C))$</li><li>T31: $(A\rightarrow(C\vee B))\rightarrow(C\vee(A\rightarrow B))$</li></ul></li><li><p>规则</p><ul><li>MP:$\dfrac{A\rightarrow B\qquad A}{B}$</li></ul></li><li><p>$\Gamma\vdash_H A$:$\exists P_1,\cdots,P_n=A,i\leq n$,$P_i$为$H$公理或$P_i\in\Gamma$或$\exists j,k &lt; i,P_j=(P_k\rightarrow P_i)$即$P_i$由前$P_j$和$P_k$实施MP而得</p><ul><li>$H$唯一确定,则$\Gamma\vdash A$或$\Gamma\rightarrow A$</li><li>序列$P_1,\cdots,P_n$为证明过程,$n$为证明长度</li><li>$\text{Th}(\Gamma)={A|\Gamma\vdash A}, A\in\text{Th}$为$Gamma-$定理,$\vdash A$则$A$ 为定理</li></ul></li><li><p>引理</p><ul><li>$\Gamma\vdash C\rightarrow(B\rightarrow A)$且$\Gamma\vdash C\rightarrow B$则$\Gamma\vdash C\rightarrow A$</li></ul></li><li><p>推理定理:$\Gamma,C\vdash A$则$\Gamma\vdash C\rightarrow A$</p><ul><li>$\Gamma,C=\Gamma\cup{C}$</li></ul></li><li><p>$G’$与$H$</p><ul><li>$\vdash_H A\iff\vdash A$</li><li>$\Gamma\vdash\Delta$则$\Gamma\vdash\overline{\Delta}$<ul><li>$\overline{\Delta}=\perp=(C\wedge\neg C)$if$\Delta=\emptyset$else$\bigvee_{i=1}^nB_i,\Delta={B_1,\cdots,B_n}$</li></ul></li></ul></li></ul><h1 id="First-Order-Logic"><a href="#First-Order-Logic" class="headerlink" title="First-Order-Logic"></a>First-Order-Logic</h1><h2 id="语言-1"><a href="#语言-1" class="headerlink" title="语言"></a>语言</h2><ul><li><p>字母表</p><ul><li>逻辑符集合<ul><li>变元集$V$</li><li>联结词,量词,等词,辅助词</li></ul></li><li>非逻辑符集合$\mathscr{L}$<ul><li>常元集合$\mathscr{L}_c$</li><li>函数集合$\mathscr{L}_f$,$\mu(f) &gt; 0$为$f$的元数</li><li>谓词集合$\mathscr{L}_P$,$\mu(P)\ge0$为$f$的元数</li></ul></li></ul></li><li><p>项$T$:变元符$\cup$常元符$\cup f(v_1,\cdots)$</p><ul><li>自由变元<ul><li>$\text{FV}(x)={x}$,$\text{FV}(c)={x}$</li><li>$\text{FV}(f(t_1,\cdots))=\bigcup_{i=1}^n\text{FV}(t_i)$</li></ul></li><li>闭项:$\text{FV}(t)=\emptyset$</li><li>替换:$s[\frac{t}{x}]$</li></ul></li><li><p>公式$\Psi$:${t_1\doteq t_2}\cup P(t_1,\cdots) \cup$公式在联结词,量词的组合</p><ul><li>自由变元<ul><li>$\text{FV}(t_1\doteq t_2)=\text{FV}(t_1)\cup\text{FV}t_2$</li><li>$\text{FV}(P(t_1,\cdots))=\bigcup_{i=1}^n\text{FV}(t_i)$</li><li>联结词取并</li><li>$\text{FV}(Qx.A)=FV(A)\backslash{x}$</li></ul></li><li>句子:$\text{FV}(A)=\emptyset$</li><li>替换:$A[\frac{t}{x}]$<ul><li>$(Qx.A)[\frac{t}{x}]=Qx.A$</li><li>$(Qy.A)[\frac{t}{x}]=Qy.(A[\frac{t}{x}]),y\not\in\text{FV}(t)$</li><li>$(Qy.A)[\frac{t}{x}]=Qz.(A[\frac{z}{y}][\frac{t}{x}]),y\in\text{FV}(t)$</li></ul></li></ul></li></ul><h2 id="语义-1"><a href="#语义-1" class="headerlink" title="语义"></a>语义</h2><ul><li>结构:$\mathbb{M}=(M,I)$对$\mathscr{L}$做解释<ul><li>论域$M$为非空集</li><li>$I$为定义域为$\mathscr{L}$的映射<ul><li>$c\in\mathscr{L}_c,c_{\mathbb{M}}=I(c)\in M$</li><li>$f\in\mathscr{L}_f,f_{\mathbb{M}}=I(f):M^n\rightarrow M$</li><li>$P\in\mathscr{L}_p,\mu(P) &gt; 0,P_{\mathbb{M}}=I(P)\subseteq M^n$</li><li>$P\in\mathscr{L}_p,\mu(P)=0,I(P)\in B={T,F}$</li></ul></li></ul></li><li>模型:$(\mathbb{M},\sigma)$是对一阶语言的解释<ul><li>$\sigma:V\rightarrow M$为赋值</li></ul></li><li>解释<ul><li>项:$t_{\mathbb{M}[\sigma]}\in M$<ul><li>$x_{\mathbb{M}[\sigma]}=\sigma(x)$</li><li>$c_{\mathbb{M}[\sigma]}=c_M$</li><li>$(f(t_1,\cdots))_{\mathbb{M}[\sigma]}=f_M((t_1)_{\mathbb{M}[\sigma]},\cdots)$</li></ul></li><li>公式:$A_{\mathbb{M}[\sigma]}\in{T,F}$<ul><li>排中律</li><li>联结词:同古典逻辑</li><li>$(P(t_1,\cdots))_{\mathbb{M}[\sigma]}=T\iff \langle (t_1)_{\mathbb{M}[\sigma]},\cdots,\rangle\in P_M$</li><li>$(t_1\doteq t_2)_{\mathbb{M}[\sigma]}=T\iff (t_1)_{\mathbb{M}[\sigma]}=(t_2)_{\mathbb{M}[\sigma]}$</li><li>$(\forall x.A)_{\mathbb{M}[\sigma]}=T\iff$对所有$a\in M,A_\mathbb{M}[\sigma[x:=a]]=T$</li><li>$(\exists x.A)_{\mathbb{M}[\sigma]}=T\iff$对某个$a\in M,A_\mathbb{M}[\sigma[x:=a]]=T$</li><li>$(\sigma[x_i:=a])(x_j)=a\iff i=j$,otherwise$\sigma(x_j)$</li></ul></li></ul></li><li>可满足:$A_{\mathbb{M}[\sigma]}=T,M\vDash_\sigma A$<ul><li>$M\vDash A$</li><li>$M\vDash_\sigma \Gamma$</li><li>$\vDash A$, $\vDash \Gamma$</li><li>$\Gamma\vDash A$指$\forall (M,\sigma), M\vDash_\sigma\Gamma,$则$M\vDash_\sigma A$</li><li>$\Gamma\vDash A\iff\Gamma\cup{\neg A}$不可满足</li></ul></li></ul><h3 id="Godel编码"><a href="#Godel编码" class="headerlink" title="Godel编码"></a>Godel编码</h3><ul><li>$\langle a_0,\cdots,a_n\rangle=\prod_{i=0}^nP_i^{a_i}$</li><li>$\text{ep}:\mathbb{N}^2\rightarrow\mathbb{N}$为$x$的素因子分解式中$P_n$的幂次</li><li>Godel编码: #<ul><li>Godel编码与语法对象一一对应</li></ul></li></ul><h3 id="替换定理"><a href="#替换定理" class="headerlink" title="替换定理"></a>替换定理</h3><ul><li>$(t[\frac{s}{x}])_{\mathbb{M}[\sigma]}=t_{M[\sigma[x:=s_{\mathbb{M}[\sigma]}]]}$</li><li>$(A[\frac{t}{x}])_{\mathbb{M}[\sigma]}=A_M[\sigma[x:=t_{\mathbb{M}[\sigma]}]]$</li></ul><h3 id="Hintikka集"><a href="#Hintikka集" class="headerlink" title="Hintikka集"></a>Hintikka集</h3><ul><li>公式集$\Psi$为Hintikka集指其满足以下19条<ul><li>2$\neg$,2$\rightarrow$,2$\wedge$,2$\vee$,(2$\leftrightarrow$),2$\exists$,2$\forall$,3$\doteq$,f,P</li></ul></li><li>Hintikka集可满足</li><li>T上二元关系:$s\sim t\iff s\doteq t\iff [s]=[t]$</li></ul><h2 id="语法-1"><a href="#语法-1" class="headerlink" title="语法"></a>语法</h2><h3 id="自然推理系统-1"><a href="#自然推理系统-1" class="headerlink" title="自然推理系统"></a>自然推理系统</h3><ul><li><p>公理:$\Gamma,A,\Delta\vdash\Lambda,A,\Theta$</p></li><li><p>规则:</p><ul><li>$\neg L:\dfrac{\Gamma,\Delta\vdash\Lambda,A}{\Gamma,\neg A,\Delta\vdash\Lambda}$</li><li>$\neg R$</li><li>$\vee L$</li><li>$\vee R$</li><li>$\wedge L$</li><li>$\wedge T$</li><li>$\rightarrow L: \dfrac{\Gamma,\Delta,\Gamma\quad\Gamma,B,\Delta\vdash\Lambda}{\Gamma,A\rightarrow B,\Delta\Lambda}$</li><li>$\rightarrow R$</li><li>$\forall L: \dfrac{\Gamma,A[t/x],\forall x A(x),\Delta\vdash\Lambda}{\Gamma,\forall xA(x),\Delta\vdash\Lambda}$</li><li>$\forall R: \dfrac{\Gamma\vdash,A[y/x],\Theta}{\Gamma\vdash\Lambda,\forall x A(x),\Theta}$,$y$为新变元</li><li>$\exists L:\dfrac{\Gamma,A[y/x],\Delta\vdash\Lambda}{\Gamma,\exists xA(x),\Delta\vdash\Gamma}$,$y$为新变元</li><li>$\exists R:\dfrac{\Gamma\vdash\Lambda,A[t/x],\exists xA(x),\Theta}{\Gamma\vdash\Lambda,\exists xA(x),\Theta}$</li><li>$\text{Cut}:\dfrac{\Gamma\vdash\Lambda,A\ \Delta,A\vdash\Theta}{\Gamma,\Delta\vdash\Lambda,\Theta}$</li></ul></li><li><p>Cut规则可由其它规则导出</p></li><li><p>$\Gamma\vdash \Lambda$可证:存在证明树</p></li><li><p>$A_1,\cdots,A_m\vdash B_1,\cdots,B_n\iff \wedge_{i=1}^mA_i\vdash\wedge_{i=1}^nB_i$</p></li><li><p>$\Gamma\vdash\Delta\Rightarrow \Gamma,\Theta\vdash \Delta,\Psi$</p></li><li><p>导出规则$(A(t)=A[\frac{t}{x}])$</p><ul><li>反证法:$\dfrac{\neg A,\Gamma\vdash B,\neg A,\Gamma\vdash\neg B}{\Gamma\vdash A}$</li><li>分情况:$\dfrac{A,\Gamma\vdash B\qquad\neg A,\Gamma\vdash B}{\Gamma\vdash B}$</li><li>逆否推演:$\dfrac{\Gamma\vdash A\rightarrow B}{\Gamma\vdash\neg B\rightarrow\neg A}$</li><li>矛盾规则:$\dfrac{\Gamma\vdash A\qquad\Gamma\vdash\neg A}{\Gamma\vdash B}$</li><li>MP:$\dfrac{\Gamma\vdash A\qquad\Gamma\vdash A\rightarrow B}{\Gamma\vdash B}$</li><li>三段论:$\dfrac{\Gamma\vdash A(t)\qquad\Gamma\vdash\forall x(A(x)\rightarrow B(x))}{\Gamma\vdash B(t)}$</li></ul></li><li><p>$\Gamma\vdash\Delta$有效:$\vDash(\wedge_{i=1}^nA_i)\rightarrow(\vee_{j=1}^mB_j)$</p><ul><li>${}\vdash{}$非有效</li><li>有反例即非有效</li></ul></li><li><p>除Cut外规则上矢列有效$\iff$下矢列有效</p></li><li><p>Soundness:$\Gamma\vdash\Delta$则$\Gamma\vDash\Delta$</p></li></ul><h4 id="完全性定理"><a href="#完全性定理" class="headerlink" title="完全性定理"></a>完全性定理</h4><ul><li><p>$\Gamma$为公式集</p></li><li><p>$\text{Incon}(\Gamma)$矛盾指$\Delta\vdash$</p><ul><li>$\iff\forall A$存在$\Gamma$有穷子集$\Delta,\Delta\vdash A$</li></ul></li><li><p>$\text{Con}(\Gamma)$协调指$\Gamma$不矛盾</p></li><li><p>极大协调</p><ul><li>$\text{Con}(\Gamma)$</li><li>$\text{Con}(\Delta)$且$\Gamma\subseteq\Delta$则$\Gamma=\Delta$</li><li>当且仅当<ul><li>$\text{Con}(\Gamma)$</li><li>$(\forall A)\text{Con}(\Gamma\cup{A}),A\in\Gamma$</li></ul></li><li>当且仅当<ul><li>$\text{Con}(\Gamma)$</li><li>$\forall A,A\in\Gamma\vee\neg A\in\Gamma$</li></ul></li><li>存在$\Gamma$有穷子集$\Delta\vdash A\iff A\in\Gamma$</li></ul></li><li><p>若$\Gamma$可满足,$\text{Con}(\Gamma)$;若$\text{Incon}(\Gamma)$,不可满足</p></li><li><p>$\Gamma\vdash A$,则$\text{Con}(\Gamma\cup{A})$;$G\vdash A$不可证,则$\text{Con}(\Gamma\cup {\neg A})$</p></li><li><p>Gentzen系统$Ge$为$G$加上以下三个等词公理</p><ul><li>$\vdash s\doteq s$</li><li>$s_1\doteq t_1,\cdots,s_n\doteq t_n\vdash f(s_1,\cdots,s_n)\doteq f(t_1,\cdots,t_n)$</li><li>$s_1\doteq t_1,\cdots,s_n\doteq t_n, p(s_1,\cdots,s_n)\vdash p(t_1,\cdots,t_n)$</li></ul></li><li><p>$Ge$中可证以下矢列</p><ul><li>$\vdash(s\doteq t)\rightarrow(t\doteq s)$</li><li>$\vdash(s\doteq t)\rightarrow(t\doteq u\rightarrow s\doteq u)$</li></ul></li><li><p>$\Gamma e$为以下句子集合</p><ul><li>$\forall x(x\doteq x),\forall\vec x\forall\vec y(\vec x\dot=\vec y\rightarrow f(\vec x)\doteq f(\vec y))$,这里$f$为任何函数</li><li>$\forall\vec x\forall\vec y(\vec x\doteq\vec y\rightarrow(p(\vec x)\rightarrow p(\vec y)))$,这里$p$为任何谓词</li><li>我们有$\Gamma\vdash\Delta$在$Ge$中可证$\iff\Gamma e,\Gamma\vdash\Delta$在$G$中可证</li></ul></li><li><p>Henkin集</p><ul><li>$\Gamma$极大协调</li><li>若$\exists x.A\in\Gamma$,则有项$t$使$A[\frac{t}{x}]\in\Gamma$</li></ul></li><li><p>$\text{Con}(\Phi)$,则存在$\mathscr{L’}=\mathscr{L}\cup{c_n|c\in N}$的公式集$\Psi$,使$\Psi\supseteq\Psi$且$\Psi$为$\mathscr{L’}$的Henkin集</p></li><li><p>Henkin集为Hintikka集</p></li><li><p>$\Gamma$协调则$\Gamma$可满足</p></li><li><p>Completeness:$\Gamma\vdash A\iff\Gamma\vDash A$</p></li><li><p>Compactness:若对任何$\Gamma$的有穷子集$\Delta$,$\Delta$可满足,则$\Gamma$可满足</p></li></ul><h3 id="一阶逻辑的永真推理系统-PK"><a href="#一阶逻辑的永真推理系统-PK" class="headerlink" title="一阶逻辑的永真推理系统$PK$"></a>一阶逻辑的永真推理系统$PK$</h3><ul><li><p>$A$ 的全称化:$\forall x_1\forall x_2\cdots\forall x_n.A$</p><ul><li>$n=0$即为$A$</li></ul></li><li><p>公理</p><ul><li>第一组<ul><li>A1:$A\rightarrow B$</li><li>A2:$(A\rightarrow(B\rightarrow C))\rightarrow(B\rightarrow(A\rightarrow C))$</li><li>A3:$(A\rightarrow B)\rightarrow((B\rightarrow C)\rightarrow(A\rightarrow C))$</li><li>A4:$(A\rightarrow(A\rightarrow B))\rightarrow(A\rightarrow B)$</li><li>A5:$(A\rightarrow\neg B)\rightarrow(B\rightarrow\neg A)$</li><li>A6:$(\neg\neg A)\rightarrow A$</li><li>A7:$(A\wedge B)\rightarrow A$</li><li>A8:$(A\wedge B)\rightarrow B$</li><li>A9:$A\rightarrow(B\rightarrow(A\wedge B))$</li><li>A10:$A\rightarrow(A\vee B)$</li><li>A11:$B\rightarrow(A\vee B)$</li><li>A12:$(A\rightarrow C)\rightarrow((B\rightarrow C)\rightarrow ((A\vee B)\rightarrow C))$</li></ul></li><li>第二组<ul><li>A13:$\forall A\rightarrow A[\frac{t}{x}]$</li><li>A14:$A[\frac{t}{x}]\rightarrow\exists xA$</li><li>A15:$A\rightarrow\forall xA,x\not\in\text{FV}(A)$</li><li>A16:$\exists xA\rightarrow A,x\not\in\text{FV}(A)$</li><li>A17:$\forall(A\rightarrow B)\rightarrow(\forall xA\rightarrow\forall xB)$</li><li>A18:$\exists(A\rightarrow B)\rightarrow(\exists A\rightarrow\exists B)$</li></ul></li><li>第三组等词定理<ul><li>A19:$x\dot=x$</li><li>A20:$(x_1\dot=y_1)\rightarrow\cdots((x_n\dot=y_n)\rightarrow(f(x_1,\cdots,x_n)\dot=f(y_1,\cdots,y_n))$</li><li>A21:$(x_1\dot=y_1)\rightarrow\cdots((x_n\dot=y_n)\rightarrow(P(x_1,\cdots,x_n)\dot=P(y_1,\cdots,y_n))$</li></ul></li><li>第四组:前面各组公理的全称化</li></ul></li><li><p>规则:MP:$\dfrac{A\rightarrow B\qquad A}{B}$</p></li><li><p>$\Gamma\vdash_{\text{PK}}A$指存在序列$A_1,\cdots,A_n=A$,$i\leq n$时满足以下任一条</p><ul><li>$A_i$为公理</li><li>$A_i\in\Gamma$</li><li>$\exists j,k &lt; i,A_j=(A_k\rightarrow A_i)$</li></ul></li><li><p>定理:$\Gamma,C\vdash A$则$\Gamma\vdash C\rightarrow A$</p></li><li><p>泛化性定理:$x\not\in\text{FV}(\Gamma)$,若$\Gamma\vdash A$则$\Gamma\vdash\forall xA$</p></li><li><p>上层定理</p><ul><li>常元$c$不在$\Gamma,A$中出现,若$\Gamma\vdash A[\frac{c}{x}]$则$\Gamma\vdash\forall xA$</li><li>常元$c$不在$\Gamma,A,B$中出现且$x\not\in\text{FV}(B)$,若$\Gamma,A[\frac{c}{x}]\vdash B$则$\Gamma,\exists xA\vdash B$</li><li>$\vdash\forall x.A\leftrightarrow\neg\exists x\neg A$</li><li>$\vdash\exists x.A\leftrightarrow\neg\forall x\neg A$</li></ul></li><li><p>$\vdash A$在$G$中可证$\iff A$在PK中可证</p></li></ul><h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><h3 id="初等算术语言-mathcal-A"><a href="#初等算术语言-mathcal-A" class="headerlink" title="初等算术语言$\mathcal{A}$"></a>初等算术语言$\mathcal{A}$</h3><p>初等算术的标准模型</p><h3 id="群论语言-mathcal-B"><a href="#群论语言-mathcal-B" class="headerlink" title="群论语言$\mathcal{B}$"></a>群论语言$\mathcal{B}$</h3><h3 id="集合论"><a href="#集合论" class="headerlink" title="集合论"></a>集合论</h3><h4 id="Cantor集合论"><a href="#Cantor集合论" class="headerlink" title="Cantor集合论"></a>Cantor集合论</h4><ul><li>外延原则:$A=B\leftrightarrow\forall x(x\in A\rightarrow x\in B)$</li><li>概括原则:$\forall P,\exists S, a\in S\rightarrow P(a),$记为$S={x|P(x)}$</li><li>Russell悖论:$P(x)=x\not\in x$</li></ul><h4 id="公理集合论"><a href="#公理集合论" class="headerlink" title="公理集合论"></a>公理集合论</h4><ul><li><p>集合论语言</p><ul><li>谓词$\in$(2)</li><li>常元$\emptyset$</li><li>函数符<ul><li>对偶函数符,(2)</li><li>幂集函数符$\mathcal{P}$(1)</li><li>并集函数符$\cup$(1)</li></ul></li><li>变元符$x,y,z,A,B,C$</li></ul></li><li><p>约定</p><ul><li>$A\subseteq B$即$\forall x(x\in A\rightarrow x\in B)$</li><li>${a}$即${a,a}$</li><li>$a^+$即$a\cup{a}$</li><li>$A\cup B$即${x|x\in A\vee x\in B}$</li><li>$(\forall x\in A)\phi$即$\forall x(x\in A\rightarrow\phi)$</li><li>$(\exists x\in A)\phi$即$\exists x(x\in A\wedge\phi)$</li></ul></li></ul><ul><li><p>ZF公理</p><ul><li><p>外延性公理$\forall A\forall B(\forall x(x\in A\leftrightarrow x\in B)\rightarrow A=B)$</p></li><li><p>空集公理$\exists B\forall x(\neg(x\in B))$</p><ul><li>若有常元$\emptyset$可记为$\forall x(x\not\in \emptyset)$</li></ul></li><li><p>对偶公理$\forall u\forall v\exists B\exists x(x\in B\leftrightarrow(x=u\vee x=v))$</p><ul><li>若有函数,则可记为$\forall u\forall v\exists x(x\in{u,v}\leftrightarrow(x=u\vee x=v))$</li></ul></li><li><p>$\forall A\exists B\forall x(x\in B\leftrightarrow(\exists b\in A)(x\in b))$</p><ul><li>若有函数$\cup$则可记为$\forall A\exists B\forall x(x\in B\leftrightarrow(\exists b\in A)(x\in b))$</li></ul></li><li><p>幂集公理$\forall a\exists B\forall x(x\in B\leftrightarrow x\subseteq a)$</p><ul><li>若有函数$\mathcal{P}$则可记为$\forall x(x\in \mathcal{P}(a)\leftrightarrow x\subseteq a)$</li></ul></li><li><p>子集公理S-公式$\phi$,$\text{FV}(\phi)\subseteq{x_1,\cdots,x_k,x},B\not\in\text{FV}(\phi)$,有$\forall\vec x\forall C\exists B\forall x(x\in B\leftrightarrow(x\in C\wedge\phi))$</p><ul><li>以Cantor记号记:$B={x\in C|\phi}$</li><li>避免Russell悖论</li></ul></li><li><p>无穷公理:$\exists A(\emptyset\in A\wedge(\forall a\in A)(a^+\in A))$</p><ul><li>不唯一</li><li>$\text{Ind}(A)=\emptyset\in A\wedge(\forall a\in A)(a^+\in A)$,满足者称归纳集</li><li>$\mathbb{N}={x|x\in A\wedge\forall B(\text{Ind(B)}\rightarrow x\in B)}$</li><li>Peano算术模型:$(\mathbb{N},0,\text{Suc})$<ul><li>Peano 公理<ul><li>$(e\in S)$</li><li>$(\forall a\in S)(f(a)\in S)$</li><li>$(\forall b\in S)(\forall c\in S)(f(b)=f(c)\to b=c)$</li><li>$(\forall a\in S)(f(a)\not=e)$</li><li>$(\forall A\subseteq S)(((e\in A)\wedge(\forall a\in A)(f(a)\in A))\to(A=S))$</li></ul></li></ul></li></ul></li></ul></li><li><p>ZFC:ZF+AC</p><ul><li>选择公理(AC):$\forall A\exists\tau((\tau:P(A)-{\emptyset}\rightarrow A)\wedge(\forall B\in (P(A)-{\emptyset}))(\tau(B)\in B))$</li><li>Zorn 引理:设$S$为偏序集,$S$中每个链皆有界,则$S$有极大元<ul><li>等价于选择公理</li></ul></li><li>独立性结果<ul><li>$\text{con}(ZF)\Rightarrow\text{con}(ZF+AC)$</li><li>$\text{con}(ZF)\Rightarrow\text{con}(ZF+\neg AC)$</li></ul></li></ul></li></ul><h1 id="Herbrand定理"><a href="#Herbrand定理" class="headerlink" title="Herbrand定理"></a>Herbrand定理</h1><ul><li><p>前束范式:一阶语言的公式呈形$Q_1x_1.(Q_2x_2.(\cdots,Q_nx_n.(B)))$,$Q_i\in{\forall,\exists}(i\leq n),B$中无量词</p><ul><li>记为$Q_1x_1\cdots Q_nx_n.B$</li><li>$Q^*$ 为$Q$的对偶</li></ul></li><li><p>命题</p><ul><li>$x\not\in\text{FV}(B)$,则$\vdash Qx.B\leftrightarrow B$</li><li>$y$ 为新变元,$\vdash Qx.B\leftrightarrow Qy.B[\frac{y}{x}]$</li><li>$\vdash\neg\forall x.A\leftrightarrow\exists x.\neg A.$</li><li>$\vdash\neg\exists x.A\leftrightarrow\forall x.\neg A.$</li><li>$x\not\in\text{FV}(B)$,则$\vdash (Qx.A\cdot B)\leftrightarrow Qx.(A\cdot B)$</li></ul></li></ul><ul><li><p>$\forall A,\exists B,\vdash A\leftrightarrow Q_1x_1\cdots Q_nx_n.B$,$x_1,\cdots,x_n$互异且$B$中无量词</p></li><li><p>Skolem范式:前束范式的Skolem范式$A^s$归纳定义如下:</p><ul><li>若$A$中无量词,则$A^s=A$</li><li>$(\forall x.A)^s=\forall x.(A^s)$</li><li>若$\text{FV}(\exists x.A)=\emptyset$,则$(\exists x.A)^s$为$(A[\frac{c}{x}])^s$,$c$ 为新常元</li><li>若$\text{FV}(\exists x.A)={x_1,\cdots,x_n}$,则$(\exists x.A)^s=(A[\frac{f(x_1,\cdots,x_n)}{x}])^s$,$f$为$n$元新函数</li></ul></li><li><p>$A$为闭前束范式(即无自由变元),$A$可满足$\iff A^s$可满足</p></li><li><p>Herbrand域$H_A$</p><ul><li>$A$中无常元,则$H_0={c_0},c_0\in\mathscr{L}_c$</li><li>$A$中有常元,则$H_0=${$c|c\in\mathscr{L}_{c}$且出现在$A$中}</li><li>$H_{n+1}=H_n\cup${$f(t_1,\cdots,t_m)|f$为$A$中的$m$元函数且$t_1,\cdots,t_m\in H_n$}</li><li>$H_A=\cup{H_n|n\in N}$<ul><li>其中元素为$\mathscr{L}$-闭项</li></ul></li></ul></li><li><p>$A$对应于$\mathbb{M}$的Herbrand结构$\mathbb{H}_A=(H_A,I_A)$  </p><ul><li>$I_A(c)=c$若$c\in H_A$否则$c_0$</li><li>$I_A(f)(t_1,\cdots,t_m)=f(t_1,\cdots,t_m)$若$f$出现在$A$中否则$c_0$</li><li>$I_A(P)={ &lt; t_1,\cdots,t_m &gt; \in H_A^m|\mathbb{M}\vDash P(t_1,\cdots,t_m)}$</li></ul></li><li><p>$\mathscr{L}$-闭公式$A$为Skolem范式,$\mathbb{M}\vDash A$则$\mathbb{H}_A\vDash A$</p><ul><li>$\mathscr{L}$-闭公式$A$为Skolem范式,$A$可满足$\iff A$在某个Herbrand结构中满足</li></ul></li><li><p>Herbrand定理:$\mathscr{L}$-闭公式$A$为Skolem范式$\forall x_1\cdots\forall x_n.B$,$B$中无量词,令$\Gamma={B[\frac{t_1}{x_1}]\cdots[\frac{t_n}{x_n}]|t_1,\cdots,t_n\in H_A}$,$A$可满足$\iff\Gamma$可满足</p></li></ul><h1 id="模态语言"><a href="#模态语言" class="headerlink" title="模态语言"></a>模态语言</h1><table><thead><tr><th align="center">模式</th><th align="center">分支</th><th align="center">应用</th></tr></thead><tbody><tr><td align="center">可能与必然</td><td align="center">基本模态逻辑</td><td align="center"></td></tr><tr><td align="center">过去与将来</td><td align="center">时态逻辑(temporal)</td><td align="center">软硬件系统形式化验证</td></tr><tr><td align="center">知道与相信</td><td align="center">认知逻辑(epistemic)</td><td align="center">知识表示</td></tr><tr><td align="center">义务与允许</td><td align="center">道义逻辑(deontic)</td><td align="center">分布式智能系统进行协同与控制的规范系统</td></tr></tbody></table><ul><li><p>模态逻辑特征</p><ul><li>模态逻辑是用于描述关系结构的简单而富于表达力的语言</li><li>模态语言为关系结构提供了一种内部和局部的视角</li><li>模态逻辑并不是孤立的形式化系统</li></ul></li><li><p>关系结构$\mathfrak{F}=(W,R_1,\cdots,R_n)$,$W$为domain/universe,$R_i$为$\mathfrak{F}$上的关系</p><ul><li>$W$中的元素可以为不同名称如点,状态,世界,时间,状况等.关系结构通常可以表示为简单图形</li><li>严格偏序<ul><li>全序</li></ul></li><li>标注转换系统(LTS)$(W,{R_a|a\in A}),a\in A,R_a\subseteq W\times W$</li><li>时间的内在结构为全序集$(S, &lt; )$<ul><li>假设:<br>1.时间离散<br>2.有一个没有前驱的时刻<br>3.有无穷后续时刻进入未来</li></ul></li></ul></li></ul><h2 id="基本模态逻辑"><a href="#基本模态逻辑" class="headerlink" title="基本模态逻辑"></a>基本模态逻辑</h2><h3 id="语言-2"><a href="#语言-2" class="headerlink" title="语言"></a>语言</h3><ul><li>命题符集合$\Phi$</li><li>一元模态算子$\diamonds$<ul><li>读作<code>可能</code></li><li>对偶算子$\square\varphi:=\neg\diamonds\neg\varphi$<ul><li>读作<code>不可能不/必然</code></li></ul></li><li>$\varphi\wedge\psi:=\neg(\neg\varphi\vee\neg\psi)$</li><li>$\top:=\neg\perp$</li></ul></li></ul><ul><li>合式公式(well-formed formula) $\varphi::=p|\perp|\neg\varphi|\varphi\vee\phi|\diamonds\varphi$</li><li>部分合式公式<ul><li>$K:\square(\varphi\rightarrow\phi)\rightarrow(\square\varphi\rightarrow\square\phi)$</li><li>$T:\square\varphi\rightarrow\phi$</li><li>$4:\square\phi\rightarrow\square\square\phi$</li><li>$B:\varphi\rightarrow\square\diamonds\varphi$</li><li>$D:\square\varphi\rightarrow\diamonds\varphi$</li><li>$5:\diamonds\varphi\rightarrow\square\diamonds\phi$</li></ul></li></ul><h3 id="语义-2"><a href="#语义-2" class="headerlink" title="语义"></a>语义</h3><ul><li><p>Kripke模型:$\mathfrak{M}=(W,R,L)$</p><ul><li>$L:W\rightarrow 2^\Phi$为标记函数,把$W$每个点标记上再该点为真的命题符</li><li>状态 $\omega\in W$</li></ul></li><li><p>$\mathfrak{M},\omega\Vdash\varphi$基本模态公式$\varphi$在状态$\omega$被满足</p><ul><li>$\mathfrak{M},\omega\Vdash p,p\in\Phi\iff p\in L(W)$</li><li>$\mathfrak{M},\omega\Vdash \perp$从不成立</li><li>$\mathfrak{M},\omega\Vdash\neg\varphi\iff \mathfrak{M},\omega\Vdash\phi$不成立</li><li>$\mathfrak{M},\omega\Vdash\varphi\vee\psi\iff\mathfrak{M},\omega\Vdash\varphi$或$\mathfrak{M},\omega\Vdash\psi$</li><li>$\mathfrak{M},\omega\Vdash\diamond\varphi\iff$存在$v\in W,Rwv,\mathfrak{M},\omega\Vdash\varphi$<ul><li>$\mathfrak{M},\omega\Vdash\square\varphi\iff$对于任意的$v\in W,Rw v,\mathfrak{M},\omega\Vdash\varphi$</li></ul></li></ul></li><li><p>盲状态:不能到达任意后续状态的状态,$\square\varphi$空真</p></li><li><p>$\mathfrak{F},\omega\Vdash\varphi$:任意$L$,$\mathfrak{M},\omega\Vdash\varphi$</p></li><li><p>$\mathfrak{F}\Vdash\varphi$:任意的$\omega$, $\mathfrak{F},\omega\Vdash\varphi$</p></li><li><p>$\mathbb{F}\Vdash\varphi$:任意的$\mathfrak{F}\in\mathbb{F},\mathfrak{F}\Vdash\varphi$</p><ul><li>$\Lambda_\mathbb{F}$:$\mathbb{F}$的逻辑,对$\mathbb{F}$有效的所有公式的集合</li></ul></li><li><p>$\Vdash\varphi$:任意的$\mathbb{F}$,$\mathbb{F}\Vdash\varphi$</p></li></ul><h2 id="线性时间时态逻辑"><a href="#线性时间时态逻辑" class="headerlink" title="线性时间时态逻辑"></a>线性时间时态逻辑</h2><h3 id="语言-3"><a href="#语言-3" class="headerlink" title="语言"></a>语言</h3><ul><li><p>线性时间时态算子</p><ul><li>$\mathcal{U}$:until</li><li>$\bigcirc$:next-time</li></ul></li><li><p>常用时态算子</p><ul><li>$\diamond\phi:=\top\mathcal{U}\phi$:Finally</li><li>$\square\phi:=\neg\diamond\neg\phi$:Globally</li><li>$\overset{\infty}{\diamond}\phi:=\square\diamond\phi$:Infinitely Often</li><li>$\overset{\infty}{\square}\phi:=\diamond\square\phi$:Almost Everywhere</li><li>$\phi_1\mathcal{R}\phi_2:=\neg(\neg\phi_1\mathcal{U}\neg\phi_2)$</li></ul></li><li><p>$\psi::=p|\perp|\neg\psi|\psi_1\vee\psi_2|\bigcirc|\psi_1\mathcal{U}\psi_2,p\in\Phi$</p></li></ul><h3 id="语义-3"><a href="#语义-3" class="headerlink" title="语义"></a>语义</h3><ul><li><p>模型$\mathfrak{M}=(S,x,L)$</p><ul><li>$S$: 非空状态集</li><li>$x:N\rightarrow S$:状态的无穷序列</li><li>$L:W\rightarrow2^\Phi$</li></ul></li><li><p>$\mathfrak{M},x\vDash\psi$:在模型$\mathfrak{M}$的时间线上,公式$\psi$为真(Linear-time Temporal Logic (LTL))</p><ul><li>$\mathfrak{M},x\vDash p,p\in\Psi\iff p\in L(s_0)$</li><li>$\mathfrak{M},x\vDash\perp$从不成立</li><li>$\mathfrak{M},x\vDash \neg\psi\iff\mathfrak{M},x\vDash \psi$不成立</li><li>$\mathfrak{M},x\vDash \psi_1\vee\psi_2\iff\mathfrak{M},x\vDash \psi_1$或$\mathfrak{M},x\vDash \psi_2$</li><li>$\mathfrak{M},x\vDash \psi_1\mathcal{U}\psi_2\iff\exists j(\mathfrak{M},x^j\vDash \psi_2$且$\forall k &lt; j(\mathfrak{M},x^k\vDash \psi_1))$</li><li>$\mathfrak{M},x\vDash\bigcirc\psi\iff\mathfrak{M},x^1\vDash\psi$<ul><li>$x^i$表示$s$的后缀$s_i,s_{i+1},\cdots$</li></ul></li></ul></li></ul><h2 id="分支时间时态逻辑"><a href="#分支时间时态逻辑" class="headerlink" title="分支时间时态逻辑"></a>分支时间时态逻辑</h2><h3 id="语言-4"><a href="#语言-4" class="headerlink" title="语言"></a>语言</h3><ul><li><p>命题符$\Psi$</p></li><li><p>线性时态算子</p></li><li><p>路径选择算子$\exists$:for some futures</p><ul><li>$\forall\psi:=\neg\exists\neg\psi$:for all futures</li></ul></li><li><p>路径公式:$\psi::=\phi|\psi_1\vee\psi_2|\neg\psi|\bigcirc\psi|\psi_1\mathcal{U}\psi_2$</p></li><li><p>状态公式:$\varphi::=p|\perp|\phi_1\vee\phi_2|\neg\varphi|\exists\psi$</p></li></ul><h4 id="子语言"><a href="#子语言" class="headerlink" title="子语言"></a>子语言</h4><ul><li><p>路径公式:$\psi::=\bigcirc\varphi,\varphi_1\mathcal{U}\varphi_2$</p><ul><li>不允许线性时态算子的布尔组合和嵌套</li><li>状态公式不变</li></ul></li><li><p>等价于:</p><ul><li>基本时态算子:$\exists\bigcirc,\exists\square,\exists\mathcal{U}$</li><li>$\forall\bigcirc\varphi:=\neg\exists\bigcirc\neg\varphi$</li><li>$\forall\square\varphi:=\neg\exists\diamond\neg\varphi$</li><li>$\forall\diamond\varphi:=\neg\exists\square\neg\varphi$</li><li>$\exists\diamond\varphi:=\exists(\perp\mathcal{U}\varphi)$</li><li>$\forall(\varphi_1\mathcal{U}\varphi_2):=\neg\exists(\neg\varphi_2\mathcal{U}\neg\varphi_2)\wedge\neg\exists\square\neg\varphi_2$</li></ul></li><li><p>$\varphi::=p|\perp|\neg\varphi|\varphi_1\vee\varphi_2|\exists\bigcirc\varphi|\exists\square\varphi|\exists(\varphi_1\mathcal{U}\varphi_2)$</p></li></ul><h3 id="语义-Coputation-Tree-Logic-CTL"><a href="#语义-Coputation-Tree-Logic-CTL" class="headerlink" title="语义 Coputation-Tree-Logic-CTL"></a>语义 Coputation-Tree-Logic-CTL</h3><ul><li><p>Kripke模型:$\mathfrak{M}=(S,R,L)$</p><ul><li>$S$:非空状态集<ul><li>$R\subset S\times S$是一个完全的二元关系</li></ul></li><li>完全:$\forall s\in S\exists t\in S:(s,t)\in R$</li><li>$L:S\rightarrow2^\Phi$</li></ul></li><li><p>全路径(full path)$x=(s_0,s_1,\cdots)$:$\forall i\in\mathbb{N}:(s_i,s_{i+1})\in R$</p></li><li><p>$\mathfrak{M},s_0\vDash\varphi$:在$\mathfrak{M}$的状态$s_0$为真</p><ul><li>(S1)<ul><li>$\mathfrak{M},s_0\vDash p\iff p\in L(s_0)$</li><li>$\mathfrak{M},s_0\vDash\perp$从不成立</li></ul></li><li>(S2)<ul><li>$\mathfrak{M},s_0\vDash\varphi_1\vee\varphi_2\iff\mathfrak{M},s_0\vDash\varphi_1$或$\mathfrak{M},s_0\vDash\varphi_2$</li><li>$\mathfrak{M},s_0\vDash\neg\varphi\iff\mathfrak{M},s_0\vDash\varphi$不成立</li></ul></li><li>(S3) $\mathfrak{M},s_0\vDash\exists\psi\iff\mathfrak{M}$中存在全路径$x,\mathfrak{M},x\vDash\psi$</li></ul></li><li><p>$\mathfrak{M},x\vDash\psi$:在$\mathfrak{M}$中的全路径$x$为真</p><ul><li>(P1) $\mathfrak{M},x\vDash\varphi\iff\mathfrak{M},s_0\vDash\varphi$</li><li>(P2)<ul><li>$\mathfrak{M},x\vDash\psi_1\vee\psi_2\iff\mathfrak{M},x\vDash\psi_1$或$\mathfrak{M},x\vDash\psi_2$</li><li>$\mathfrak{M},x\vDash\neg\psi\iff\mathfrak{M},x\vDash\psi$不成立</li></ul></li><li>(P3)<ul><li>$\mathfrak{M},x\vDash\psi_1\mathcal{U}\psi_2\iff\exists j(\mathfrak{M},x^j\vDash\psi_2$且$\forall k &lt; j(\mathfrak{M},x^k\vDash\psi_1))$</li><li>$\mathfrak{M},x\vDash\bigcirc\varphi\iff\mathfrak{M},x^1\vDash\psi$</li></ul></li></ul></li></ul><h4 id="CTL"><a href="#CTL" class="headerlink" title="CTL"></a>CTL</h4><ul><li>S1,S2,S3</li><li>S4<ul><li>$\mathfrak{M},s_0\vDash\exists\bigcirc\varphi\iff\exists s_1,Rs_0s_1,\mathfrak{M},s_1\vDash\varphi$</li><li>$\mathfrak{M},s_0\vDash\exists\square\exists x,\forall i\in\mathbb{N}:\mathfrak{M},s_0\vDash\psi$</li><li>$\mathfrak{M},s_0\vDash\exists(\varphi_1\mathcal{U}\varphi_2)\iff\exists x,\exists j(\mathfrak{M},s_j\vDash\psi_2$且$\forall k &lt; j(\mathfrak{M},s_k\vDash\psi_1))$</li></ul></li></ul><h2 id="语法-2"><a href="#语法-2" class="headerlink" title="语法"></a>语法</h2><h3 id="Hilbert公理系统K"><a href="#Hilbert公理系统K" class="headerlink" title="Hilbert公理系统K"></a>Hilbert公理系统K</h3><ul><li><p>公理</p><ul><li>(TAUT)所有重言式</li><li>(K)$\square(p\rightarrow q)\rightarrow(\square p\rightarrow q)$</li><li>(Dual)$\diamond p\leftrightarrow\neg\square\neg p$</li></ul></li><li><p>规则</p><ul><li>(MP, Modus Ponens):$\dfrac{\varphi\rightarrow\psi,\varphi}{\psi}$</li><li>(US, Uniform Substitutious): $\dfrac{\varphi}{\theta}$<ul><li>$\theta$为将$\varphi$中命题符一致地替换为任意的公式而得到的公式</li></ul></li><li>(N, Generalization):$\dfrac{\varphi}{\square\varphi}$</li></ul></li><li><p><strong>K</strong>-系统对于所有的框架可靠且完全</p><ul><li>对应基本模态逻辑</li></ul></li><li><p>最小的正规模态逻辑为<strong>K</strong></p></li></ul><h3 id="K-Gamma"><a href="#K-Gamma" class="headerlink" title="K$\Gamma$"></a>K$\Gamma$</h3><ul><li><strong>K4</strong><ul><li>增加公理$\diamond\diamond p\rightarrow\diamond p$</li><li>对应传递框架</li></ul></li></ul><h3 id="正规模态逻辑-Lambda"><a href="#正规模态逻辑-Lambda" class="headerlink" title="正规模态逻辑$\Lambda$"></a>正规模态逻辑$\Lambda$</h3><ul><li>包含TAUT,K,Dual</li><li>对规则MP,US,N封闭</li></ul><h3 id="标准翻译"><a href="#标准翻译" class="headerlink" title="标准翻译"></a>标准翻译</h3><ul><li><p>$\mathcal{L}^1(\Phi)$为一阶语言</p><ul><li>具有一元谓词$P_0,P_1,\cdots$对应$\Phi$中命题符$p_0,p_1,\cdots$</li><li>具有二元关系$R$对应$\diamond$</li></ul></li><li><p>标准翻译$\text{ST}_x$:</p><ul><li>$\text{ST}_x(p)=Px$</li><li>$\text{ST}_x(\perp)=x\not=x$</li><li>$\text{ST}_x(\neg\phi)=\neg\text{ST}_x(\phi)$</li><li>$\text{ST}_x(\phi\vee\psi)=\text{ST}_x(\phi)\vee\text{ST}_x(\psi)$</li><li>$\text{ST}_x(\diamond\phi)=\exists y(Rxy\wedge\text{ST}_y(\phi))$</li></ul></li><li><p>$\mathfrak{M},\omega\Vdash\varphi\iff\mathfrak{M}\vDash\text{ST}_x(\varphi)[\omega]$</p></li><li><p>$\forall\mathfrak{M},\omega\Vdash\varphi\iff\mathfrak{M}\vDash\forall x\text{ST}_x(\varphi)[\omega]$</p></li></ul><h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><ul><li>文章结构:Fundamental Thm, Main Thm, Theorem, Lemma, Proposition, Law, Thesis</li><li>三次数学危机<ul><li>小数$\to$无理数<ul><li>希伯索斯</li></ul></li><li>牛顿-莱布尼茨 无穷概念<ul><li>柯西</li></ul></li><li>集合论 罗素悖论<ul><li>公理逻辑论</li></ul></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 数理逻辑 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>bootstrap笔记</title>
      <link href="/2019/05/02/bootstrap%E7%AC%94%E8%AE%B0/"/>
      <url>/2019/05/02/bootstrap%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="bootstrap-css"><a href="#bootstrap-css" class="headerlink" title="bootstrap.css"></a>bootstrap.css</h2><h3 id="易重关键字"><a href="#易重关键字" class="headerlink" title="易重关键字"></a>易重关键字</h3><p><code>row</code>,<code>container</code></p><h2 id="affix"><a href="#affix" class="headerlink" title="affix"></a>affix</h2><h3 id="导航栏class"><a href="#导航栏class" class="headerlink" title="导航栏class"></a>导航栏class</h3><ul><li><p><code>nav-tabs</code>:表格式</p></li><li><p><code>nav-pills</code>:胶囊式</p></li><li><p><code>nav-justified</code>:与父元素等宽(?)</p></li><li><p><code>nav-stacked</code>:垂直方向堆叠</p></li></ul><h3 id="导航栏属性-html"><a href="#导航栏属性-html" class="headerlink" title="导航栏属性(html)"></a>导航栏属性(html)</h3><ul><li><code>data-offset-top</code>:触发距离</li><li><code>data-spy</code><ul><li><code>affix</code></li><li><code>scroll</code></li></ul></li></ul><h3 id="父元素属性-html"><a href="#父元素属性-html" class="headerlink" title="父元素属性(html)"></a>父元素属性(html)</h3><ul><li><code>data-target</code>:不明,<a href="https://blog.csdn.net/d295968572/article/details/56667863">参考</a></li></ul><h3 id="body属性-html"><a href="#body属性-html" class="headerlink" title="body属性(html)"></a>body属性(html)</h3><ul><li><code>data-spy</code><ul><li><code>scroll</code></li></ul></li></ul><h2 id="tab"><a href="#tab" class="headerlink" title="tab"></a>tab</h2><h2 id="tooltip"><a href="#tooltip" class="headerlink" title="tooltip"></a>tooltip</h2><h2 id="导航栏"><a href="#导航栏" class="headerlink" title="导航栏"></a>导航栏</h2>]]></content>
      
      
      
        <tags>
            
            <tag> javascript </tag>
            
            <tag> html </tag>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo主题制作</title>
      <link href="/2019/05/02/hexo%E4%B8%BB%E9%A2%98%E5%88%B6%E4%BD%9C/"/>
      <url>/2019/05/02/hexo%E4%B8%BB%E9%A2%98%E5%88%B6%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<h1 id="ejs"><a href="#ejs" class="headerlink" title="ejs"></a>ejs</h1><ul><li>代码参考<a href="https://github.com/xaoxuu/hexo-theme-material-x">hexo-theme-material-x</a></li><li><a href="https://segmentfault.com/a/1190000008040387">教程参考</a></li><li><a href="https://www.jianshu.com/p/81ea81d291fd">辅助函数</a></li></ul><h2 id="框架"><a href="#框架" class="headerlink" title="框架"></a>框架</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;theme_name&#125;&#x2F;-+-source&#x2F;-+-css&#x2F; 存放网页css,styl</span><br><span class="line">              |         |</span><br><span class="line">              |         +-js&#x2F; 存放网页js</span><br><span class="line">              |         |</span><br><span class="line">              |         ...(存放其他文件)</span><br><span class="line">              |</span><br><span class="line">              &#96;-layout&#x2F;-+-\partial&#x2F; 其他模板</span><br><span class="line">                        |</span><br><span class="line">                        +-index.ejs&#x2F; 主页</span><br><span class="line">                        |</span><br><span class="line">                        +-post.ejs&#x2F; 文章页</span><br><span class="line">                        |</span><br><span class="line">                        &#96;-layout.ejs&#x2F; 模板</span><br></pre></td></tr></table></figure><h2 id="模板"><a href="#模板" class="headerlink" title="模板"></a>模板</h2><p><a href="https://hexo.io/zh-cn/docs/templates.html">官方说明</a></p><p>主页默认继承<code>index.ejs</code>,其余所有页面,没有特别声明<code>layout</code>,都默认继承<code>post.ejs</code></p><p>此外,如果存在<code>layout.ejs</code>,所有的模板都会将自身的<code>layout</code>填入<code>layout.ejs</code>的<code>&lt;%- body %&gt;</code>来重写<code>layout.ejs</code></p><h2 id="ejs-1"><a href="#ejs-1" class="headerlink" title="ejs"></a>ejs</h2><h3 id="styl"><a href="#styl" class="headerlink" title="styl"></a>styl</h3><ul><li>引用:<code>@import &quot;main.styl&quot;</code></li></ul><h3 id="传参"><a href="#传参" class="headerlink" title="传参"></a>传参</h3><ul><li>与js传参<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> js = <span class="string">&#x27;&lt;%- ejs %&gt;&#x27;</span>;</span><br></pre></td></tr></table></figure></li></ul><h3 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h3><ul><li><code>forEach(function(item) &#123;&#125;)</code></li></ul><h3 id="模块"><a href="#模块" class="headerlink" title="模块"></a>模块</h3><h4 id="特殊模块"><a href="#特殊模块" class="headerlink" title="特殊模块"></a>特殊模块</h4><ul><li><code>post.ejs</code>:文章页面</li><li><code>index.ejs</code>:主页</li><li><code>layout.ejs</code>:在其他ejs文件中,会把<code>&lt;%- body %&gt;</code>替换成<code>layout.ejs</code>中的内容</li></ul><h4 id="模块调用"><a href="#模块调用" class="headerlink" title="模块调用"></a>模块调用</h4><ul><li>传参<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;%- partial(&#39;post.ejs&#39;, &#123;</span><br><span class="line">  post: post,</span><br><span class="line">  page: page,</span><br><span class="line">  post_num: post_num</span><br><span class="line">&#125;) %&gt;</span><br></pre></td></tr></table></figure></li></ul><h3 id="变量-config-yml"><a href="#变量-config-yml" class="headerlink" title="变量(_config.yml)"></a><a href="https://hexo.io/zh-cn/docs/variables">变量</a>(<code>_config.yml</code>)</h3><ul><li><p>hexo变量:<code>config</code></p></li><li><p>theme变量:<code>theme</code></p></li></ul><h2 id="css"><a href="#css" class="headerlink" title="css"></a>css</h2><ul><li><p>滑动条</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.class_name</span><span class="selector-pseudo">::-webkit-scrollbar</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">0px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>强制换行(一般<code>word-break: break-all</code>就够了)</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">code</span> &#123;</span><br><span class="line">  <span class="attribute">word-break</span>: break-all;</span><br><span class="line">  <span class="attribute">white-space</span>:pre-wrap; <span class="comment">/* css3.0 */</span></span><br><span class="line">  <span class="attribute">white-space</span>:-moz-pre-wrap; <span class="comment">/* Firefox */</span></span><br><span class="line">  <span class="attribute">white-space</span>:-pre-wrap; <span class="comment">/* Opera 4-6 */</span></span><br><span class="line">  <span class="attribute">white-space</span>:-o-pre-wrap; <span class="comment">/* Opera 7 */</span></span><br><span class="line">  <span class="attribute">word-wrap</span>: break-word;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>比例数值混合:<code>width: calc(%100 - 70px);</code></p></li><li><p>自定义<code>input</code>关闭键背景</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line">&amp;<span class="selector-pseudo">::-webkit-search-cancel-button</span> &#123;</span><br><span class="line">  <span class="attribute">-webkit-appearance</span>: none;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">15px</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">15px</span>;</span><br><span class="line">  <span class="attribute">cursor</span>: pointer;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">&quot;/img/close.png&quot;</span>) no-repeat center;</span><br><span class="line">  <span class="attribute">background-size</span>: <span class="number">100%</span> <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>筛选器</p><ul><li>一级子元素:<code>body &gt; p</code>(<strong>TODO</strong>)</li></ul></li><li><p>自定义字体</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@font-face</span> &#123;</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">&#x27;varela&#x27;</span>;</span><br><span class="line">  <span class="attribute">src</span>: <span class="built_in">url</span>(<span class="string">&#x27;/font/VarelaRound.ttf&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>自定义变量</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-pseudo">:root</span> &#123;</span><br><span class="line">  <span class="attribute">--val</span>: <span class="built_in">rgba</span>(<span class="number">250</span>, <span class="number">250</span>, <span class="number">250</span>, <span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>子元素靠右</p><ol><li>父元素<code>position</code>为<code>relative</code></li><li>子元素<code>position</code>为<code>absolute</code>,然后自己定位</li></ol></li></ul><h2 id="javascript"><a href="#javascript" class="headerlink" title="javascript"></a>javascript</h2><h3 id="jquery"><a href="#jquery" class="headerlink" title="jquery"></a>jquery</h3><ul><li><p>获取<code>css</code>:<code>$(element).css(&quot;property&quot;)</code></p></li><li><p>修改<code>css</code>:<code>$(element).css(&quot;property&quot;, &quot;value&quot;)</code></p></li><li><p>监听</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$(element).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li><li><p>scroll顶部,返回过程中无法中断</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$(<span class="string">&quot;.right_tool_4&quot;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  $(<span class="string">&quot;html, body&quot;</span>).animate(&#123;</span><br><span class="line">    scrollTop: <span class="number">0</span></span><br><span class="line">  &#125;, <span class="number">300</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li><li><p>元素到顶部距离:<code>$(element).offset.top()</code></p></li><li><p>切换<code>className</code>:<strong>TODO</strong></p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$(element).toggleClass(<span class="string">&quot;class_name&quot;</span>);</span><br></pre></td></tr></table></figure></li><li><p>解决firefox<code>border</code>不对称的问题</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">scrollbar-width</span>: <span class="selector-tag">none</span>;</span><br></pre></td></tr></table></figure></li></ul><h3 id="原生javascript"><a href="#原生javascript" class="headerlink" title="原生javascript"></a>原生javascript</h3><ul><li><p>scroll特定元素(有少部分浏览器不支持<code>smooth</code>效果)</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 1. 使用scrollIntoView</span></span><br><span class="line">element.onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  target_element.scrollIntoView(&#123;</span><br><span class="line">    block: <span class="string">&quot;end&quot;</span>,</span><br><span class="line">    behavior: <span class="string">&quot;smooth&quot;</span></span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2. 使用scrollTo</span></span><br><span class="line"><span class="built_in">window</span>.scrollTo(&#123;</span><br><span class="line">  top: element_position - vertical_offset,</span><br><span class="line">  behavior: <span class="string">&quot;smooth&quot;</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><p>全页长度: <code>document.body.scrollHeight</code></p></li><li><p>文章链接解码(成中文)</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">str += <span class="string">&quot;&lt;li&gt;&lt;a href=&#x27;&quot;</span> + <span class="built_in">unescape</span>(<span class="built_in">decodeURI</span>(data_url)) + <span class="string">&quot;&#x27; class=&#x27;search-result-title&#x27;&gt;&quot;</span> + data_title + <span class="string">&quot;&lt;/a&gt;&quot;</span>;</span><br></pre></td></tr></table></figure></li><li><p>为页面元素添加属性:<code>element.setAttribute(&quot;attribute&quot;, &quot;value&quot;)</code></p></li><li><p>根据不同设备进行放缩</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">change_scale</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (navigator.userAgent.match(<span class="string">&quot;Android&quot;</span>)) &#123;<span class="comment">// 放大</span></span><br><span class="line">    <span class="built_in">document</span>.body.style.zoom = <span class="number">1.6</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (navigator.userAgent.match(<span class="string">&quot;Windows&quot;</span>) || navigator.userAgent.match(<span class="string">&quot;Mac&quot;</span>)) &#123;<span class="comment">// 缩小</span></span><br><span class="line">    <span class="built_in">document</span>.body.style.zoom = <span class="number">0.7</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>监听</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 直接修改函数</span></span><br><span class="line">element.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  another_function(arg);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 增加监听</span></span><br><span class="line">element.addEventListener(<span class="string">&quot;click&quot;</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  addEventListener(arg);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><p>判断未定义:<code>typeof x == &quot;undefined&quot;</code></p></li><li><p>获取鼠标悬停位置</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> event = <span class="built_in">window</span>.event;</span><br><span class="line">mouse_element = event.target;</span><br></pre></td></tr></table></figure></li><li><p>修改<code>css</code>的<code>:root</code>属性:<code>document.documentElement.style.setProperty(&#39;--color_1&#39;, &#39;rgba(200, 241, 255, 1)&#39;);</code></p></li></ul><h3 id="其他-过期"><a href="#其他-过期" class="headerlink" title="其他(过期)"></a>其他(过期)</h3><h4 id="本地搜索功能"><a href="#本地搜索功能" class="headerlink" title="本地搜索功能"></a>本地搜索功能</h4><p>搜索功能需要RSS,现在使用现成的npm包来生成xml</p><p>可使用的包:<code>hexo-generator-search</code>,<code>hexo-generator-searchdb</code>(代码和前面那个一模一样,归属<code>next</code>主题的子项目)</p><blockquote><p>略</p></blockquote><h4 id="latex公式渲染"><a href="#latex公式渲染" class="headerlink" title="latex公式渲染"></a>latex公式渲染</h4><p>见<a href="https://niabie.github.io/2019/01/22/hexo%E6%8F%92%E5%85%A5latex%E5%85%AC%E5%BC%8F/">hexo插入latex公式</a></p><p>国内一些垃圾浏览器渲染不正确很正常</p><h4 id="代码块美化-显示语言类型"><a href="#代码块美化-显示语言类型" class="headerlink" title="代码块美化,显示语言类型"></a>代码块美化,显示语言类型</h4><p>注意取消hexo自带的highlight行号</p><blockquote><p>略</p></blockquote><h4 id="附加导航"><a href="#附加导航" class="headerlink" title="附加导航"></a>附加导航</h4><p>如果要用<code>guide_active</code>(激活状态)的<code>css</code>属性覆盖原有属性,在css文件中要将<code>guide_active</code>放到其后</p><blockquote><p>略</p></blockquote><h1 id="swig"><a href="#swig" class="headerlink" title="swig"></a>swig</h1><p><strong>TODO</strong></p>]]></content>
      
      
      
        <tags>
            
            <tag> javascript </tag>
            
            <tag> html </tag>
            
            <tag> css </tag>
            
            <tag> hexo </tag>
            
            <tag> swig </tag>
            
            <tag> ejs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Algorithmics-for-Hard-Problems</title>
      <link href="/2019/05/01/Algorithmics-for-Hard-Problems/"/>
      <url>/2019/05/01/Algorithmics-for-Hard-Problems/</url>
      
        <content type="html"><![CDATA[<h1 id="2"><a href="#2" class="headerlink" title="2"></a>2</h1><h2 id="2-3"><a href="#2-3" class="headerlink" title="2.3"></a>2.3</h2><h3 id="Definition-2-3-1-2"><a href="#Definition-2-3-1-2" class="headerlink" title="Definition 2.3.1.2"></a>Definition 2.3.1.2</h3><p>Let $\Sigma$ be an alphabet. A <strong>word</strong> over $\Sigma$ is any finite sequence of symbols of $\Sigma$. The <strong>empty word $\lambda$</strong> is the only word consisting of zero symbols. The set of all words over the alphabet $\Sigma$ is denoted by $\Sigma^{*}$</p><h3 id="Definition-2-3-1-3"><a href="#Definition-2-3-1-3" class="headerlink" title="Definition 2.3.1.3"></a>Definition 2.3.1.3</h3><p>The <strong>length of a word $w$</strong> over an alphabet $\Sigma$, denoted by $|w|$, is the number of symbols in $w$. For every word $w\in\Sigma^{*}$, and every symbal $a\in\Sigma$, $\sharp_{a}(w)$ is the number of occurrences of the symbol $a$ in the word $w$</p><h3 id="Definition-2-3-1-4"><a href="#Definition-2-3-1-4" class="headerlink" title="Definition 2.3.1.4"></a>Definition 2.3.1.4</h3><p>Let $\Sigma$ be an alphabet. Then, for any $n\in\mathbb{N}$<br>$$ \Sigma^n=\{x\in\Sigma^{*}||x|=n\} $$<br>We define $\Sigma^+=\Sigma^{*}-\{\lambda\}$</p><h3 id="Definition-2-3-1-5-concatenation"><a href="#Definition-2-3-1-5-concatenation" class="headerlink" title="Definition 2.3.1.5 (concatenation)"></a>Definition 2.3.1.5 (concatenation)</h3><p>For every word $w\in\Sigma^{*}$, we define</p><ul><li>$w^0=\lambda$, and</li><li>$w^{n + 1}=w\cdot w^n=ww^n$ for every positive integer $n$</li></ul><h3 id="Definition-2-3-1-9-language"><a href="#Definition-2-3-1-9-language" class="headerlink" title="Definition 2.3.1.9 (language)"></a>Definition 2.3.1.9 (language)</h3><p>Let $\Sigma$ be an alphabet, Every set $L\subseteq\Sigma^{*}$ is called a <strong>language</strong> over $\Sigma$. The <strong>complement of the language $L$ according to $\Sigma$</strong> is $L^C=\Sigma^{*}-L$</p><p>Let $\Sigma_1$ and $\Sigma_2$ be alphabets, and let $L_1\subseteq\Sigma_1^{*}$ and $L_2\subseteq\Sigma_2^{*}$ be languages. The <strong>concatenation</strong> of $L_1$ and $L_2$ is<br>$$ L_1L_2=L_1\circ L_2=\{uv\in(\Sigma_1\cup\Sigma_2)^{*}|u\in L_1 and\ v\in L_2\} $$</p><h3 id="Definition-2-3-1-10"><a href="#Definition-2-3-1-10" class="headerlink" title="Definition 2.3.1.10"></a>Definition 2.3.1.10</h3><p>Let $\Sigma=\{s_1,s_2…s_m\},m\ge1$, be an alphabet, and let $s_1 &lt; s_2 &lt; … &lt; s_m$ be a linear ordering on $\Sigma$. We define the <strong>canonical ordering</strong> on $\Sigma^{*}$ as follows. For all $u,v\in\Sigma^{*}$<br>$$u &lt; v\mbox{ if }|u| &lt; |v|$$<br>$$\mbox{or }|u|=|v|,u=xs_iu’,\mbox{ and }v=xs_jv’$$<br>$$\mbox{for some }x,u’,v’\in\Sigma^{*},\mbox{ and }i &lt; j$$</p><h2 id="2-3-2"><a href="#2-3-2" class="headerlink" title="2.3.2"></a>2.3.2</h2><h3 id="Definition-2-3-2-1"><a href="#Definition-2-3-2-1" class="headerlink" title="Definition 2.3.2.1"></a>Definition 2.3.2.1</h3><p><strong>A decision problem</strong> is a triple $(L, U, \Sigma)$ where $\Sigma$ is an alphabet and $L\subseteq U\subseteq\Sigma^{*}$. An algorithm $A$ <strong>solves(decides)</strong> the decision problem $(L, U, \Sigma^{*}$ if, for every $x\in U$</p><ul><li>$A(x)=1$ if $x\in L$, and</li><li>$A(x)=0$ if $x\in U-L(x\not\in L)$</li></ul><h3 id="Definition-2-3-2-2"><a href="#Definition-2-3-2-2" class="headerlink" title="Definition 2.3.2.2"></a>Definition 2.3.2.2</h3><p>An <strong>optimization problem</strong> is a 7-tuple $U=(\Sigma_I,\Sigma_O,L,L_I,M,cost,goal)$, where</p><ul><li>$\Sigma_I$ is an alphabet, called the <strong>input alphabet</strong> of $U$</li><li>$\Sigma_O$ is an alphabet, called the <strong>output alphabet</strong> of $U$</li><li>$L\subseteq\Sigma_I^{*}$ is the <strong>language of feasible problem instances</strong></li><li>$L_I\subseteq L$ is the <strong>language of the(actual) problem instances of $U$</strong></li><li>$M$ is a function from $L$ to (power set)$Pot(\Sigma_O^{*})$, and for every $x\in L$, $M(x)$ is some $x\in L$, assigns a positive real number cost($u,x$)</li><li>cost is the <strong>cost function</strong> that, for every pair $(u,x)$, where $u\in M(x)$ for some $x\in L$, assigns a positive real number cost($u,x$)</li><li>goal$\in${minimum,maximum}</li></ul><p>For every $x\in L_I$, a feasible solution $y\in M(x)$ is called <strong>optimal for $x$ and $U$</strong> if<br>$$ cost(y,x)=goal\{cost(z,x)|z\in M(x)\} $$<br>For an optimal solution $y\in M(x)$, we denote cost($u,x$) by Opt$_U(x)$ ,$U$ is called <strong>maxmization problem</strong> if goal=maximum, and $U$ is a <strong>minimization problem</strong> if goal=minimum. In what follows Output$_U(x)\subseteq M(x)$ denotes the set of all optimal solutions for the instance $x$ of $U$</p><p>An algorithm $A$ is <strong>consistent</strong> for $U$ if, for every $x\in L_I$, the output $A(x)\in M(x)$. We say that an algorithm $B$ <strong>solves</strong> the optimization problem $U$ if</p><ul><li>$B$ is consistent for $U$, and</li><li>for every $x\in L_1, B(x)$ is an optimal solution for $x$ and $U$</li></ul><h3 id="Definition-2-3-2-3"><a href="#Definition-2-3-2-3" class="headerlink" title="Definition 2.3.2.3"></a>Definition 2.3.2.3</h3><p>Let $U_1=(\Sigma_I,\Sigma_O,L,L_{I,1},M,cost,goal)$ and $U_2=(\Sigma_I,\Sigma_O,L,L_{I,2},M,cost,goal)$ be two optimization problems. We say that $U_1$ is a <strong>subproblem</strong> of $U_2$ if $L_{I,1}\subseteq L_{I,2}$</p><h3 id="Theorem-2-3-3-3"><a href="#Theorem-2-3-3-3" class="headerlink" title="Theorem 2.3.3.3"></a>Theorem 2.3.3.3</h3><p>There is a decision problem $(L,\Sigma_{bool})$ such that, for every algorithm $A$ deciding $L$, there exists another algorithm $B$ deciding $L$, such that<br>$$ Time_B(n)=\log_2(Time_A(n)) $$<br>for infinitely many positive integers $n$</p><h3 id="Definition-2-3-3-5"><a href="#Definition-2-3-3-5" class="headerlink" title="Definition 2.3.3.5"></a>Definition 2.3.3.5</h3><p>We define the complexity class $P$ of languages decidable in polynomial-time by<br>$$ P=\{L=L(M)|M\mbox{ is a TM(an algorithm) with }Time_M(n)\in O(n^c)\mbox{ for some positive integer c}\} $$</p><p>A language (decision problem) $L$ is called <strong>tractable(practially solvable)</strong> if $L\in P$. A language $L$ is called <strong>intractable</strong> if $L\not\in P$</p><h3 id="Definition-2-3-3-6"><a href="#Definition-2-3-3-6" class="headerlink" title="Definition 2.3.3.6"></a>Definition 2.3.3.6</h3><p>Let $M$ be a nondeterministic TM(algorithm).  We say that <strong>$M$ accepts a language $L, L = L(M)$</strong>, if</p><ul><li>for every $x\in L$, there exists at least one computation of $M$ that accepts $x$, and</li><li>for every $y\not\in L$, all computations of $M$ reject $y$</li></ul><p>For every input $w\in L$, the ** time complexity Time$_M(w)$ of $M$ on $w$ ** is the time complexity of the shortest accepting computation of $M$ on $w$. The <strong>time complexity of $M$</strong> is the function Time$_M$ from $\mathbb{N}$ to $\mathbb{N}$ defined by<br>$$ Time_M(n)=\max\{Time_M(x)|x\in L(M)\cap\Sigma^n\} $$</p><h3 id="Definition-2-3-3-7"><a href="#Definition-2-3-3-7" class="headerlink" title="Definition 2.3.3.7"></a>Definition 2.3.3.7</h3><p>Let $L\subseteq\Sigma^{*}$ be a language. An algorithm $A$ working on inputs from $\Sigma^{*}\times\{0,1\}$ is called a <strong>verifier for $L$</strong>, denoted $L=V(A)$, if<br>$$ L=\{w\in\Sigma^{*}|A\mbox{ accepts }(w,c)\mbox{ for some }c\in\{0,1\}^{*}\} $$<br>If $A$ accepts $(w,c)\in\Sigma^{*}\times\{0,1\}$, we say that $c$ is a <strong>proof(certificate)</strong> of the fact $w\in L$</p><p>A verifier $A$ for $L$ is called a <strong>polynomial-time verifier</strong> if there exists a positive integer $d$ such that, for every $w\in L$, Time$_A(w,c)\in O(|w|^d)$ for a proof $c$ of $w\in L$</p><p>We define the <strong>class of polynomially verifiable languages</strong> as<br>$$ VP=\{V(A)|A\mbox{ is a polynomial-time verifier}\} $$</p><h3 id="Definition-2-3-3-10"><a href="#Definition-2-3-3-10" class="headerlink" title="Definition 2.3.3.10"></a>Definition 2.3.3.10</h3><p>Let $L_1\subseteq\Sigma_1^{*}$ and $L_2\subseteq\Sigma_2^{*}$ be two languages. We say that $L_1$ is <strong>polynomial-time reducible</strong> to $L_2, L_1\le_pL_2$, if there exists a polynomial-time algorithm $A$ that computes a mapping from $\Sigma_1^{*}$ to $\Sigma_2^{*}$ such that, for every $x\in\Sigma_1^{*}$<br>$$ x\in L_1\Leftrightarrow A(x)\in L_2 $$<br>A is called the <strong>polynomial-time reduction</strong> from $L_1$ to $L_2$</p><ul><li>A language $L$ is called <strong>NP-hard</strong> if, for every $U\in NP,U\le_pL$</li><li>A language $L$ is called <strong>NP-complete</strong> if<ul><li>$L\in NP$, and</li><li>$L$ is NP-hard</li></ul></li></ul><h3 id="Lemma-2-3-3-11"><a href="#Lemma-2-3-3-11" class="headerlink" title="Lemma 2.3.3.11"></a>Lemma 2.3.3.11</h3><p>If $L$ is NP-hard and $L\in P$, then P=NP</p><h3 id="Lemma-2-3-3-15"><a href="#Lemma-2-3-3-15" class="headerlink" title="Lemma 2.3.3.15"></a>Lemma 2.3.3.15</h3><p>Sat$\le_{p}$Clique</p><h3 id="Lemma-2-3-3-16"><a href="#Lemma-2-3-3-16" class="headerlink" title="Lemma 2.3.3.16"></a>Lemma 2.3.3.16</h3><p>Clique$\le_{p}$VC</p><h3 id="Lemma-2-3-3-19"><a href="#Lemma-2-3-3-19" class="headerlink" title="Lemma 2.3.3.19"></a>Lemma 2.3.3.19</h3><p>3Sat$\le_{p}$Sol-0/1-LP</p><h3 id="Definition-2-3-3-21"><a href="#Definition-2-3-3-21" class="headerlink" title="Definition 2.3.3.21"></a>Definition 2.3.3.21</h3><p><strong>NPO</strong> is the class of optimization problems, where $U=(\Sigma_I,\Sigma_O,L,L_I,M,cost,goal)\in$NPO if the following conditions hold</p><ul><li><p>$L_I\in$P</p></li><li><p>there exists a polynomial $p_U$ such that</p><ul><li>for every $x\in L_I$, and every $y\in M(x),|y|\le p_U(|x|)$, and</li><li>there exists a polynomial-time algorithm that, for every $y\in\Sigma_O^{*}$ and every $x\in L_I$ such that $|y|\le p_U(|x|)$, decides whether $y\in M(x)$, and</li></ul></li><li><p>the function cost is computable in polynomial time</p></li></ul><h3 id="Definition-2-3-3-23"><a href="#Definition-2-3-3-23" class="headerlink" title="Definition 2.3.3.23"></a>Definition 2.3.3.23</h3><p><strong>PO</strong> is the class of optimization problems $U=(\Sigma_I,\Sigma_O,L,L_I,M,cost,goal)$ such that</p><ul><li>$U\in$NPO, and</li><li>there is a polynomial-time algorithm that, for every $x\in L_1$, computes an optimal solution for $x$</li></ul><h3 id="Definition-2-3-3-24"><a href="#Definition-2-3-3-24" class="headerlink" title="Definition 2.3.3.24"></a>Definition 2.3.3.24</h3><p>Let $U=(\Sigma_1,\Sigma_O,L,L_1,M,cost,goal)$ be an optimization problem from NPO, We define the <strong>threshold language of $U$</strong> as<br>$$ Lang_U=\{(x,a)\in L_1\times\Sigma_{bool}^{*}|Opt_U(x)\le Number(a)\} $$<br>if goal=minimum, and as<br>$$ Lang_U=\{(x,a)\in L_1\times\Sigma_{bool}^{*}|Opt_U(x)\ge Number(a)\} $$<br>if goal=maximum</p><p>We say that $U$ is <strong>NP-hard</strong> if Lang$_U$ is NP-hard</p><h3 id="Lemma-2-3-3-25"><a href="#Lemma-2-3-3-25" class="headerlink" title="Lemma 2.3.3.25"></a>Lemma 2.3.3.25</h3><p>If an optimization problem $U\in$PO, then Lang$_U\in$P</p><h1 id="4"><a href="#4" class="headerlink" title="4"></a>4</h1><h2 id="4-2"><a href="#4-2" class="headerlink" title="4.2"></a>4.2</h2><h3 id="Definition-4-2-1-1"><a href="#Definition-4-2-1-1" class="headerlink" title="Definition 4.2.1.1"></a>Definition 4.2.1.1</h3><p>Let $U=(\Sigma_I,\Sigma_O,L,L_I,M,cost,goal)$ be an optimization problem, and let $A$ be a consistent algorithm for $U$. For every $x\in L_I$, the <strong>relative error</strong> $\varepsilon_A(x)$ <strong>of $A$ on $x$</strong> is defined as<br>$$ \varepsilon_A=\dfrac{|cost(A(x))-Opt_U(x)|}{Opt_U(x)} $$</p><ul><li><p>For any $n\in\mathbb{N}$, we define <strong>the relative error of $A$</strong> as<br>$$ \varepsilon_A(n)=\max\{\varepsilon_A(x)|x\in L_I\cap(\Sigma_I)^n\} $$</p></li><li><p>For every $s\in L_I$, the <strong>approximation ratio</strong> $R_A(x)$ <strong>of $A$ on $x$</strong> is defined as<br>$$ R_A(x)=\max\{\dfrac{cst(A(x))}{Opt_U(x)},\dfrac{Opt_U(x)}{cost(A(x))}\} $$ </p></li><li><p>For any $n\in\mathbb{N}$, we define the <strong>approximation ratio of $A$</strong> as<br>$$ R_A(n)=\max\{R_A(x)|x\in L_I\cap(\Sigma_I)^n\} $$</p></li><li><p>For any positive real $\delta &gt; 1$, we say that $A$ is a <strong>$\delta$-approximation algorithm for $U$</strong> if $R_A(x)\le\delta$ for every $x\in L_I$</p></li><li><p>For every function $f:\mathbb{N}\to\mathbb{R}^+$, we say that $A$ si an <strong>$f(n)$-approximation algorithm for $U$</strong> if $R_A(n)\le f(n)$ for every $n\in\mathbb{N}$</p></li></ul><h3 id="Definition-4-2-1-6"><a href="#Definition-4-2-1-6" class="headerlink" title="Definition 4.2.1.6"></a>Definition 4.2.1.6</h3><p>Let $U=(\Sigma_I,\Sigma_O,L,L_I,M,cost,goal)$ be an optimization problem. An algorithm $A$ is called a <strong>polynomial-time approximation scheme (PTAS) for $U$</strong> if for every input pair $(x,\varepsilon)\in L_I\times\mathbb{R}^+, A$ computes a feasible solution $A(x)$ with a relative error at most $\varepsilon$, and $Time_A(x,\varepsilon^{-1})$ can be bounded by a function that is polynomial in $|x|$.</p><p>If $Time_A(x,\varepsilon^{-1})$ can be bounded by a function that is polynomial in both $|x|$ and $\varepsilon^{-1}$, then we say that $A$ is a <strong>fully polynomial-time approximation scheme (FPTAS) for $U$</strong></p><h3 id="Definition-4-2-3-1"><a href="#Definition-4-2-3-1" class="headerlink" title="Definition 4.2.3.1"></a>Definition 4.2.3.1</h3><p>Let $U=(\Sigma_I,\Sigma_O,L,L_I,M,cost,goal)$ and $\bar{U}=(\Sigma_I,\Sigma_O,L,L,M,cost,goal)$ be two optimization problems with $L_I\subset L$. A <strong>distance function for $\bar{U}$ according to</strong> $L_I$ is any function $h_L:L\to\mathbb{R}^{\ge0}$ satisfying the properties</p><ol><li>$h_L(x)=0$ for every $x\in L_I$, and</li><li>$h$ is polynomial-time computable</li></ol><p>Let $h$ be a distance function for $\bar{U}$ accoring to $L_I$. We define, for any $r\in\mathbb{R}^+$<br>$$ Ball_{r,h}(L_I)=\{w\in L|h(w)\le r\} $$<br>Let $A$ be a consistent algorithm for $\bar{U}$, and let $A$ be an $\varepsilon$-approximation algorithm for $U$ for some $\varepsilon\in\mathbb{R}^{-1}$. Let $p$ be a positive real. We say that $A$ is <strong>p-stable according to $h$</strong> if, for every real $0 &lt; r \le p$, there exists a $\delta_{r,\varepsilon}\in\mathbb{R}^{&gt; 1}$ such that $A$ is a $\delta_{r,\varepsilon}$-approximation for $U_r=(\Sigma_I,\Sigma_O,L,Ball_{r,h}(L_I),M,cost,goal)$</p><p>$A$ is <strong>stable according to $h$</strong> if $A$ is $p$-stable according to $h$ for every $p\in\mathbb{R}^+$. We say that $A$ is <strong>unstable according to h</strong> if $A$ is not $p$-stable for any $p\in\mathbb{R}^+$</p><p>For every positive integer $r$, and every function $f_r:\mathbb{N}\to\mathbb{R}^{&gt; 1}$ we say that $A$ is $(r,f_r(n))$<strong>-quasistable according to $h$</strong> if $A$ is an $f_r(n)$-approximation algorithm for $U_r=(\Sigma_I,\Sigma_O,L,Ball_{r,h}(L_I),M,cost,goal)$</p><h3 id="Definition-4-2-3-6"><a href="#Definition-4-2-3-6" class="headerlink" title="Definition 4.2.3.6"></a>Definition 4.2.3.6</h3><p>Let $U=(\Sigma_I,\Sigma_O,L,Ball_{r,h}(L_I),M,cost,goal)$ and $\bar{U}=(\Sigma_I,\Sigma_O,L,L,M,cost,goal)$ be two optimization problems with $L_I\subset L$. Let $h$ be a distance function for $\bar{U}$ according to $L_I$, and let $U_r=(\Sigma_I,\Sigma_O,L,Ball_{r,h}(L_I),M,cost,goal)$ for every $r\in\mathbb{R}^+$. Let $A=\{A_{\varepsilon}\}_{\varepsilon &gt; 0}$ be a PTAS for $U$</p><p>If for every $r &gt; 0$ and every $\varepsilon &gt; 0, A_{\varepsilon}$ is a $\delta_{r,\varepsilon}$-approximation algorithm for $U_r$, we say that the PTAS $A$ is <strong>stable according to $h$</strong></p><p>If $\delta_{r,\varepsilon}\le f(\varepsilon)\cdot g(r)$, where</p><ul><li>$f$ and $g$ are some functions from $\mathbb{R}^{\ge0}$ to $\mathbb{R}^+$, and</li><li>$\lim_{\varepsilon\to0}f(\varepsilon)=0$<br>then we say that the PTAS $A$ is <strong>superstable according to $h$</strong></li></ul><p>5</p><p>5.2</p><h3 id="Definition-5-2-2-10"><a href="#Definition-5-2-2-10" class="headerlink" title="Definition 5.2.2.10"></a>Definition 5.2.2.10</h3><p>Let $U=(\Sigma_I,\Sigma_O,L,L_I,M,cost,goal)$ be an optimization problem. For any positive real $\delta &gt; 1$ a randomized algorithm $A$ is called a <strong>randomized $\delta$-approximation algorithm for $U$</strong> if</p><ol><li>$Prob(A(x)\in M(x))=1$, and</li><li>$Prob(R_A(x)\le\delta)\ge1/2</li></ol><p>for every $x\in L_I</p><p>For every function $f:\mathbb{N}\to\mathbb{R}^+$, we say that $A$ is a <strong>randomized $f(n)$-approximation algorithm for $U$</strong> if<br>$$ Prob(A(x)\in M(x))=1\ and\ Prob(R_A(x)\le f(|x|))\ge1/2 $$<br>for every $x\in L_I$</p><p>A randomized algorithm $A$ is called a <strong>randomized polynomial-time approximation scheme (RPTAS) for $U$</strong> if there exists a function $p:L_I\times\mathbb{R}^+\to\mathbb{N}$ such that for every input $(x,\delta)\in L_I\times\mathbb{R}^+$:</p><ol><li>$Prob(A(x,\delta)\in M(x))=1$ for every random choice $A$ computes a feasible solution of $U$</li><li>$Prob(\varepsilon_A(x,\delta)\le\delta)\ge1/2$ a feasible solution, whose relative error is at most $\delta$, is produced with the probability at least 1/2</li><li>$Time_A(x,\delta^{-1})\le p(|x|,\delta^{-1})$ and $p$ is a polynomial in $|x|$</li></ol><p>If $p(|x|,\delta^{-1})$ is polynomial in both its arguments $|x|$ and $\delta^{-1}$, then we say that $A$ is a <strong>randomized fully polynomial-time approximation scheme (RFPTAS) for $U$</strong></p><h3 id="Definition-5-2-2-11"><a href="#Definition-5-2-2-11" class="headerlink" title="Definition 5.2.2.11"></a>Definition 5.2.2.11</h3><p>Let $U=(\Sigma_I,\Sigma_O,L,L_I,M,cost,goal)$ be an approximation problem. For any positive real $\delta &gt; 1$, a randomized algorithm $A$ is called a <strong>randomized $\delta$-expected approximation algorithm for $U$</strong> if</p><ol><li>$Prob(A(x)\in M(x))=1$</li><li>$E[R_A(x)]\le\delta$</li></ol><p>for every $x\in L_I$</p>]]></content>
      
      
      <categories>
          
          <category> 问题求解 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>wordpress笔记</title>
      <link href="/2019/04/29/wordpress%E7%AC%94%E8%AE%B0/"/>
      <url>/2019/04/29/wordpress%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="mysql"><a href="#mysql" class="headerlink" title="mysql"></a>mysql</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mysqladmin --version</span><br><span class="line"></span><br><span class="line">sudo mysqladmin -u root password <span class="string">&quot;111111&quot;</span></span><br><span class="line">mysql -h localhost -u root -p</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ps -ef | grep mysqld</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /usr/bin</span><br><span class="line">sudo ./mysqld_safe</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo mysql</span><br><span class="line"></span><br><span class="line">mysql&gt; SHOW DATABASES;</span><br><span class="line">mysql&gt; <span class="built_in">exit</span>;</span><br><span class="line">mysql&gt; drop database wordpress;</span><br></pre></td></tr></table></figure><h2 id="phpmyadmin"><a href="#phpmyadmin" class="headerlink" title="phpmyadmin"></a>phpmyadmin</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt install phpmyadmin</span><br></pre></td></tr></table></figure><p>位置:<code>/usr/share/phpmyadmin</code></p><h2 id="wordpress安装"><a href="#wordpress安装" class="headerlink" title="wordpress安装"></a><a href="https://www.crifan.com/during_install_wordpress_access_wp_admin_install_php_error_database_connection_error_your_database_name_and_password_may_not_correct_provided_in_wp_config_php/">wordpress安装</a></h2><ul><li><p><a href="https://www.crifan.com/use_phpmyadmin_to_create_new_mysql_database_for_wordpress/">建立数据库</a></p></li><li><p><code>wp-config.php</code></p></li></ul><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">define(<span class="string">&#x27;DB_NAME&#x27;</span>, <span class="string">&#x27;wordpress&#x27;</span>);</span><br><span class="line">define(<span class="string">&#x27;DB_USER&#x27;</span>, <span class="string">&#x27;root&#x27;</span>);</span><br><span class="line">define(<span class="string">&#x27;DB_PASSWORD&#x27;</span>, <span class="string">&#x27;&#x27;</span>);</span><br></pre></td></tr></table></figure><p>好像最开始是不能有密码的</p><h2 id="报错解决"><a href="#报错解决" class="headerlink" title="报错解决"></a>报错解决</h2><ul><li><code>无法创建目录</code></li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo chmod a+w -R &#x2F;opt&#x2F;lampp&#x2F;htdocs</span><br></pre></td></tr></table></figure><ul><li>(localhost)<code>连接服务器时出错,请检查设置</code></li></ul><p>在<code>htdocs/wp-config.php</code>添加</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">define(&#39;FS_METHOD&#39;, &quot;direct&quot;);</span><br></pre></td></tr></table></figure><p>但还是一堆<code>Warning</code></p><h2 id="其他配置"><a href="#其他配置" class="headerlink" title="其他配置"></a>其他配置</h2><ul><li><a href="https://www.oschina.net/question/1467780_147338">免ftp密码</a></li></ul><h2 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h2><ul><li><code>WP Editor.md</code>:markdown编辑器</li><li><code>WordPress Database Backup</code>:备份工具</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> php </tag>
            
            <tag> mysql </tag>
            
            <tag> wordpress </tag>
            
            <tag> apache </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>live2d搭建API</title>
      <link href="/2019/04/27/live2d%E6%90%AD%E5%BB%BAAPI/"/>
      <url>/2019/04/27/live2d%E6%90%AD%E5%BB%BAAPI/</url>
      
        <content type="html"><![CDATA[<h1 id="原生js静态加载"><a href="#原生js静态加载" class="headerlink" title="原生js静态加载"></a>原生js静态加载</h1><h2 id="使用cdn"><a href="#使用cdn" class="headerlink" title="使用cdn"></a>使用cdn</h2><h3 id="遇到的问题-未解决"><a href="#遇到的问题-未解决" class="headerlink" title="遇到的问题(未解决)"></a>遇到的问题(未解决)</h3><ul><li>图片跨源请求</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Uncaught DOMException: Failed to execute &#39;texImage2D&#39; on &#39;WebGLRenderingContext&#39;: The image element contains cross-origin data, and may not be loaded.</span><br></pre></td></tr></table></figure><ul><li>浏览器的CORS协议</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Access to XMLHttpRequest at &#39;file:&#x2F;&#x2F;&#x2F;home&#x2F;lynx&#x2F;webGL&#x2F;assets&#x2F;Epsilon&#x2F;Epsilon.model.json&#39; from origin &#39;null&#39; has been blocked by CORS policy: Cross origin requests are only supported for protocol schemes: http, data, chrome, chrome-extension, https.</span><br></pre></td></tr></table></figure><ul><li>浏览器<code>json</code>加载失败</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">main.js:7588 Failed to load (0) : new&#x2F;assets&#x2F;Epsilon&#x2F;Epsilon.model.json</span><br></pre></td></tr></table></figure><h2 id="不使用cdn"><a href="#不使用cdn" class="headerlink" title="不使用cdn"></a>不使用cdn</h2><h1 id="php动态加载"><a href="#php动态加载" class="headerlink" title="php动态加载"></a>php动态加载</h1><blockquote><p><a href="https://www.fghrsh.net/post/123.html">参考fghrsh的API实现</a></p></blockquote><h2 id="原代码分析"><a href="#原代码分析" class="headerlink" title="原代码分析"></a>原代码分析</h2><h3 id="结构"><a href="#结构" class="headerlink" title="结构"></a>结构</h3><ul><li>后端(API)</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">live2d_api&#x2F;-+-add&#x2F;---index.php</span><br><span class="line">            |</span><br><span class="line">            +-get&#x2F;---index.php</span><br><span class="line">            |</span><br><span class="line">            +-model&#x2F;---&#123;模型&#125;&#x2F;</span><br><span class="line">            |</span><br><span class="line">            +-rand&#x2F;---index.php</span><br><span class="line">            |</span><br><span class="line">            +-rand_textures&#x2F;---index.php</span><br><span class="line">            |</span><br><span class="line">            +-switch&#x2F;---index.php</span><br><span class="line">            |</span><br><span class="line">            +-switch_textures&#x2F;---index.php</span><br><span class="line">            |</span><br><span class="line">            +-tools&#x2F;-+-jsonCompatible.php</span><br><span class="line">            |        |</span><br><span class="line">            |        +-modelList.php</span><br><span class="line">            |        |</span><br><span class="line">            |        +-modelTextures.php</span><br><span class="line">            |        |</span><br><span class="line">            |        &#96;name-to-lower.php</span><br><span class="line">            |</span><br><span class="line">            &#96;-model_list.json</span><br></pre></td></tr></table></figure><ul><li>前端(有改动)</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">live2d_fore&#x2F;-+-lib&#x2F;-+-jquery-ui.min.js</span><br><span class="line">             |      |</span><br><span class="line">             |      &#96;-jquery.min.js</span><br><span class="line">             |</span><br><span class="line">             +-css&#x2F;-+-font-awesome.min.css</span><br><span class="line">             |      |</span><br><span class="line">             |      +-flat-ui-icons-regular.eot</span><br><span class="line">             |      |</span><br><span class="line">             |      +-flat-ui-icons-regular.svg</span><br><span class="line">             |      |</span><br><span class="line">             |      +-flat-ui-icons-regular.ttf</span><br><span class="line">             |      |</span><br><span class="line">             |      +-flat-ui-icons-regular.woff</span><br><span class="line">             |      |</span><br><span class="line">             |      &#96;-tips.css</span><br><span class="line">             |</span><br><span class="line">             +-live2d.min.js</span><br><span class="line">             |</span><br><span class="line">             +-autoload.js</span><br><span class="line">             |</span><br><span class="line">             +-tips.js</span><br><span class="line">             |</span><br><span class="line">             +-tips.json</span><br><span class="line">             |</span><br><span class="line">             &#96;-fuck.json</span><br></pre></td></tr></table></figure><h3 id="文件功能"><a href="#文件功能" class="headerlink" title="文件功能"></a>文件功能</h3><h4 id="前端"><a href="#前端" class="headerlink" title="前端"></a>前端</h4><blockquote><p><code>lib/</code>里面的是必备的jquery</p></blockquote><blockquote><p>由于作者使用了font-awesome图标,所以<code>font-awesome</code>和<code>flat-ui-icons-regular</code>都必备</p></blockquote><ul><li><p><code>autoload.js</code>: 主调度文件</p></li><li><p><code>tips.css</code>: 提示框的样式</p></li><li><p><code>live2d.min.js</code>: 看不懂,应该是整合了官方SDK的所有函数,和原版不兼容</p></li><li><p><code>tips.js</code>: 管理tips的显示</p></li><li><p><code>tips.json</code>: 鼠标事件相应的tips</p></li><li><p><code>fuck.json</code>: 自己写的本地嘴臭API</p></li></ul><h5 id="live2d-min-js"><a href="#live2d-min-js" class="headerlink" title="live2d.min.js"></a>live2d.min.js</h5><p>作者将<code>Live2DFramework</code>,<code>live2d.min.js</code>,<code>LAppDefine</code>,<code>LAppLive2DManager</code>,<code>LAppModel</code>,<code>PlatformManager</code>,<code>MatrixStack</code>,<code>ModelSettingJson</code>全部合并到了<code>live2d.min.js</code>(舍去<code>SampleApp</code>)</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">! <span class="function"><span class="keyword">function</span>(<span class="params">t</span>) // 这个参数貌似也没有用</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  ...; <span class="comment">// 里面的东西貌似没用,直接删了</span></span><br><span class="line">&#125;([<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;, ..., <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;]);</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span>(<span class="params">t, e, i</span>) // <span class="title">Live2DFramework</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"> ...,</span><br><span class="line"> t.exports = &#123;</span><br><span class="line">    l2dtargetpoint: p,</span><br><span class="line">    Live2DFramework: c,</span><br><span class="line">    L2DViewMatrix: f,</span><br><span class="line">    L2DPose: $,</span><br><span class="line">    L2DPartsParam: u,</span><br><span class="line">    L2DPhysics: l,</span><br><span class="line">    L2DMotionManager: h,</span><br><span class="line">    L2DModelMatrix: a,</span><br><span class="line">    L2DMatrix44: _,</span><br><span class="line">    EYE_STATE: g,</span><br><span class="line">    L2DEyeBlink: s,</span><br><span class="line">    L2DExpressionParam: n,</span><br><span class="line">    L2DExpressionMotion: o,</span><br><span class="line">    L2DBaseModel: r</span><br><span class="line">  &#125; </span><br><span class="line">&#125;, <span class="comment">// 约668</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span>(<span class="params">t, e, i</span>) // <span class="title">LAppDefine</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="meta">  &quot;use strict&quot;</span>;</span><br><span class="line">  t.exports = &#123;</span><br><span class="line">    ...</span><br><span class="line">  &#125;</span><br><span class="line">&#125;, <span class="comment">// 约699</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span>(<span class="params">t, e, i</span>) // 不清楚哪一部分,和网页问候语有关</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  ;</span><br><span class="line">&#125;, <span class="comment">// 约714</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span>(<span class="params">t, e, i</span>) // <span class="title">MatrixStack</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  ..., t.exports = r;</span><br><span class="line">&#125;, <span class="comment">// 约747</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span>(<span class="params">t, e, i</span>) // 不知道干嘛的,删掉感觉没影响</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  t.exports = i(<span class="number">5</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="后端"><a href="#后端" class="headerlink" title="后端"></a>后端</h4><h5 id="add"><a href="#add" class="headerlink" title="add"></a>add</h5><h5 id="get"><a href="#get" class="headerlink" title="get"></a>get</h5><h5 id="rand"><a href="#rand" class="headerlink" title="rand"></a>rand</h5><h5 id="rand-textures"><a href="#rand-textures" class="headerlink" title="rand_textures"></a>rand_textures</h5><h5 id="switch"><a href="#switch" class="headerlink" title="switch"></a>switch</h5><h5 id="switch-textures"><a href="#switch-textures" class="headerlink" title="switch_textures"></a>switch_textures</h5><h5 id="tools"><a href="#tools" class="headerlink" title="tools"></a>tools</h5><h2 id="重构-官方SDK-API"><a href="#重构-官方SDK-API" class="headerlink" title="重构(官方SDK + API)"></a>重构(官方SDK + API)</h2>]]></content>
      
      
      
        <tags>
            
            <tag> javascript </tag>
            
            <tag> live2d </tag>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>php笔记</title>
      <link href="/2019/04/21/php%E7%AC%94%E8%AE%B0/"/>
      <url>/2019/04/21/php%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="关于phpstorm安装"><a href="#关于phpstorm安装" class="headerlink" title="关于phpstorm安装"></a>关于phpstorm安装</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt install php7.2-cgi</span><br></pre></td></tr></table></figure><p><a href="idea.lanyus.com">phpstorm注册网站</a></p><h1 id="本地php命令"><a href="#本地php命令" class="headerlink" title="本地php命令"></a>本地php命令</h1><h2 id="本地php服务"><a href="#本地php服务" class="headerlink" title="本地php服务"></a>本地php服务</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">php -S localhost:6060 -t .</span><br></pre></td></tr></table></figure><h3 id="Address-already-in-use"><a href="#Address-already-in-use" class="headerlink" title="Address already in use"></a><code>Address already in use</code></h3><ul><li>一键杀<ul><li><code>killall php</code></li></ul></li></ul><h1 id="html加载php"><a href="#html加载php" class="headerlink" title="html加载php"></a>html加载php</h1><h2 id="注意"><a href="#注意" class="headerlink" title="注意:"></a>注意:</h2><ul><li>分号</li><li>文件加载先后</li></ul><h2 id="输出到console"><a href="#输出到console" class="headerlink" title="输出到console"></a>输出到<code>console</code></h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">console_log</span>(<span class="params">$src</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (is_array($src) || is_object($src))</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">echo</span>(<span class="string">&quot;console.log(&quot;</span> . json_encode($src) . <span class="string">&quot;);&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">echo</span>(<span class="string">&quot;console.log(&quot;</span> . $src . <span class="string">&quot;);&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">console_log(<span class="string">&quot;fuck&quot;</span>);</span><br></pre></td></tr></table></figure><h2 id="js调用php变量"><a href="#js调用php变量" class="headerlink" title="js调用php变量"></a>js调用php变量</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">tranlate_js</span>(<span class="params">$src, $dest</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (is_array($dest) || is_object($dest))</span><br><span class="line">  &#123;</span><br><span class="line">    console_log(<span class="string">&quot;...&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (is_array($src) || is_object($src))</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">echo</span>(<span class="string">&quot;var &quot;</span> . $dest . <span class="string">&quot;=&quot;</span> . json_encode($src) . <span class="string">&quot;;&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">echo</span>(<span class="string">&quot;var &quot;</span> . $dest . <span class="string">&quot;=&quot;</span> . $src . <span class="string">&quot;;&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">$arr = <span class="keyword">array</span>(<span class="string">&quot;you&quot;</span>, <span class="number">2</span>, <span class="number">3</span>);</span><br><span class="line">tranlate_js($arr, <span class="string">&quot;shit&quot;</span>); <span class="comment">// var shit = $array</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(shit);</span><br></pre></td></tr></table></figure><h2 id="php调用js方法"><a href="#php调用js方法" class="headerlink" title="php调用js方法"></a>php调用js方法</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">my_log</span>(<span class="params">a</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(a);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">$str = <span class="string">&quot;&#x27;you&#x27;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;my_log(&quot;</span> . $str . <span class="string">&quot;);&quot;</span>;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>moc解析</title>
      <link href="/2019/04/20/moc%E8%A7%A3%E6%9E%90/"/>
      <url>/2019/04/20/moc%E8%A7%A3%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<blockquote><p>对于visual stuidio的<code>C#</code>缺少引用,解决方法:</p></blockquote><ul><li>重进</li><li>自动添加引用</li></ul><h2 id="wzhgba的CubismLite"><a href="#wzhgba的CubismLite" class="headerlink" title="wzhgba的CubismLite"></a>wzhgba的<a href="https://onedrive.live.com/redir?resid=BF245E76A574F404!12643">CubismLite</a></h2><p>其中的c++部分可以删掉,只保留C#的部分.要求visual studio 2013+</p><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p>主函数是<code>Program.cs</code>,如果显示<code>v120_xp</code>未安装是因为原作者使用的是vs2013,可重定向项目,修改<code>windows SDK</code>版本</p><h3 id="TODO"><a href="#TODO" class="headerlink" title="TODO"></a>TODO</h3><ul><li>作者是直接根据官方模型的<code>id</code>来进行解析的,所以对非官方模型以及<code>cmo3</code>转<code>moc</code>的解析会失败</li><li>貌似只能解析<code>moc</code>文件的<code>PARM</code>参数</li></ul><h2 id="UlyssesWu的FreeLive"><a href="#UlyssesWu的FreeLive" class="headerlink" title="UlyssesWu的FreeLive"></a>UlyssesWu的<a href="https://github.com/UlyssesWu/FreeLive">FreeLive</a></h2><h3 id="报错"><a href="#报错" class="headerlink" title="报错"></a>报错</h3><ul><li>目录无效</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">copy &quot;...\*.dll&quot; &quot;...\*.pdb&quot; exited with code 1</span><br></pre></td></tr></table></figure><p>创建后面那一个文件夹即可</p><ul><li>源无效</li></ul><p>把<code>nuget</code>源改成<code>https://api.nuget.org/v3/index.json</code></p><h3 id="TODO-1"><a href="#TODO-1" class="headerlink" title="TODO"></a>TODO</h3><ul><li>在提取<code>cmox</code>文件的时候没有解决重名的问题</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> live2d </tag>
            
            <tag> visual studio </tag>
            
            <tag> csharp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>apahce2笔记</title>
      <link href="/2019/04/18/apache2%E7%AC%94%E8%AE%B0/"/>
      <url>/2019/04/18/apache2%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt install php7.2</span><br><span class="line">sudo apt install apahce2</span><br><span class="line">sudo apt install php7.2-mysql <span class="comment"># php支持mysql</span></span><br><span class="line">sudo apt install mysql-server mysql-client</span><br></pre></td></tr></table></figure><h3 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo service mysql start <span class="comment"># 不知道干嘛的</span></span><br><span class="line">sudo service apache2 restart <span class="comment"># http</span></span><br><span class="line">sudo /usr/sbin/apache2ctl start <span class="comment"># http</span></span><br><span class="line">php -S localhost:6060 -t . <span class="comment"># http,不能够浏览目录</span></span><br></pre></td></tr></table></figure><p><code>apahce2</code>配置目录<code>/etc/apahce2</code></p><h3 id="修改apahce2默认目录"><a href="#修改apahce2默认目录" class="headerlink" title="修改apahce2默认目录"></a>修改<code>apahce2</code>默认目录</h3><ul><li>修改<code>/etc/apahce2/sites-available/000-default.conf</code>(本地服务器提供的目录)</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">DocumentRoot &#x2F;&#123;不要带&#x2F;&#125;</span><br></pre></td></tr></table></figure><ul><li>修改<code>/etc/apahce2/apahce2.conf</code>(为本地服务器的目录提供权限)</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;Directory &#x2F;&#123;你的目录,不要加&#x2F;&#125;&gt;</span><br><span class="line">  Require all granted</span><br><span class="line">&lt;Directory&gt;</span><br></pre></td></tr></table></figure><ul><li>要有默认主页文件<code>index.&#123;后缀名任意&#125;</code></li></ul><h3 id="修改apahce2默认端口"><a href="#修改apahce2默认端口" class="headerlink" title="修改apahce2默认端口"></a>修改<code>apahce2</code>默认端口</h3><ul><li>修改<code>/etc/apahce2/sites-available/000-default/conf</code></li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;VirtualHost *:&#123;端口号&#125;&gt;</span><br></pre></td></tr></table></figure><ul><li>修改<code>/etc/apahce2/ports.conf</code></li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Listen &#123;端口&#125;</span><br></pre></td></tr></table></figure><blockquote><p>注意<code>https</code>和<code>http</code>的区别</p></blockquote><h3 id="多端口"><a href="#多端口" class="headerlink" title="多端口"></a>多端口</h3><ul><li><code>ports.conf</code>增加<code>Listen</code></li><li><code>apahce2.conf</code>增加<code>&lt;VirtualHost *:&#123;端口&#125;&gt;&lt;/VirtualHost&gt;</code></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> php </tag>
            
            <tag> apahce2 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Makefile笔记</title>
      <link href="/2019/04/17/Makefile%E7%AC%94%E8%AE%B0/"/>
      <url>/2019/04/17/Makefile%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<p><code>make</code>默认只执行第一条命令</p><figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line">CC       := gcc</span><br><span class="line">CFLAGS   := -lpthread -g</span><br><span class="line">TARGETS  := shit</span><br><span class="line">INC      := <span class="variable">$(<span class="built_in">shell</span> find -L ./ -name &quot;*.h&quot;)</span></span><br><span class="line"></span><br><span class="line"><span class="section">a:</span></span><br><span class="line">    gcc a.c $&#123;INC&#125; <span class="variable">$(par)</span> $&#123;CFLAGS&#125; -o shit <span class="comment"># example: make a run par=&quot;-O2&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="section">run:</span></span><br><span class="line">    ./shit</span><br><span class="line"></span><br><span class="line"><span class="section">clean:</span></span><br><span class="line">    rm ./shit</span><br><span class="line"></span><br><span class="line"><span class="section">fuck:</span></span><br><span class="line">    @echo <span class="variable">$(par)</span> <span class="comment"># example: make fuck par=&quot;fuck you&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="section">dump:</span></span><br><span class="line">    objdump ./shit -S &gt; fuck</span><br><span class="line"></span><br><span class="line"><span class="section">gdb:</span></span><br><span class="line">    gdb ./shit -tui</span><br><span class="line"></span><br><span class="line"><span class="section">cgdb:</span></span><br><span class="line">    cgdb ./shit</span><br></pre></td></tr></table></figure><ul><li>头文件</li></ul><figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line">SRCS    := <span class="variable">$(<span class="built_in">shell</span> find ./src/ -maxdepth 1 -name &quot;*.cpp&quot;)</span></span><br><span class="line">INC     := -I./<span class="keyword">include</span></span><br><span class="line">CFLAGS  := -Wall -Werror</span><br><span class="line"></span><br><span class="line"><span class="section">run:    </span></span><br><span class="line">    g++ <span class="variable">$(CFLAGS)</span> <span class="variable">$(INC)</span> <span class="variable">$(SRCS)</span> -o md_parser</span><br><span class="line">    ./md_parser</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> c </tag>
            
            <tag> makefile </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>live2d SDK WebGL 功能扩展</title>
      <link href="/2019/04/15/l2dwebGL%E6%89%A9%E5%B1%95/"/>
      <url>/2019/04/15/l2dwebGL%E6%89%A9%E5%B1%95/</url>
      
        <content type="html"><![CDATA[<blockquote><p>本文使用的SDK是<code>Live2D SDK WebGl 2.1</code>的<code>SampleApp1</code></p></blockquote><h2 id="1-添加模型"><a href="#1-添加模型" class="headerlink" title="1 添加模型"></a>1 添加模型</h2><ul><li>在<code>LAppDefine.js</code>中增加路径</li></ul><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">MODEL_$&#123;NAME&#125; : <span class="string">&quot;assets/live2d/$&#123;name&#125;/$&#123;name&#125;.model.json&quot;</span></span><br></pre></td></tr></table></figure><ul><li>在<code>LAppLive2DManager.js</code>中修改<code>changeModel</code></li></ul><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">switch</span> (no)</span><br><span class="line">&#123;</span><br><span class="line">  ...;</span><br><span class="line">  <span class="keyword">case</span> num:</span><br><span class="line">    <span class="built_in">this</span>.releaseModel(<span class="number">1</span>, gl); <span class="comment">// 释放之前的模型</span></span><br><span class="line">    <span class="built_in">this</span>.releaseModel(<span class="number">0</span>, gl); <span class="comment">// 释放之前的模型</span></span><br><span class="line">    <span class="comment">// 如果之前加载的模型不止一个,注意要从后往前释放,否则下一个模型会卡死</span></span><br><span class="line">    <span class="comment">// 释放数量没有规定</span></span><br><span class="line">    <span class="built_in">this</span>.createModel(); <span class="comment">// 创建模型</span></span><br><span class="line">    <span class="built_in">this</span>.models[<span class="number">0</span>].load(gl, LAppDefine.$&#123;MODEL_NAME_1&#125;, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123; <span class="comment">// 加载多个模型</span></span><br><span class="line">      thisRef.createModel();</span><br><span class="line">      thisRef.models[<span class="number">1</span>].load(gl, LAppDefine.$&#123;MODEL_NAME_2&#125;);<span class="comment">// 也可以继续嵌套</span></span><br><span class="line">      <span class="comment">// (貌似嵌套的成功率要高些)</span></span><br><span class="line">      thisRef.createModel();</span><br><span class="line">      thisRef.models[<span class="number">2</span>].load(gl, LAppDefine.$&#123;MODEL_NAME_2&#125;);</span><br><span class="line">    &#125; <span class="comment">// 注意要按顺序create,否则会在当前模型卡死</span></span><br><span class="line">    );</span><br><span class="line">    <span class="comment">/* this.models[0].load(gl, LAppDefine.$&#123;MODEL_NAME&#125;); // 加载单个模型 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>为防止重合,可以创建多个<code>$&#123;name&#125;.model.json</code>:</li></ul><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;layout&quot;</span>:</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;center_x&quot;</span>: <span class="number">0.5</span>,</span><br><span class="line">    <span class="attr">&quot;y&quot;</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="attr">&quot;width&quot;</span>: <span class="number">1.9</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>一般显示</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">script error</span><br><span class="line">line 0</span><br></pre></td></tr></table></figure><p>是<code>json</code>文件有语法错误</p><h3 id="重构-自动切换模型"><a href="#重构-自动切换模型" class="headerlink" title="(重构)自动切换模型"></a>(重构)自动切换模型</h3><p><code>LAppLive2DManager.js</code></p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">LAppLive2DManager.prototype.changeModel = <span class="function"><span class="keyword">function</span>(<span class="params">gl</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&quot;--&gt; LAppLive2DManager.update(gl)// (changeModel)&quot;</span>);</span><br><span class="line">  <span class="keyword">var</span> tempNum = <span class="built_in">this</span>.num;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">this</span>.reloadFlg)</span><br><span class="line">  &#123;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">this</span>.reloadFlg = <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">var</span> last_no = <span class="built_in">parseInt</span>((<span class="built_in">this</span>.count + LAppDefine[tempNum].MODELS.length - <span class="number">1</span>) % LAppDefine[tempNum].MODELS.length);</span><br><span class="line">    <span class="keyword">var</span> cur_no = <span class="built_in">parseInt</span>(<span class="built_in">this</span>.count % LAppDefine[tempNum].MODELS.length);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">Array</span>.isArray(LAppDefine[tempNum].MODELS[last_no]))</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">var</span> i = LAppDefine[tempNum].MODELS[last_no].length - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i --)</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="built_in">this</span>.releaseModel(i, gl);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">this</span>.releaseModel(<span class="number">0</span>, gl);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">Array</span>.isArray(LAppDefine[tempNum].MODELS[cur_no]))</span><br><span class="line">    &#123;</span><br><span class="line">      thisRef = <span class="built_in">this</span>;</span><br><span class="line">      <span class="built_in">this</span>.createModel();</span><br><span class="line">      <span class="built_in">this</span>.models[<span class="number">0</span>].load(gl, LAppDefine[tempNum].MODELS[cur_no][<span class="number">0</span>], <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">          <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>; i &lt; LAppDefine[tempNum].MODELS[cur_no].length; i ++)</span><br><span class="line">          &#123;</span><br><span class="line">          thisRef.createModel();</span><br><span class="line">          thisRef.models[i].load(gl, LAppDefine[tempNum].MODELS[cur_no][i]);</span><br><span class="line">          &#125;</span><br><span class="line">          &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">this</span>.createModel();</span><br><span class="line">      <span class="built_in">this</span>.models[<span class="number">0</span>].load(gl, LAppDefine[tempNum].MODELS[cur_no]);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>LAppDefine.js</code>(其余见下文<code>多重canvas</code>),<a href="http://www.ruanyifeng.com/blog/2012/07/three_ways_to_define_a_javascript_class.html">参考:类的声明</a></p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> myDefine = </span><br><span class="line">&#123;</span><br><span class="line">  ...</span><br><span class="line">    width: <span class="number">200</span>,</span><br><span class="line">  height: <span class="number">300</span>,</span><br><span class="line"></span><br><span class="line">  VIEW_MAX_SCALE: <span class="number">1.1</span>, <span class="comment">// 不想用这个功能</span></span><br><span class="line">  VIEW_MIN_SCALE: <span class="number">0.5</span>,</span><br><span class="line">  ...</span><br><span class="line"></span><br><span class="line">  MODELS : <span class="literal">null</span>,</span><br><span class="line"></span><br><span class="line">  MOTION_GROUP_IDLE : <span class="string">&quot;idle&quot;</span>, <span class="comment">// 无操作</span></span><br><span class="line">  MOTION_GROUP_TAP_BODY : <span class="string">&quot;tap_body&quot;</span>, <span class="comment">// 点击身体</span></span><br><span class="line">  MOTION_GROUP_FLICK_HEAD : <span class="string">&quot;flick_head&quot;</span>, </span><br><span class="line">  MOTION_GROUP_PINCH_IN : <span class="string">&quot;pinch_in&quot;</span>, <span class="comment">// 放大至1.5</span></span><br><span class="line">  MOTION_GROUP_PINCH_OUT : <span class="string">&quot;pinch_out&quot;</span>,  <span class="comment">// 缩小至0.5</span></span><br><span class="line">  MOTION_GROUP_SHAKE : <span class="string">&quot;shake&quot;</span>, </span><br><span class="line">  ...</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> LAppDefine = <span class="keyword">new</span> <span class="built_in">Array</span>();</span><br><span class="line"></span><br><span class="line">(<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = minNum; i &lt;= maxNum; i ++)</span><br><span class="line">  &#123;</span><br><span class="line">  LAppDefine[i] = <span class="built_in">Object</span>.create(myDefine);</span><br><span class="line">  &#125;</span><br><span class="line"> </span><br><span class="line">  LAppDefine[<span class="number">1</span>].MODELS = [</span><br><span class="line">  <span class="string">&quot;assets/haru/haru_01.model.json&quot;</span>,</span><br><span class="line">  <span class="string">&quot;assets/haru/haru_02.model.json&quot;</span>,</span><br><span class="line">  ];</span><br><span class="line"> </span><br><span class="line">  LAppDefine[<span class="number">0</span>].MODELS = [ <span class="comment">// 注意数组声明方式</span></span><br><span class="line">  <span class="string">&quot;assets/Epsilon/Epsilon.model.json&quot;</span>,</span><br><span class="line">  <span class="string">&quot;assets/Epsilon2.1/Epsilon2.1.model.json&quot;</span>,</span><br><span class="line">  ];</span><br><span class="line"> </span><br><span class="line">  LAppDefine[<span class="number">2</span>].MODELS = [</span><br><span class="line">  <span class="string">&quot;assets/haru/haru.model.json&quot;</span>,</span><br><span class="line">  ];</span><br><span class="line">&#125;());</span><br></pre></td></tr></table></figure><ul><li>TODO<ul><li>2个模型是极限了,加载更多的会有bug</li></ul></li></ul><h2 id="2-模型点击事件的实现"><a href="#2-模型点击事件的实现" class="headerlink" title="2 模型点击事件的实现"></a>2 模型点击事件的实现</h2><p>官方SDK只提供了2种点击事件:触摸<code>head</code>(<code>hit_areas: name</code>)触发表情随机,触摸<code>body</code>触发<code>tap_body</code>.若要额外增加事件(触摸特定部位触发<code>motion</code>,<code>sound</code>等),在<code>&#123;name&#125;.model.json</code>中添加</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&quot;hit_areas&quot;:</span><br><span class="line">[</span><br><span class="line">  &#123;&quot;name&quot;:&quot;shit&quot;, &quot;id&quot;:&quot;D_REF.BODY&quot;&#125;</span><br><span class="line">],</span><br><span class="line">&quot;motions&quot;:</span><br><span class="line">&#123;</span><br><span class="line">  &quot;tap_shit&quot;:</span><br><span class="line">  [</span><br><span class="line">    &#123;&quot;file&quot;:&quot;motions&#x2F;$&#123;&#125;.mtn&quot;,&quot;fade_in&quot;:2000, &quot;fade_out&quot;:2000&#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>其中<code>hit_areas: name</code>名字随意,但是之后需要在<code>LAppDefine.js</code>中定义一个变量与之对应</li><li><code>hit_areas: id</code>必须要和<code>cmox</code>/<code>moc</code>中部位的<code>id</code>对应.获取<code>id</code>的方法<ul><li>如果有源模型<code>cmox</code>:直接在<code>cubism</code>中的<code>Parts</code>窗口里面,打开某个元素的<code>Drawable Object</code>,显示例如<code>D_REF.BODY</code>之类的<code>id</code></li><li>只有<code>moc</code>:在<code>Viewer</code>中打开<code>&#123;name&#125;.model.json</code>,在下拉菜单中选择<code>Model Info</code>,打开某个元素的文件夹,打开<code>draw</code>文件夹,显示如<code>D_REF.BODY</code>的<code>id</code></li></ul></li></ul><p>修改了<code>&#123;name&#125;.model.json</code>后在<code>LAppDefine</code>中增加</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">MOTION_GROUP_TAP_SHIT : <span class="string">&quot;tap_shit&quot;</span>, <span class="comment">// 对应json文件中&quot;motions&quot;的事件名</span></span><br><span class="line">...</span><br><span class="line">HIT_AREA_SHIT : <span class="string">&quot;shit&quot;</span>, <span class="comment">// 对应json文件中&quot;hit_areas&quot;的区域&quot;name&quot;</span></span><br></pre></td></tr></table></figure><ul><li><p>每次鼠标点击时,<code>LAppLive2DManager.prototype.tapEvent</code>会调用<code>hitTest</code></p></li><li><p><code>LAppModel.prototype.hitTest</code>会逐一判断点击位置(对比<code>name</code>,然后获得<code>id</code>),得到<code>id</code>后,调用<code>hitTestSimple</code></p></li></ul><blockquote><p><code>LAppDefine</code>中<code>MOTION_GROUP_&#123;EVENT&#125;</code>对应<code>json</code>的<code>motions</code>下子事件(如<code>idle</code>,<code>tap_body</code>等),没有在<code>LAppDefine</code>声明的情况下不能够直接用<code>&quot;&quot;</code>(这里和<code>Viewer</code>不一样),如果没有任何<code>motions</code>,<code>console</code>会提示<code>motions</code>加载错误</p></blockquote><p>最后在<code>LAppLive2DManager.prototype.tapEvent</code>中增加</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">this</span>.models[i].hitTest(LAppDefine.HIT_AREA_SHIT, x, y)) <span class="comment">// 这里是你声明的区域名的名称</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="built_in">this</span>.models[i].startRandomMotion(LAppDefine.MOTION_GROUP_TAP_SHIT, <span class="comment">// 这里是你声明的动作子事件的名称</span></span><br><span class="line">                                     LAppDefine.PRIORITY_NORMAL); <span class="comment">// 应该是覆盖掉PRIORITY较小的(如idle)motion</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-模型大小及放缩"><a href="#3-模型大小及放缩" class="headerlink" title="3 模型大小及放缩"></a>3 模型大小及放缩</h2><p>放缩极限见<code>LAppDefine.js</code></p><p>模型的放缩<code>SampleApp1.js</code></p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="keyword">if</span> (e.type == <span class="string">&quot;mousewheel&quot;</span>) <span class="comment">// 鼠标滚轮事件</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="comment">/* 暂时感觉这几句完全是多余的,影响使用</span></span><br><span class="line"><span class="comment">  --- if (e.clientX &lt; 0 || thisRef.canvas.clientWidth &lt; e.clientX ||</span></span><br><span class="line"><span class="comment">  ---     e.clientY &lt; 0 || thisRef.canvas.clientHeight &lt; e.clientY)</span></span><br><span class="line"><span class="comment">  --- &#123;</span></span><br><span class="line"><span class="comment">  ---   return;</span></span><br><span class="line"><span class="comment">  --- &#125;</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line">  +++ <span class="keyword">if</span> (e.clientX &lt; <span class="number">0</span> || e.clientY &lt; <span class="number">0</span>)</span><br><span class="line">  +++ &#123;</span><br><span class="line">  +++   <span class="keyword">return</span>;</span><br><span class="line">  +++ &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">if</span> (e.wheelDelta &gt; <span class="number">0</span>) modelScaling(<span class="number">1.1</span>);<span class="comment">// 放大</span></span><br><span class="line">  <span class="keyword">else</span> modelScaling(<span class="number">0.9</span>);<span class="comment">// 缩小</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;...</span><br></pre></td></tr></table></figure><blockquote><p>未完待续</p></blockquote><h2 id="4-鼠标拖动"><a href="#4-鼠标拖动" class="headerlink" title="4 鼠标拖动"></a>4 鼠标拖动</h2><blockquote><p>把<code>#glcanvas</code>和<code>#btnChange</code>的<code>position</code>和<code>z-index</code>先作调整</p></blockquote><p><a href="http://www.runoob.com/jqueryui/example-draggable.html">菜鸟教程</a></p><p>将按钮和画布绑定到父元素<code>div</code>,并且限定移动范围</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#drag1</span> </span><br><span class="line">&#123;</span><br><span class="line">  position: fixed; // 相对屏幕不动</span><br><span class="line">  <span class="selector-tag">width</span>: 300<span class="selector-tag">px</span>;</span><br><span class="line">  <span class="selector-tag">height</span>: 500<span class="selector-tag">px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#glcanvas</span> </span><br><span class="line">&#123;</span><br><span class="line">  <span class="attribute">background-size</span>: <span class="number">150%</span>;</span><br><span class="line">  <span class="attribute">background-position</span>: <span class="number">50%</span> <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">z-index</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">bottom</span>: <span class="number">0px</span>;</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">0px</span>;</span><br><span class="line">  position: relative; // 相对父元素定位</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#btnChange</span> </span><br><span class="line">&#123;</span><br><span class="line">  <span class="attribute">z-index</span>: <span class="number">2</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">30px</span>;</span><br><span class="line">  <span class="attribute">bottom</span>: <span class="number">0px</span>;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;//apps.bdimg.com/libs/jquery/1.10.2/jquery.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">/* 必须要jquery支持 */</span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;//apps.bdimg.com/libs/jqueryui/1.10.4/jquery-ui.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">/* 支持拖动 */</span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">$(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span></span></span><br><span class="line">&#123;</span><br><span class="line"><span class="javascript">  $( <span class="string">&quot;#drag1&quot;</span> ).draggable(&#123; <span class="attr">containment</span>: <span class="built_in">document</span>.body&#125;);<span class="comment">// 限制在&lt;body&gt;内拖拽</span></span></span><br><span class="line">&#125;);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>live2d的canvas的<code>id</code>是<code>glcanvas</code></p><h2 id="5"><a href="#5" class="headerlink" title="5"></a>5</h2><p>没什么用处,删了</p><h2 id="6-全局鼠标跟随"><a href="#6-全局鼠标跟随" class="headerlink" title="6 全局鼠标跟随"></a>6 全局鼠标跟随</h2><p><code>SampleApp1.js</code></p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">followPointer</span>(<span class="params">event</span>)</span></span><br><span class="line"><span class="function"></span>&#123;    </span><br><span class="line">  <span class="comment">// var rect = event.target.getBoundingClientRect(); // 没用了</span></span><br><span class="line">  <span class="keyword">var</span> the_div = <span class="built_in">document</span>.getElementById(<span class="string">&quot;drag1&quot;</span>); <span class="comment">// 获得父元素(可拖拽的div)</span></span><br><span class="line">  <span class="comment">// 这里不要直接用btn或canvas来计算偏移,因为他们还有一个父元素div</span></span><br><span class="line">  <span class="keyword">var</span> cx = event.clientX; </span><br><span class="line">  <span class="keyword">var</span> cy = event.clientY;</span><br><span class="line">  <span class="keyword">var</span> rleft = the_div.offsetLeft; <span class="comment">// 直接计算偏移,相对原代码会有&lt;0.5%的误差</span></span><br><span class="line">  <span class="keyword">var</span> rtop = the_div.offsetTop;</span><br><span class="line">  <span class="keyword">var</span> sx = transformScreenX(cx - rleft);</span><br><span class="line">  <span class="keyword">var</span> sy = transformScreenY(cy - rtop);</span><br><span class="line">  <span class="keyword">var</span> vx = transformViewX(cx - rleft);</span><br><span class="line">  <span class="keyword">var</span> vy = transformViewY(cy - rtop);</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">if</span> (LAppDefine.DEBUG_MOUSE_LOG)</span><br><span class="line">    l2dLog(<span class="string">&quot;onMouseMove device( x:&quot;</span> + cx + <span class="string">&quot; y:&quot;</span> + cy + <span class="string">&quot; ) view( x:&quot;</span> + vx + <span class="string">&quot; y:&quot;</span> + vy + <span class="string">&quot;)&quot;</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// if (thisRef.drag) 不要通过鼠标点击来转头</span></span><br><span class="line">  thisRef.lastMouseX = sx;</span><br><span class="line">  thisRef.lastMouseY = sy;</span><br><span class="line"></span><br><span class="line">  thisRef.dragMgr.setPoint(vx, vy); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>tansform...</code>什么的函数都是调用<code>Live2DFramework.js</code>中的函数,这里不深入研究</p><ul><li><p>TODO:在canvas外的跟随鼠标,在模型缩小后延迟增加.同时在多重canvas中还会互相影响响应时间</p><hr></li></ul><blockquote><p>对框架进行了重构,注意转换文件名</p></blockquote><h2 id="7-多重canvas"><a href="#7-多重canvas" class="headerlink" title="7 多重canvas"></a>7 多重canvas</h2><p>过程比较复杂,简单的说下思路,代码见<a href="https://github.com/NiaBie/live2d_SDK_for_web">github</a></p><ul><li>将<code>sampleApp</code>这个函数作为对象声明,你要多少个canvas,数组就多大</li></ul><p><code>JSManager.js</code></p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">document</span>.write(<span class="string">&quot;&lt;script src=\&quot;new/live2d.js\&quot;&gt;&lt;/script&gt;&quot;</span>);</span><br><span class="line"><span class="built_in">document</span>.write(<span class="string">&quot;&lt;script src=\&quot;new/LAppDefine.js\&quot;&gt;&lt;/script&gt;&quot;</span>);</span><br><span class="line"><span class="built_in">document</span>.write(<span class="string">&quot;&lt;script src=\&quot;new/Live2DFramework.js\&quot;&gt;&lt;/script&gt;&quot;</span>);</span><br><span class="line"><span class="built_in">document</span>.write(<span class="string">&quot;&lt;script src=\&quot;new/MatrixStack.js\&quot;&gt;&lt;/script&gt;&quot;</span>);</span><br><span class="line"><span class="built_in">document</span>.write(<span class="string">&quot;&lt;script src=\&quot;new/ModelSettingJson.js\&quot;&gt;&lt;/script&gt;&quot;</span>);</span><br><span class="line"><span class="built_in">document</span>.write(<span class="string">&quot;&lt;script src=\&quot;new/PlatformManager.js\&quot;&gt;&lt;/script&gt;&quot;</span>);</span><br><span class="line"><span class="built_in">document</span>.write(<span class="string">&quot;&lt;script src=\&quot;new/LAppModel.js\&quot;&gt;&lt;/script&gt;&quot;</span>);</span><br><span class="line"><span class="built_in">document</span>.write(<span class="string">&quot;&lt;script src=\&quot;new/LAppLive2DManager.js\&quot;&gt;&lt;/script&gt;&quot;</span>);</span><br><span class="line"><span class="built_in">document</span>.write(<span class="string">&quot;&lt;script src=\&quot;new/SampleApp.js\&quot;&gt;&lt;/script&gt;&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> minTips = <span class="number">2</span>;<span class="comment">// 严格对应编号</span></span><br><span class="line"><span class="keyword">var</span> maxTips = <span class="number">4</span>;</span><br><span class="line"><span class="keyword">var</span> thisMy = <span class="keyword">new</span> <span class="built_in">Array</span>();</span><br><span class="line"><span class="keyword">var</span> loadInterval = <span class="number">300</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sampleManager</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">var</span> i = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> (i = minTips; i &lt;= maxTips; i++)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">var</span> tempDrag = <span class="built_in">document</span>.createElement(<span class="string">&quot;div&quot;</span>);</span><br><span class="line">    tempDrag.id = <span class="string">&quot;drag_&quot;</span> + i;</span><br><span class="line">    tempDrag.className = <span class="string">&quot;drag&quot;</span>;</span><br><span class="line">    <span class="keyword">var</span> tempTip = <span class="built_in">document</span>.createElement(<span class="string">&quot;div&quot;</span>);</span><br><span class="line">    tempTip.id = <span class="string">&quot;tip_&quot;</span> + i;</span><br><span class="line">    tempTip.className = <span class="string">&quot;tips&quot;</span>;</span><br><span class="line">    tempTip.setAttribute(<span class="string">&quot;style&quot;</span>,</span><br><span class="line">        <span class="string">&quot;width: &quot;</span> + (LAppDefine[i].width + <span class="number">50</span>) + <span class="string">&quot;px;&quot;</span> + </span><br><span class="line">        <span class="string">&quot;left: &quot;</span> + (<span class="number">-25</span>) + <span class="string">&quot;px;&quot;</span> + </span><br><span class="line">        <span class="string">&quot;margin: 0px 0px &quot;</span> + (-LAppDefine[i].height / <span class="number">10</span>) + <span class="string">&quot;px 0px;&quot;</span></span><br><span class="line">        );</span><br><span class="line">    tempDrag.appendChild(tempTip);</span><br><span class="line">    <span class="keyword">var</span> tempCanvas = <span class="built_in">document</span>.createElement(<span class="string">&quot;canvas&quot;</span>);</span><br><span class="line">    tempCanvas.id = <span class="string">&quot;glcanvas_&quot;</span> + i;</span><br><span class="line">    tempCanvas.className = <span class="string">&quot;glcanvas&quot;</span>;</span><br><span class="line">    tempCanvas.width = LAppDefine[i].width;</span><br><span class="line">    tempCanvas.height = LAppDefine[i].height;</span><br><span class="line">    tempDrag.appendChild(tempCanvas);</span><br><span class="line">    <span class="keyword">var</span> tempButton = <span class="built_in">document</span>.createElement(<span class="string">&quot;button&quot;</span>);</span><br><span class="line">    tempButton.id = <span class="string">&quot;btnChange_&quot;</span> + i;</span><br><span class="line">    tempButton.className = <span class="string">&quot;active btnChange&quot;</span>;</span><br><span class="line">    tempDrag.appendChild(tempButton);</span><br><span class="line">    <span class="built_in">document</span>.body.appendChild(tempDrag);</span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="string">&quot;new sampleApp(&quot;</span> + i + <span class="string">&quot;)&quot;</span>, (i - minTips) * loadInterval);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">setTimeout</span>(<span class="string">&quot;myDrag()&quot;</span>, (maxTips - minTips + <span class="number">1</span>) * loadInterval);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">myDrag</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  $(<span class="string">&quot;.drag&quot;</span>).draggable(</span><br><span class="line">      &#123;</span><br><span class="line">containment: <span class="built_in">document</span>.body</span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>每个<code>sampleApp</code>要有一个<code>this.num</code>,对应<code>canvas</code>的编号</p><ul><li>在调用<code>sampleApp</code>的成员函数时,除了一些关于<code>id</code>的操作,基本上不要用到<code>this.num</code></li><li>在创建<code>LAppLive2DManager</code>,<code>L2DTargetPoint</code>,<code>L2DViewMatrix</code>时需要用<code>this.num</code>进行区分</li><li>在除<code>sampleApp</code>模块外,其他的部分除了在新建对象时,基本上不需要依靠<code>this.num</code>进行区分</li></ul></li><li><p>原来的<code>Live2D``window</code>全局变量和<code>LAppDefine</code>使用数组进行初始化</p></li><li><p>(待定)<code>Live2DFramework</code>中只需要对<code>getPlatformManager</code>和<code>setPlatformManager</code>进行区分,但是现在关于<code>getPlatformManager</code>的作用不是特别清楚</p></li></ul><h2 id="8-多重tips功能"><a href="#8-多重tips功能" class="headerlink" title="8 多重tips功能"></a>8 多重tips功能</h2><p><a href="https://imjad.cn/archives/lab/add-dynamic-poster-girl-with-live2d-to-your-blog-02">参考:jad</a></p><blockquote><p>需要<code>font-awesome</code>和<code>jquery</code></p></blockquote><ul><li>每一个<code>canvas</code>改为</li></ul><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;drag_2&quot;</span> <span class="attr">class</span>=<span class="string">&quot;drag&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;tips&quot;</span> <span class="attr">id</span>=<span class="string">&quot;tip_2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">canvas</span> <span class="attr">id</span>=<span class="string">&quot;glcanvas_2&quot;</span> <span class="attr">class</span>=<span class="string">&quot;glcanvas&quot;</span> <span class="attr">width</span>=<span class="string">200</span> <span class="attr">height</span>=<span class="string">300</span> <span class="attr">style</span>=<span class="string">&quot;border:dashed 1px #CCC&quot;</span> <span class="attr">draggable</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;btnChange_2&quot;</span> <span class="attr">class</span>=<span class="string">&quot;active btnChange&quot;</span>&gt;</span>Change Model<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>注意<code>tip_</code>的下标是从2开始,可以使用多个<code>tip_&#123;num&#125;.json</code>,也可以只用一个</p></blockquote><ul><li><code>&lt;head&gt;</code>加载css和js</li></ul><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">href</span>=<span class="string">&quot;src/tips/tips.css&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">async</span> <span class="attr">src</span>=<span class="string">&quot;src/tips/tips.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>注意要加<code>async</code></p></blockquote><ul><li>修改<code>tips.css</code></li></ul><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 其他的都没用了,删掉 */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.tips</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">250px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">70px</span>;</span><br><span class="line">  <span class="attribute">margin</span>: -<span class="number">20px</span> -<span class="number">25px</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">5px</span> <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">12px</span>;</span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">3px</span> <span class="number">15px</span> <span class="number">2px</span> <span class="built_in">rgba</span>(<span class="number">191</span>, <span class="number">158</span>, <span class="number">118</span>, <span class="number">0.2</span>);</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">  <span class="attribute">text-overflow</span>: ellipsis;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line"></span><br><span class="line">  <span class="attribute">animation-delay</span>: <span class="number">5s</span>;</span><br><span class="line">  <span class="attribute">animation-duration</span>: <span class="number">50s</span>;</span><br><span class="line">  <span class="attribute">animation-iteration-count</span>: infinite;</span><br><span class="line">  <span class="attribute">animation-name</span>: shake;</span><br><span class="line">  <span class="attribute">animation-timing-function</span>: ease-in-out;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#tip_2</span> &#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="built_in">rgba</span>(<span class="number">172</span>, <span class="number">133</span>, <span class="number">253</span>, <span class="number">0.5</span>);</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">172</span>, <span class="number">133</span>, <span class="number">253</span>, <span class="number">0.62</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 自己对多重canvas添加样式 */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">@keyframes</span> shake &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>把<code>tips.js</code>修改为支持多重canvas</li></ul><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 原来的带ajax的匿名函数删掉</span></span><br><span class="line"><span class="comment">// 对鼠标事件分别执行</span></span><br><span class="line">(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  $.getJSON(<span class="string">&quot;tips/tips.json&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">result</span>) </span>&#123;</span><br><span class="line">    $.each(result.mouseover, <span class="function"><span class="keyword">function</span> (<span class="params">index, tips</span>) </span>&#123;</span><br><span class="line">      $(<span class="built_in">document</span>).on(<span class="string">&quot;mouseover&quot;</span>, tips.selector, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> temp_num = <span class="built_in">Number</span>(tips.selector[tips.selector.length - <span class="number">1</span>]);</span><br><span class="line">        <span class="keyword">var</span> text = tips.text;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">Array</span>.isArray(tips.text)) text = tips.text[<span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * tips.text.length + <span class="number">1</span>) - <span class="number">1</span>];</span><br><span class="line">        text = text.render(&#123;</span><br><span class="line">          text: $(<span class="built_in">this</span>).text()</span><br><span class="line">        &#125;);</span><br><span class="line">        showMessage(text, <span class="number">3000</span>, temp_num);</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">    $.each(result.click, <span class="function"><span class="keyword">function</span> (<span class="params">index, tips</span>) </span>&#123;</span><br><span class="line">      $(<span class="built_in">document</span>).on(<span class="string">&quot;click&quot;</span>, tips.selector, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> temp_num = <span class="built_in">Number</span>(tips.selector[tips.selector.length - <span class="number">1</span>]);</span><br><span class="line">        <span class="keyword">var</span> text = tips.text;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">Array</span>.isArray(tips.text)) text = tips.text[<span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * tips.text.length + <span class="number">1</span>) - <span class="number">1</span>];</span><br><span class="line">        text = text.render(&#123;</span><br><span class="line">          text: $(<span class="built_in">this</span>).text()</span><br><span class="line">        &#125;);</span><br><span class="line">        showMessage(text, <span class="number">3000</span>, temp_num);</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;)();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 把一言api改成嘴臭api</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">showHitokoto</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  $.getJSON(<span class="string">&quot;tips/fuck.json&quot;</span> <span class="comment">// 注意json格式不要写错了</span></span><br><span class="line">  , <span class="function"><span class="keyword">function</span> (<span class="params">result</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> randf = <span class="built_in">Math</span>.random() * <span class="number">1000</span>;</span><br><span class="line">    <span class="keyword">var</span> randi = <span class="built_in">Math</span>.floor(randf * <span class="number">1000</span>);</span><br><span class="line">    <span class="keyword">var</span> shit_len = result.fuck[<span class="number">0</span>].shit.length;</span><br><span class="line">    showMessage(result.fuck[<span class="number">0</span>].shit[randi % shit_len], <span class="number">5000</span>, randi % maxTips + minTips);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 调用部分就不详细写了</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">showMessage</span>(<span class="params">text, timeout, num</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">Array</span>.isArray(text)) text = text[<span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * text.length + <span class="number">1</span>) - <span class="number">1</span>];</span><br><span class="line">  <span class="keyword">if</span> (num == <span class="number">-1</span>) &#123;</span><br><span class="line">    <span class="keyword">for</span> (num = minTips; num &lt;= maxTips; num++) &#123;</span><br><span class="line">      $(<span class="string">&quot;#tip_&quot;</span> + num).stop();</span><br><span class="line">      $(<span class="string">&quot;#tip_&quot;</span> + num).html(text).fadeTo(<span class="number">200</span>, <span class="number">1</span>);</span><br><span class="line">      <span class="keyword">if</span> (timeout === <span class="literal">null</span>) timeout = <span class="number">5000</span>;</span><br><span class="line">      hideMessage(timeout, num);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    $(<span class="string">&quot;#tip_&quot;</span> + num).stop();</span><br><span class="line">    $(<span class="string">&quot;#tip_&quot;</span> + num).html(text).fadeTo(<span class="number">200</span>, <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span> (timeout === <span class="literal">null</span>) timeout = <span class="number">5000</span>;</span><br><span class="line">    hideMessage(timeout, num);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">hideMessage</span>(<span class="params">timeout, num</span>) </span>&#123;</span><br><span class="line">  $(<span class="string">&quot;#tip_&quot;</span> + num).stop().css(<span class="string">&#x27;opacity&#x27;</span>, <span class="number">1</span>);</span><br><span class="line">  <span class="keyword">if</span> (timeout === <span class="literal">null</span>) timeout = <span class="number">5000</span>;</span><br><span class="line">  $(<span class="string">&quot;#tip_&quot;</span> + num).delay(timeout).fadeTo(<span class="number">200</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>参考<code>tips.json</code></li></ul><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;mouseover&quot;</span>: [&#123;</span><br><span class="line">      <span class="attr">&quot;selector&quot;</span>: <span class="string">&quot;#drag_2&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;text&quot;</span>: [<span class="string">&quot;干嘛呢你，快把手拿开&quot;</span>, <span class="string">&quot;鼠…鼠标放错地方了！&quot;</span>]</span><br><span class="line">    &#125;, &#123;</span><br><span class="line">      <span class="attr">&quot;selector&quot;</span>: <span class="string">&quot;#drag_3&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;text&quot;</span>: [<span class="string">&quot;干嘛呢你，快把手拿开&quot;</span>, <span class="string">&quot;鼠…鼠标放错地方了！&quot;</span>]</span><br><span class="line">    &#125;  ],</span><br><span class="line">  <span class="attr">&quot;click&quot;</span>: [&#123;</span><br><span class="line">    <span class="attr">&quot;selector&quot;</span>: <span class="string">&quot;#drag_2&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;text&quot;</span>: [<span class="string">&quot;是…是不小心碰到了吧&quot;</span>, <span class="string">&quot;萝莉控是什么呀&quot;</span>, <span class="string">&quot;你看到我的小熊了吗&quot;</span>, <span class="string">&quot;再摸的话我可要报警了！⌇●﹏●⌇&quot;</span>, <span class="string">&quot;110吗，这里有个变态一直在摸我(ó﹏ò｡)&quot;</span>]</span><br><span class="line">  &#125;, &#123;</span><br><span class="line">    <span class="attr">&quot;selector&quot;</span>: <span class="string">&quot;#drag_3&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;text&quot;</span>: [<span class="string">&quot;是…是不小心碰到了吧&quot;</span>, <span class="string">&quot;萝莉控是什么呀&quot;</span>, <span class="string">&quot;你看到我的小熊了吗&quot;</span>, <span class="string">&quot;再摸的话我可要报警了！⌇●﹏●⌇&quot;</span>, <span class="string">&quot;110吗，这里有个变态一直在摸我(ó﹏ò｡)&quot;</span>]</span><br><span class="line">  &#125;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>TODO<ul><li>仍有停不下来的bug</li></ul></li></ul><h2 id="9-放缩canvas大小"><a href="#9-放缩canvas大小" class="headerlink" title="9 放缩canvas大小"></a>9 放缩canvas大小</h2><p>这居然是个坑,由于官方的原因,在对<code>canvas</code>进行放缩的时候,根据<code>moc</code>文件(具体是建模过程中哪个步骤引起的不详)的不同,有的模型会实时进行比例放缩,有的不会,所以此功能暂时放弃</p>]]></content>
      
      
      
        <tags>
            
            <tag> javascript </tag>
            
            <tag> live2d </tag>
            
            <tag> html </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vscode笔记</title>
      <link href="/2019/04/12/vscode%E7%AC%94%E8%AE%B0/"/>
      <url>/2019/04/12/vscode%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="插件说明"><a href="#插件说明" class="headerlink" title="插件说明"></a>插件说明</h1><h2 id="插件位置"><a href="#插件位置" class="headerlink" title="插件位置"></a>插件位置</h2><ul><li>Linux:<code>~/.vscode/</code></li></ul><h2 id="部分插件使用"><a href="#部分插件使用" class="headerlink" title="部分插件使用"></a>部分插件使用</h2><h3 id="C-C-IntelliSense"><a href="#C-C-IntelliSense" class="headerlink" title="C/C++ IntelliSense"></a><code>C/C++ IntelliSense</code></h3><ul><li>Intelli Sense Cache Size(TODO)</li></ul><h1 id="软件设置"><a href="#软件设置" class="headerlink" title="软件设置"></a>软件设置</h1><h2 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h2><h3 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h3><ul><li>从定义处跳回:<code>ctrl</code>+<code>alt</code>+<code>-</code></li></ul><h3 id="settings-json"><a href="#settings-json" class="headerlink" title="settings.json"></a>settings.json</h3><ul><li>Linux:<code>~/.config/Code/User/</code></li></ul><h3 id="快捷键设定-settings-json"><a href="#快捷键设定-settings-json" class="headerlink" title="快捷键设定(settings.json)"></a>快捷键设定(settings.json)</h3><ul><li>列选快捷键:<code>&quot;editor.multiCursorModifier&quot;:&quot;alt&quot;</code></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> vscode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>live2d壁纸</title>
      <link href="/2019/04/07/live2d%E5%A3%81%E7%BA%B8/"/>
      <url>/2019/04/07/live2d%E5%A3%81%E7%BA%B8/</url>
      
        <content type="html"><![CDATA[<h2 id="打包"><a href="#打包" class="headerlink" title="打包"></a>打包</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">root&#x2F;-+-$&#123;name1&#125;&#x2F;-+-motions&#x2F;</span><br><span class="line">      |           |</span><br><span class="line">      |           +-textures&#x2F;</span><br><span class="line">      |           |</span><br><span class="line">      |           +-model.moc</span><br><span class="line">      |           |</span><br><span class="line">      |           +$&#123;name1&#125;.model.json</span><br><span class="line">      |           |</span><br><span class="line">      |           &#96;-...</span><br><span class="line">      |</span><br><span class="line">      +-$&#123;name2&#125;&#x2F;---...</span><br><span class="line">      | # 以下为手动打包时需要的文件</span><br><span class="line">      +-config.mlve</span><br><span class="line">      |</span><br><span class="line">      &#96;-last.mlve # 这个不知道干嘛的,长得和上面那个一模一样</span><br></pre></td></tr></table></figure><ul><li>手动</li></ul><p>人物压缩包后缀名<code>lpk</code>,背景<code>bpk</code></p><ul><li><p>config.mlve</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;type&quot;</span>:<span class="string">&quot;Live2D Model List&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;name&quot;</span>:<span class="string">&quot;$&#123;pkg_name&#125;&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;id&quot;</span>:<span class="string">&quot;$&#123;id_name&#125;&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;version&quot;</span>:<span class="string">&quot;1.0&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;encrypt&quot;</span>:<span class="string">&quot;false&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;list&quot;</span>:</span><br><span class="line">    [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;character&quot;</span>:<span class="string">&quot;$&#123;name1&#125;&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;costume&quot;</span>:</span><br><span class="line">      [</span><br><span class="line">      &#123;<span class="attr">&quot;name&quot;</span>:<span class="string">&quot;$&#123;costume_name&#125;&quot;</span>, <span class="attr">&quot;path&quot;</span>:<span class="string">&quot;$&#123;path&#125;/$&#123;name1&#125;.model.json&quot;</span>&#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><code>Live2D Config Generator</code></li></ul><p>选择<code>root/</code>,<code>生成配置文件</code>$\to$<code>生成mlve文件</code>$\to$<code>创建LPK文件</code></p><h2 id="Android"><a href="#Android" class="headerlink" title="Android"></a>Android</h2><ul><li>安装<code>Live2DViewerEX</code>2.0.4+版本</li></ul><h2 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h2><ul><li>安装<code>Live2d Wallpaper</code></li></ul><p>语言气泡还未开始研究</p><ul><li><code>Live2DViewerEX</code>+<code>Wallpaper Engine</code></li></ul><p>(未开坑),见<a href="http://www.bilibili.com/video/av7904265?p=2&share_medium=android&share_source=qq&bbid=XY69FCA600698489D9FFA223DD6F27B4C9601&ts=1554626603503">bilibili</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> live2d </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>live2d for web向导</title>
      <link href="/2019/04/07/live2d%E5%90%91%E5%AF%BC/"/>
      <url>/2019/04/07/live2d%E5%90%91%E5%AF%BC/</url>
      
        <content type="html"><![CDATA[<h2 id="教程"><a href="#教程" class="headerlink" title="教程"></a>教程</h2><style id="live2d_table"></style><table><thead><tr><th align="center">name</th><th align="center">site</th><th align="center">description</th></tr></thead><tbody><tr><td align="center">imjad</td><td align="center"><a href="https://imjad.cn/archives/lab/add-dynamic-poster-girl-with-live2d-to-your-blog-01">博客</a></td><td align="center">用unity提取apk的live2d模型</td></tr><tr><td align="center"></td><td align="center"><a href="https://imjad.cn/archives/lab/add-dynamic-poster-girl-with-live2d-to-your-blog-02">博客</a></td><td align="center">提示功能</td></tr><tr><td align="center"></td><td align="center"><a href="https://imjad.cn/archives/lab/add-dynamic-poster-girl-with-live2d-to-your-blog-03">博客</a></td><td align="center">3.0模型转2.0</td></tr><tr><td align="center">fghrsh</td><td align="center"><a href="https://www.fghrsh.net/post/123.html">博客</a></td><td align="center">参考API实现</td></tr></tbody></table><h2 id="插件-部分"><a href="#插件-部分" class="headerlink" title="插件(部分)"></a>插件(部分)</h2><table><thead><tr><th align="center">name</th><th align="center">site</th><th align="center">description</th></tr></thead><tbody><tr><td align="center">fghrsh</td><td align="center"><a href="https://github.com/fghrsh/live2d_demo">github</a></td><td align="center">3种方式加载API</td></tr><tr><td align="center"></td><td align="center"><a href="https://github.com/fghrsh/live2d_api">github</a></td><td align="center">API及如何搭建</td></tr><tr><td align="center">zhangshuqiao</td><td align="center"><a href="https://github.com/stevenjoezhang/live2d-widget">github</a></td><td align="center">由fghrsh的<code>live2d_demo</code>魔改而来</td></tr><tr><td align="center">EYHN</td><td align="center"><a href="https://github.com/EYHN/hexo-helper-live2d">github</a></td><td align="center">hexo的插件</td></tr><tr><td align="center">xiazeyu</td><td align="center"><a href="https://github.com/xiazeyu/live2d-widget.js">github</a></td><td align="center">官方SDK修改版</td></tr></tbody></table><h3 id="官方插件-搬运"><a href="#官方插件-搬运" class="headerlink" title="官方插件(搬运)"></a>官方插件(搬运)</h3><ul><li><a href="https://github.com/NiaBie/webGL">2.0</a></li><li><a href="https://github.com/NiaBie/cubism3SDK">3.0</a>:MD写的什么鬼,完全不会用</li></ul><h3 id="插件史"><a href="#插件史" class="headerlink" title="插件史"></a>插件史</h3><p>目前网络上只有2.0模型的插件(3.0的SDK鬼才会用)</p><ul><li><p><a href="http://sites.cybernoids.jp/cubism-sdk2_e/webgl2-1">官方live2d SDK for web</a></p></li><li><p><a href="https://github.com/xiazeyu/live2d-widget.js">xiazeyu</a></p></li><li><p><a href="https://github.com/journey-ad/live2d_src">jad</a></p></li><li><p><a href="https://github.com/fghrsh/live2d_demo">fghrsh</a></p></li></ul><p>只支持作者自己的API</p><ul><li><a href="https://github.com/EYHN/hexo-helper-live2d">EYHN</a></li></ul><p>用于hexo的版本</p>]]></content>
      
      
      
        <tags>
            
            <tag> live2d </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>live2d SDK WebGL 笔记</title>
      <link href="/2019/04/06/l2dwebGL%E7%AC%94%E8%AE%B0/"/>
      <url>/2019/04/06/l2dwebGL%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h2><ul><li>Bracket</li><li>vscode+live server(位置<code>~/.vscode/extensions</code>)</li></ul><blockquote><p><code>Live2D SDK WebGL 2.1.00</code>只支持2.0版本的模型</p></blockquote><h2 id="文件组织"><a href="#文件组织" class="headerlink" title="文件组织"></a>文件组织</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">webGL&#x2F;-+-framework&#x2F;---Live2DFramework.js</span><br><span class="line">       |</span><br><span class="line">       +-lib&#x2F;---live2d.min.js</span><br><span class="line">       |</span><br><span class="line">       +-ReadMe.txt</span><br><span class="line">       |</span><br><span class="line">       &#96;-sample&#x2F;-+-simple&#x2F;</span><br><span class="line">                 |</span><br><span class="line">                 +-SimpleMultiCanvas&#x2F;</span><br><span class="line">                 |</span><br><span class="line">                 &#96;-sampleApp1&#x2F;</span><br></pre></td></tr></table></figure><ul><li><p><code>live2d.min.js</code>:一个几千行的匿名函数,创建<code>window</code>的全局变量</p></li><li><p><code>Live2DFramework.js</code></p><ul><li>(296)<code>L2DBaseModel.prototype.hitTestSimple</code></li><li>(1274)<code>L2DTargetPoint.prototype.setPoint</code></li><li>(1354)<code>L2DViewMatrix()</code>:计算位置</li><li>(1390)<code>L2DViewMatrix.prototype.setMaxScale</code></li><li>(1398)<code>L2DViewMatrix.prototype.setMinScale</code></li><li>(1406)<code>L2DViewMatrix.prototype.isMaxScale</code></li><li>(1414)<code>L2DViewMatrix.prototype.isMinScale</code></li></ul></li></ul><h3 id="sampleApp1"><a href="#sampleApp1" class="headerlink" title="sampleApp1"></a>sampleApp1</h3><h4 id="文件组织-1"><a href="#文件组织-1" class="headerlink" title="文件组织"></a>文件组织</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sampleApp1&#x2F;-+-sampleApp1.html</span><br><span class="line">            |</span><br><span class="line">            +-assets&#x2F;-+-image&#x2F;</span><br><span class="line">            |         |</span><br><span class="line">            |         &#96;-live2d&#x2F;---$&#123;name&#125;&#x2F;-+-$&#123;name&#125;.moc</span><br><span class="line">            |                              |</span><br><span class="line">            |                              +-$&#123;name&#125;.model.json</span><br><span class="line">            |                              |</span><br><span class="line">            |                              +-textures&#x2F;---$&#123;你的材质图&#125;.png</span><br><span class="line">            |                              |</span><br><span class="line">            |                              +-modtions&#x2F;---$&#123;动作&#125;.mtn</span><br><span class="line">            |                              | # 以下可选</span><br><span class="line">            |                              +-expressions&#x2F;---$&#123;没研究过&#125;.json</span><br><span class="line">            |                              |</span><br><span class="line">            |                              +-sounds&#x2F;--$&#123;你懂的&#125;.mp3</span><br><span class="line">            |                              |</span><br><span class="line">            |                              +-$&#123;name&#125;.physics # 不知道干嘛的</span><br><span class="line">            |                              |</span><br><span class="line">            |                              &#96;-$&#123;name&#125;.pose.json # 不知道干嘛的</span><br><span class="line">            |</span><br><span class="line">            &#96;-src&#x2F;-+-SampleApp1.js</span><br><span class="line">                   |</span><br><span class="line">                   +-LAppDefine.js</span><br><span class="line">                   |</span><br><span class="line">                   +-LAppLive2DManager.js</span><br><span class="line">                   |</span><br><span class="line">                   +-LAppModel.js</span><br><span class="line">                   |</span><br><span class="line">                   +-PlatformManager.js</span><br><span class="line">                   |</span><br><span class="line">                   &#96;-utils&#x2F;-+-MatrixStack.js</span><br><span class="line">                            |</span><br><span class="line">                            &#96;-ModelSettingJson.js</span><br></pre></td></tr></table></figure><h4 id="引用关系"><a href="#引用关系" class="headerlink" title="引用关系"></a>引用关系</h4><ul><li>html中<code>id</code>的引用关系</li></ul><table><thead><tr><th align="center"><code>id</code></th><th align="center">引用位置</th></tr></thead><tbody><tr><td align="center"><code>drag_&#123;num&#125;</code>(可拖动元素)</td><td align="center"><code>SampleApp1.js</code>,必须</td></tr><tr><td align="center"><code>glcanvas_&#123;num&#125;</code></td><td align="center"><code>PlatformManager.js</code>,<code>SampleApp.js</code>,必须</td></tr><tr><td align="center"><code>btnChange_&#123;num&#125;</code></td><td align="center"><code>SampleApp1.js</code>,必须</td></tr></tbody></table><ul><li><code>live2d.min.js</code>中声明的变量名引用情况</li></ul><table><thead><tr><th align="center">变量名</th><th align="center">引用位置</th></tr></thead><tbody><tr><td align="center"><code>UtSystem</code></td><td align="center"><code>Live2DFramework.js</code>,<code>LAppModel.js</code></td></tr><tr><td align="center"><code>UtDebug</code></td><td align="center"><code>Live2DFramework.js</code></td></tr><tr><td align="center"><code>LDTransform</code></td><td align="center"></td></tr><tr><td align="center"><code>LDGL</code></td><td align="center"></td></tr><tr><td align="center"><code>Live2D</code></td><td align="center"><code>Live2DFramework.js</code>,<code>LAppLive2DManager.js</code>,<code>SampleApp1.js</code>,必须</td></tr><tr><td align="center"><code>Live2DModelWebGL</code></td><td align="center"><code>PlatformManager.js</code>,必须</td></tr><tr><td align="center"><code>Live2DModelJS</code></td><td align="center"></td></tr><tr><td align="center"><code>Live2DMotion</code></td><td align="center"><code>live2d.min.js</code>,<code>Live2DFramework.js</code></td></tr><tr><td align="center"><code>MotionQueueManager</code></td><td align="center"><code>live2d.min.js</code>,<code>Live2DFramework.js</code></td></tr><tr><td align="center"><code>PhysicsHair</code></td><td align="center"><code>Live2DFramework.js</code></td></tr><tr><td align="center"><code>AMotion</code></td><td align="center"><code>Live2DFramework.js</code></td></tr><tr><td align="center"><code>PartsDataID</code></td><td align="center"><code>Live2DFramework.js</code></td></tr><tr><td align="center"><code>DrawDataID</code></td><td align="center"></td></tr><tr><td align="center"><code>BaseDataID</code></td><td align="center"></td></tr><tr><td align="center"><code>ParamID</code></td><td align="center"></td></tr></tbody></table><ul><li><code>Live2DFramework.js</code>中声明的变量名引用情况</li></ul><table><thead><tr><th align="center">变量名</th><th align="center">引用位置</th></tr></thead><tbody><tr><td align="center"><code>L2DBaseModel</code></td><td align="center"><code>Live2DFramework.js</code>,<code>LAppModel.js</code></td></tr><tr><td align="center"><code>L2DExpressionMotion</code></td><td align="center"><code>Live2DFramework.js</code>,必须,如果不修改变量名,那么多重canvas的先加载者的第一个模型不能够响应鼠标点击事件</td></tr><tr><td align="center"><code>L2DExpressionParam</code></td><td align="center"><code>Live2DFramework.js</code></td></tr><tr><td align="center"><code>L2DEyeBlink</code></td><td align="center"><code>Live2DFramework.js</code>,<code>LAppModel.js</code></td></tr><tr><td align="center"><code>L2DMatrix44</code></td><td align="center"><code>Live2DFramework.js</code>,<code>SampleApp1.js</code></td></tr><tr><td align="center"><code>L2DModelMatrix</code></td><td align="center"><code>Live2DFramework.js</code></td></tr><tr><td align="center"><code>L2DMotionManager</code></td><td align="center"><code>Live2DFramework.js</code></td></tr><tr><td align="center"><code>L2DPhysics</code></td><td align="center"><code>Live2DFramework.js</code></td></tr><tr><td align="center"><code>L2DPose</code></td><td align="center"><code>Live2DFramework.js</code>,必须,否则canvas的第一个模型<code>Pose</code>会加载错误</td></tr><tr><td align="center"><code>L2DPartsParam</code></td><td align="center"><code>Live2DFramework.js</code></td></tr><tr><td align="center"><code>L2DTargetPoint</code></td><td align="center"><code>Live2DFramework.js</code>,<code>SampleApp1.js</code></td></tr><tr><td align="center"><code>L2DViewMatrix</code></td><td align="center"><code>Live2DFramework.js</code>,<code>SampleApp1.js</code></td></tr><tr><td align="center"><code>Live2DFramework.setPlatformManager</code></td><td align="center"><code>LAppLive2DManager.js</code>,必须</td></tr><tr><td align="center"><code>Live2DFramework.getPlatformManager</code></td><td align="center"><code>ModelSettingJson.js</code>,<code>LAppModel.js</code>,<code>Live2DFramework.js</code>,不详</td></tr></tbody></table><ul><li>其余js声明的变量名引用情况</li></ul><table><thead><tr><th align="center">变量名</th><th align="center">引用位置</th><th align="center">声明位置</th></tr></thead><tbody><tr><td align="center"><code>LAppDefine</code></td><td align="center"><code>SampleApp1.js</code>,<code>LAppLive2DManager.js</code>,<code>LAppModel.js</code>,必须</td><td align="center"><code>LAppDefine.js</code></td></tr><tr><td align="center"><code>LAppLive2DManager</code></td><td align="center"><code>LAppLive2DManager.js</code>,<code>SampleApp1.js</code>,必须</td><td align="center"><code>LAppLive2DManager.js</code></td></tr><tr><td align="center"><code>LAppModel</code></td><td align="center"><code>LAppModel.js</code>,<code>LAppLive2DManager.js</code>,必须</td><td align="center"><code>LAppModel.js</code></td></tr><tr><td align="center"><code>PlatformManager</code></td><td align="center"><code>LAppLive2DManager.js</code>,<code>PlatformManager.js</code>,必须</td><td align="center"><code>PlatformManager.js</code></td></tr><tr><td align="center"><code>ModelSettingJson</code></td><td align="center"><code>ModelSettingJson.js</code>,<code>LAppModel.js</code>,必须</td><td align="center"><code>ModelSettingJson.js</code></td></tr><tr><td align="center"><code>MatrixStack</code></td><td align="center"><code>MatrixStack.js</code>,<code>LAppModel.js</code>,<code>SampleApp1.js</code></td><td align="center"><code>MatrixStack.js</code></td></tr></tbody></table><ul><li><code>SampleApp1.js</code>中的变量</li></ul><table><thead><tr><th align="center">对象名</th><th align="center">引用</th></tr></thead><tbody><tr><td align="center"><code>this.live2DMgr = new LAppLive2DManager();</code></td><td align="center">必须</td></tr><tr><td align="center"><code>this.gl</code></td><td align="center"></td></tr><tr><td align="center"><code>this.dragMgr = new L2DTargetPoint();</code></td><td align="center">必须,否则无法判定相对鼠标位置</td></tr><tr><td align="center"><code>this.viewMatrix = new L2DViewMatrix();</code></td><td align="center">必须,单个放缩要用</td></tr><tr><td align="center"><code>this.projMatrix = new L2DMatrix44();</code></td><td align="center">必须,计算画布大小要用</td></tr><tr><td align="center"><code>this.deviceToScreen = new L2DMatrix44();</code></td><td align="center"></td></tr><tr><td align="center"><code>this.drag</code></td><td align="center">必须,否则无法判定相对鼠标位置</td></tr><tr><td align="center"><code>this.oldLen</code></td><td align="center"></td></tr><tr><td align="center"><code>this.lastMouseX</code>,<code>this.lastMouseY</code></td><td align="center"></td></tr><tr><td align="center"><code>this.isModelShown</code></td><td align="center">必须,和按键刷新有关</td></tr><tr><td align="center"><code>this.canvas</code></td><td align="center">必须,否则无法加载材质</td></tr></tbody></table><ul><li><code>SampleApp1.js</code>中的函数</li></ul><table><thead><tr><th align="center">函数名</th><th align="center">引用位置</th></tr></thead><tbody><tr><td align="center"><code>startDraw</code></td><td align="center"><code>SampleApp1.js</code>,必须</td></tr><tr><td align="center">…</td><td align="center"><code>SampleApp1.js</code>,必须(未验证)</td></tr><tr><td align="center"><code>transform...</code></td><td align="center">非必须,在刚加载的时候会有一堆报错,但不影响使用</td></tr><tr><td align="center"><code>getWebGLContext</code></td><td align="center"><code>PlatformManager.js</code>,必须,否则加载不出模型</td></tr><tr><td align="center"><code>l2dError</code></td><td align="center"></td></tr></tbody></table><h4 id="文件说明"><a href="#文件说明" class="headerlink" title="文件说明"></a>文件说明</h4><h5 id="LAppDefine-js"><a href="#LAppDefine-js" class="headerlink" title="LAppDefine.js"></a><code>LAppDefine.js</code></h5><ul><li><code>var LAppDefine</code>:全局变量<ul><li><code>VIEW_MAX_SCALE</code>:最大倍数</li><li><code>VIEW_MIN_SCALE</code>:最小倍数</li><li>…</li><li><code>BACK_IMAGE_NAME</code>:背景图</li><li><code>MODEL_&#123;NAME&#125;</code>:模型名</li><li><code>MOTION_GROUP_&#123;EVENT&#125;</code>:对应<code>motions</code></li><li><code>HIT_AREA_&#123;AREA&#125;</code>:对应<code>hit_areas</code>的<code>name</code></li></ul></li></ul><h5 id="LAppLive2DManager-js"><a href="#LAppLive2DManager-js" class="headerlink" title="LAppLive2DManager.js"></a><code>LAppLive2DManager.js</code></h5><ul><li><code>LAppLive2DManager()</code>:初始化</li><li><code>LAppLive2DManager.prototype.createModel</code>:应该就是<code>this.createModel()</code></li><li><code>LAppLive2DManager.prototype.changeModel</code>:切换模型的主体部分</li><li><code>LAppLive2DManager.prototype.getModel</code></li><li><code>LAppLive2DManager.prototype.releaseModel</code>:应该是<code>this.releaseModel()</code></li><li>…</li><li><code>LAppLive2DManager.prototype.tapEvent</code>:处理点击事件</li></ul><h5 id="SampleApp1-js"><a href="#SampleApp1-js" class="headerlink" title="SampleApp1.js"></a><code>SampleApp1.js</code></h5><ul><li>…</li><li><code>sampleApp1()</code>:每次加载1个模型之后初始化</li><li>(42)<code>initL2dCanvas(canvasId)</code>:增加监听事件</li><li>(73)<code>init()</code><ul><li><code>this.deviceToScreen</code>:用于跟踪鼠标</li><li><code>this.projMatrix.multScale</code>:比例放缩</li><li><code>this.gl</code>:设置画图的画布</li></ul></li><li>…</li><li><code>changeModel()</code>:<code>this.live2DMgr.count ++</code>(在<code>LAppLive2DManager.js</code>中<code>var no = parseInt(this.count % $&#123;model_num&#125;)</code>)并调用<code>this.live2DMgr.changeModel(this.gl)</code></li><li><code>modelScaling(scale)</code></li><li>(261)<code>followPointer(event)</code>:在得到<code>darg</code>之后调用<code>setPoint(x, y)</code></li><li>(284)<code>lookFront()</code>:刷新<code>drag</code>(默认是关闭鼠标点击事件),并重置头部方向(<code>Live2DFramework.js</code>的<code>setPoint(x, y)</code>)</li><li>(294)<code>mouseEvent(e)</code>:判断鼠标的事件</li><li><code>touchEvent(e)</code></li><li>(384)<code>transformViewX(deviceX)</code></li><li><code>transformViewY(deviceY)</code></li><li><code>transformScreenX(deviceX)</code></li><li>(404)<code>transformScreenY(deviceY)</code></li><li>(411)<code>getWebGLContext</code>:选择绘制的canvas(但是不计算比例放缩)</li><li>…</li></ul><h5 id="LAppModel-js-主要是动作-表情的加载"><a href="#LAppModel-js-主要是动作-表情的加载" class="headerlink" title="LAppModel.js:主要是动作,表情的加载"></a><code>LAppModel.js</code>:主要是动作,表情的加载</h5><ul><li>…</li><li><code>LAppModel.prototype.setRandomExpression</code></li><li><code>LAppModel.prototype.startRandomMotion</code></li><li><code>LAppModel.prototype.startMotions</code></li><li>…</li><li><code>LAppModel.prototype.setExpression</code></li><li>…</li><li><code>LAppModel.prototype.hitTest(id, testX, testY)</code>:逐一判断点击部位的<code>name</code>,然后获取<code>id</code>,并返回<code>hitTestSimple(drawID, testX, testY)</code></li></ul><h5 id="PlatformManager-js"><a href="#PlatformManager-js" class="headerlink" title="PlatformManager.js"></a><code>PlatformManager.js</code></h5><ul><li>(56)<code>PlatformManager.prototype.loadModel</code>:如果次步出错,那么加载出来的模型是一团黑</li><li>(71)<code>PlatformManager.prototype.loadTexture</code></li></ul><h5 id="MatrixStack-js-看不懂在干嘛…"><a href="#MatrixStack-js-看不懂在干嘛…" class="headerlink" title="MatrixStack.js:看不懂在干嘛…"></a><code>MatrixStack.js</code>:看不懂在干嘛…</h5><ul><li>…</li></ul><h5 id="ModelSettingJson-js"><a href="#ModelSettingJson-js" class="headerlink" title="ModelSettingJson.js"></a><code>ModelSettingJson.js</code></h5><ul><li>…</li><li><code>ModelSettingJson.prototype.getHitAreaNum</code>:获取<code>json</code>文件中<code>hit_areas</code>的项目个数</li><li><code>ModelSettingJson.prototype.getHitAreaID</code>:获取<code>json</code>文件中<code>hit_areas</code>中的<code>id</code></li><li><code>ModelSettingJson.prototype.getHitAreaName</code>:获取…的<code>name</code></li><li>…</li><li><code>ModelSettingJson.prototype.getMotionNum</code>:获取<code>json</code>文件中<code>mostions</code>的个数(待确定)</li><li><code>ModelSettingJson.prototype.getMotionFile</code></li><li>…</li></ul><h2 id="文件合并顺序"><a href="#文件合并顺序" class="headerlink" title="文件合并顺序"></a>文件合并顺序</h2><ul><li>可行方案1: <code>LAppDefine</code>-&gt;<code>live2d</code>-&gt;<code>LAppLive2DManager</code>-&gt;<code>Live2DFramework</code>-&gt;其他-&gt;<code>SampleApp1</code></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> javascript </tag>
            
            <tag> live2d </tag>
            
            <tag> html </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>gcc笔记</title>
      <link href="/2019/04/03/gcc%E7%AC%94%E8%AE%B0/"/>
      <url>/2019/04/03/gcc%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h1><ul><li><code>-ldl</code>:<a href="http://refspecs.linuxbase.org/LSB_3.1.1/LSB-Core-generic/LSB-Core-generic/libdl.html">libdl</a></li></ul><p>the dynamic linking library,如果程序中使用<code>dlopen</code>,<code>dlsym</code>,<code>dlclose</code>,<code>dlerror</code>**加载动态库,需要设置选项<code>-ldl</code></p><h2 id="添加库-头文件"><a href="#添加库-头文件" class="headerlink" title="添加库/头文件"></a>添加库/头文件</h2><p><a href="https://blog.csdn.net/arackethis/article/details/43342655">CSDN</a></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">gcc -I/include -L/lib -lsb</span><br></pre></td></tr></table></figure><ul><li><code>I</code>:头文件位置</li><li><code>L</code>:库位置</li><li><code>l</code>:库名</li></ul><h1 id="查看可执行文件以来的动态链接库"><a href="#查看可执行文件以来的动态链接库" class="headerlink" title="查看可执行文件以来的动态链接库"></a>查看可执行文件以来的动态链接库</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ldd a.out</span><br></pre></td></tr></table></figure><ul><li>显示系统信息</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">uname -r</span><br></pre></td></tr></table></figure><ul><li>安装内核头文件</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt install linux-headers-5.0.0-36-generic <span class="comment"># 你的版本号</span></span><br></pre></td></tr></table></figure><ul><li>定位头文件</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">locate slab.h</span><br></pre></td></tr></table></figure><ul><li>查找头文件</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt install apt-file</span><br><span class="line">sudo apt-file update</span><br><span class="line">apt-file search <span class="string">&quot;.h&quot;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> gcc </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Cubism笔记</title>
      <link href="/2019/04/03/Cubism%E7%AC%94%E8%AE%B0/"/>
      <url>/2019/04/03/Cubism%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="下载链接"><a href="#下载链接" class="headerlink" title="下载链接"></a>下载链接</h2><p><a href="https://pan.baidu.com/s/1Ss4_X4WZuVCZplrbQ_yapA">提取码:ur3a</a></p><h2 id="Live2d-Cubism-3-3-版本破解方法"><a href="#Live2d-Cubism-3-3-版本破解方法" class="headerlink" title="Live2d Cubism 3.3.**版本破解方法"></a><code>Live2d Cubism 3.3.**</code>版本破解方法</h2><ul><li>windows</li></ul><p>删除<code>C:/ProgramData/Live2D</code>和<code>C:/ProgramData/Reprise</code>,可以无限试用</p><blockquote><p>版本低于<code>3.3.00</code>的暂时只能无限重装虚拟机来使用…</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> live2d </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Discrete Mathematics for CS</title>
      <link href="/2019/03/30/Discrete-Mathematics-for-CS/"/>
      <url>/2019/03/30/Discrete-Mathematics-for-CS/</url>
      
        <content type="html"><![CDATA[<h3 id="2-2-Inverses-and-Greatest-Common-Divisors"><a href="#2-2-Inverses-and-Greatest-Common-Divisors" class="headerlink" title="2.2 Inverses and Greatest Common Divisors"></a>2.2 Inverses and Greatest Common Divisors</h3><h4 id="Lemma-2-8"><a href="#Lemma-2-8" class="headerlink" title="Lemma 2.8"></a>Lemma 2.8</h4><p>The equation<br>$$ a{\cdot}_nx = 1 $$<br>has a solution in $\mathbb{Z}_{n}$ if and only there exist integers $x$ and $y$ such that<br>$$ ax + ny = 1 $$</p><h4 id="Corollary-2-10"><a href="#Corollary-2-10" class="headerlink" title="Corollary 2.10"></a>Corollary 2.10</h4><p>If $a\in\mathbb{Z}_{n}$ and $x$ and $y$ are integers such that $ax + ny = 1$, then the multiplicative inverse of $a$ in $\mathbb{Z}_{n}$ is $x$ mod $n$</p><h4 id="Lemma-2-11"><a href="#Lemma-2-11" class="headerlink" title="Lemma 2.11"></a>Lemma 2.11</h4><p>Given $a$ and $n$, if there exist integers $x$ and $y$ such that $ax+ny=1$, then $\gcd(a,n)=1$</p><h4 id="Lemma-2-13"><a href="#Lemma-2-13" class="headerlink" title="Lemma 2.13"></a>Lemma 2.13</h4><p>If $j,k,q$, and $r$ are positive integers such that $k=jq+r$, then<br>$$ \gcd(j,k) = \gcd(r,j) $$</p><h4 id="Euclid’s-extended-GCD-algorithm"><a href="#Euclid’s-extended-GCD-algorithm" class="headerlink" title="Euclid’s extended GCD algorithm"></a>Euclid’s extended GCD algorithm</h4><ul><li>本书版</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">gcd_cs</span><span class="params">(<span class="keyword">int</span> j, <span class="keyword">int</span> k, <span class="keyword">int</span> ans[<span class="number">3</span>])</span><span class="comment">// j &lt; k(为什么?)且j, k为正数</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">int</span> q[MAXI], j_arr[MAXI];</span><br><span class="line">  <span class="keyword">int</span> r = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">if</span> (j == k)</span><br><span class="line">  &#123;</span><br><span class="line">    ans[<span class="number">0</span>] = j, ans[<span class="number">1</span>] = <span class="number">1</span>, ans[<span class="number">2</span>] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    j_arr[i] = j;</span><br><span class="line">  <span class="keyword">do</span></span><br><span class="line">  &#123;</span><br><span class="line">    q[i] = k / j_arr[i];<span class="comment">// low(k / j[i])</span></span><br><span class="line">    r = k % j_arr[i];</span><br><span class="line">    k = j_arr[i];</span><br><span class="line">    j_arr[i + <span class="number">1</span>] = r;</span><br><span class="line">    i ++;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">while</span> (r != <span class="number">0</span>);</span><br><span class="line">  i --;</span><br><span class="line">  <span class="keyword">int</span> gcd = j_arr[i];<span class="comment">// 已经找到gcd(j, k),现找x, y</span></span><br><span class="line">  <span class="keyword">int</span> y[MAXI], x[MAXI];</span><br><span class="line">  y[i] = <span class="number">0</span>, x[i] = <span class="number">1</span>;</span><br><span class="line">  i --;</span><br><span class="line">  <span class="keyword">while</span> (i &gt;= <span class="number">0</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    y[i] = x[i + <span class="number">1</span>];</span><br><span class="line">    x[i] = y[i + <span class="number">1</span>] - q[i] * x[i + <span class="number">1</span>];</span><br><span class="line">    i --;</span><br><span class="line">  &#125;</span><br><span class="line">  ans[<span class="number">0</span>] = gcd, ans[<span class="number">1</span>] = x[<span class="number">0</span>], ans[<span class="number">2</span>] = y[<span class="number">0</span>];</span><br><span class="line">  <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>算法导论版</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">gcd_tc</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> ans[<span class="number">3</span>])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (b == <span class="number">0</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    ans[<span class="number">0</span>] = a, ans[<span class="number">1</span>] = <span class="number">1</span>, ans[<span class="number">2</span>] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    gcd_tc(b, a % b, ans);</span><br><span class="line">    <span class="keyword">int</span> temp = ans[<span class="number">1</span>];</span><br><span class="line">    ans[<span class="number">1</span>] = ans[<span class="number">2</span>], ans[<span class="number">2</span>] = temp - (a / b) * ans[<span class="number">2</span>];</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Theorem-2-15"><a href="#Theorem-2-15" class="headerlink" title="Theorem 2.15"></a>Theorem 2.15</h4><p>Two positive integers $j$ and $k$ have greatest common divisor 1 iff there are integers $x$ and $y$ such that $hx+ky=1$</p>]]></content>
      
      
      <categories>
          
          <category> 问题求解 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Algorithms</title>
      <link href="/2019/03/30/Algorithms/"/>
      <url>/2019/03/30/Algorithms/</url>
      
        <content type="html"><![CDATA[<h2 id="31-数论算法"><a href="#31-数论算法" class="headerlink" title="31 数论算法"></a>31 数论算法</h2><h3 id="31-3-模运算"><a href="#31-3-模运算" class="headerlink" title="31.3 模运算"></a>31.3 模运算</h3><h4 id="欧拉函数"><a href="#欧拉函数" class="headerlink" title="欧拉函数"></a>欧拉函数</h4><p>$\mathbb{Z}_n^*$的规模表示为$\phi(n)$,称为<strong>欧拉phi函数</strong>,满足下式<br>$$\phi(n)=n\prod_{\text{$p:p$是素数且$p|n$}}(1-\dfrac{1}{p})$$</p><h3 id="31-4-求解模线性方程"><a href="#31-4-求解模线性方程" class="headerlink" title="31.4 求解模线性方程"></a>31.4 求解模线性方程</h3><h4 id="定理-31-20"><a href="#定理-31-20" class="headerlink" title="定理 31.20"></a>定理 31.20</h4><p>对任意正整数$a$和$n$,如果$d=\gcd(a,n)$,则在$\mathbb{Z}_n$中<br>$$\langle a\rangle=\langle d\rangle=\{0,d,2d,…,((n/d)-1)d\}$$<br>因此$|\langle a\rangle|=n/d$</p><h4 id="推论-31-21"><a href="#推论-31-21" class="headerlink" title="推论 31.21"></a>推论 31.21</h4><p>当且仅当$d|b$时,方程$ax\equiv b(\mod n)$对于未知量$x$有解,这里$d=\gcd(a,n)$</p><h4 id="推论-31-22"><a href="#推论-31-22" class="headerlink" title="推论 31.22"></a>推论 31.22</h4><p>方程$ax\equiv b(\mod n)$</p><ul><li>或者对模$n$有$d$个不同的解</li><li>或者无解<br>这里$d=\gcd(a,n)$</li></ul><h4 id="定理-31-23"><a href="#定理-31-23" class="headerlink" title="定理 31.23"></a>定理 31.23</h4><p>令$d=\gcd(a,n)$,假设对某些整数$x’$和$y’$,有$d=ax’+ny’$(例如Extended-Euclid所计算出的结果).如果$d|b$,则方程$ax\equiv b(\mod n)$有一个解的值为$x_0$,这里<br>$$x_0=x’(b/d)\mod n$$</p><h4 id="定理-31-24"><a href="#定理-31-24" class="headerlink" title="定理 31.24"></a>定理 31.24</h4><p>假设方程$ax\equiv b(\mod n)$有解(即$d|b$,这里$d=\gcd(a,n)$),且$x_0$是该方程的任意一个解.因此,该方程对模$n$恰有$d$个不同的解,分别为$x_i=x_0+i(n/d),i=0,1,…,d-1$</p><h4 id="推论-31-25"><a href="#推论-31-25" class="headerlink" title="推论 31.25"></a>推论 31.25</h4><p>对任意$n&gt;1$,如果$\gcd(a,n)=1$,则方程$ax\equiv b(\mod n)$对模$n$有唯一解</p><h4 id="推论-31-26"><a href="#推论-31-26" class="headerlink" title="推论 31.26"></a>推论 31.26</h4><p>对任意$n&gt;1$,如果$\gcd(a,n)=1$,则方程$ax\equiv1(\mod n)$对模$n$有唯一解;否则方程无解</p><h3 id="31-5-中国余数定理"><a href="#31-5-中国余数定理" class="headerlink" title="31.5 中国余数定理"></a>31.5 中国余数定理</h3><h4 id="定理-31-27-中国余数定理"><a href="#定理-31-27-中国余数定理" class="headerlink" title="定理 31.27 中国余数定理"></a>定理 31.27 中国余数定理</h4><p>令$n=n_1n_2…n_k$,其中因子$n_i$两两互质.考虑以下对应关系<br>$$a\leftrightarrow(a_1,a_2,…,a_k)\qquad(31.27)$$<br>这里$a\in\mathbb{Z}_n,a_i\in\mathbb{Z}_{n_i}$,而且对$i=1,2,…,k$<br>$$a_i=a\mod n_i$$<br>因此映射(31.27)是一个在$\mathbb{Z}_n$与笛卡尔积$\mathbb{Z}_{n_1}\times\mathbb{Z}_{n_2}\times…\times\mathbb{Z}_{n_k}$之间的双射.通过在合适的系统中对每个坐标位置独立地执行操作,对$\mathbb{Z}_n$中元素所执行的运算可以等价地作用于对应的$k$元组.也就是说,如果<br>$$a\leftrightarrow(a_1,a_2,…,a_k)$$<br>$$b\leftrightarrow(b_1,b_2,…,b_k)$$<br>那么<br>$$(a+b)\mod n\leftrightarrow((a_1+b_1)\mod n_1,…,(a_k+b_k)\mod n_k)$$<br>$$(a-b)\mod n\leftrightarrow((a_1-b_1)\mod n_1,…,(a_k-b_k)\mod n_k)$$<br>$$(ab)\mod n\leftrightarrow((a_1b_1)\mod n_1,…,(a_kb_k)\mod n_k)$$</p><h4 id="推论-31-28"><a href="#推论-31-28" class="headerlink" title="推论 31.28"></a>推论 31.28</h4><p>如果$n_1,n_2,…,n_k$两两互质,且$n=n_1n_2…n_k$,则对任意整数$a_1,a_2,…,a_k$,关于未知量$x$的联立方程组<br>$$x\equiv a_i(\mod n_i),i=1,2,…,k$$<br>对模$n$有唯一解</p><h4 id="推论-31-29"><a href="#推论-31-29" class="headerlink" title="推论 31.29"></a>推论 31.29</h4><p>如果$n_1,n_2,…,n_k$两两互质,$n=n_1n_2…n_k$,则对所有整数$x$和$a$<br>$$x\equiv a(\mod n_i)$$<br>(其中$i=1,2,…,k$)当且仅当<br>$$x\equiv a(\mod n)$$</p><h3 id="31-6-元素的幂"><a href="#31-6-元素的幂" class="headerlink" title="31.6 元素的幂"></a>31.6 元素的幂</h3><h4 id="定理-31-30-欧拉定理"><a href="#定理-31-30-欧拉定理" class="headerlink" title="定理 31.30 欧拉定理"></a>定理 31.30 欧拉定理</h4><p>对于任意整数$n&gt;1,a^{\phi(n)}\equiv1(\mod n)$对所有$a\in\mathbb{Z}_n^*$都成立</p><h4 id="定理-31-31-费马定理"><a href="#定理-31-31-费马定理" class="headerlink" title="定理 31.31 费马定理"></a>定理 31.31 费马定理</h4><p>如果$p$是素数,则$a^{p-1}\equiv1(\mod p)$对所有$a\in\mathbb{Z}_p^*$都成立</p><h4 id="定理-31-32"><a href="#定理-31-32" class="headerlink" title="定理 31.32"></a>定理 31.32</h4><blockquote><p>如果ord$_n(g)=|\mathbb{Z}_n^*|$,则对模$n,\mathbb{Z}_n^*$中的每个元素都是$g$的一个幂,且$g$是$\mathbb{Z}_n^*$的一个<strong>原根</strong>或<strong>生成元</strong>.如果$\mathbb{Z}_n^*$包含一个原根,就称$\mathbb{Z}_n^*$是<strong>循环的</strong></p></blockquote><p>对所有的素数$p&gt;2$和所有正整数$e$,使得$\mathbb{Z}_n^*$是循环群的$n&gt;1$的值为$2,4,p^e,2p^e$</p><h4 id="定理-31-33-离散对数定理"><a href="#定理-31-33-离散对数定理" class="headerlink" title="定理 31.33 离散对数定理"></a>定理 31.33 离散对数定理</h4><p>如果$g$是$\mathbb{Z}_n^*$的一个原根,则当且仅当等式$x\equiv y(\mod\phi(n))$成立时,有等式$g^x\equiv g^y(\mod n)$成立</p><h4 id="定理-31-34"><a href="#定理-31-34" class="headerlink" title="定理 31.34"></a>定理 31.34</h4><p>如果$p$是一个奇素数且$e\ge1$,则方程<br>$$x^2\equiv1(\mod p^e)$$<br>仅有两个解,即$x=1,x=-1$</p><h4 id="推论-31-35"><a href="#推论-31-35" class="headerlink" title="推论 31.35"></a>推论 31.35</h4><p>如果对模$n$存在1的非平凡平方根,则$n$是合数</p><h2 id="34-NP完全性"><a href="#34-NP完全性" class="headerlink" title="34 NP完全性"></a>34 NP完全性</h2><h3 id="34-4-NP完全性的证明"><a href="#34-4-NP完全性的证明" class="headerlink" title="34.4 NP完全性的证明"></a>34.4 NP完全性的证明</h3><h4 id="引理-34-8"><a href="#引理-34-8" class="headerlink" title="引理 34.8"></a>引理 34.8</h4><p>如果语言$L$是一种满足对任意$L\in$NPC都有$L’\le_PL$的语言,则$L$是NP难度的.此外,如果$L\in$NP,则$L\in$NPC</p><h4 id="公式可满足性"><a href="#公式可满足性" class="headerlink" title="公式可满足性"></a>公式可满足性</h4><p>$$ SAT=\{\langle\varphi\rangle: \text{$\varphi$是一个可满足的布尔公式}\} $$</p><h4 id="3-CNF-SAT-3-CNF可满足性"><a href="#3-CNF-SAT-3-CNF可满足性" class="headerlink" title="3-CNF-SAT 3-CNF可满足性"></a>3-CNF-SAT 3-CNF可满足性</h4><p>布尔公式中的一个<strong>文字</strong>(literal)是指一个变量或变量的非.如果一个布尔公式可以表示为所有子句的与,并且每个子句都是一个或多个文字的或,则该布尔公式为<strong>合取范式</strong>,CNF(conjunctive normal form).如果公式中每个子句恰好都有三个不同的文字,则称该布尔公式为3<strong>合取范式</strong>,3-CNF,例如<br>$$ (x_1\vee\lnot x_1\vee\lnot x_2)\wedge(x_3\vee x_2\vee x_4)\wedge(\lnot x_1\vee\lnot x_3\vee\lnot x_4) $$<br>就是一个3合取范式,第一个子句包含3个文字$x_1,\lnot x_1$和$\lnot x_2$</p>]]></content>
      
      
      <categories>
          
          <category> 问题求解 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>xampp搭建wordpress</title>
      <link href="/2019/03/27/xampp%E6%90%AD%E5%BB%BAwordpress/"/>
      <url>/2019/03/27/xampp%E6%90%AD%E5%BB%BAwordpress/</url>
      
        <content type="html"><![CDATA[<h1 id="windows"><a href="#windows" class="headerlink" title="windows"></a>windows</h1><h2 id="安装和配置"><a href="#安装和配置" class="headerlink" title="安装和配置"></a>安装和配置</h2><ul><li>启动报错</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[Apache] Error: Apache shutdown unexpectedly.</span><br><span class="line">[Apache] This may be due to a blocked port, missing dependencies,</span><br><span class="line">[Apache] improper privileges, a crash, or a shutdown by another method.</span><br><span class="line">[Apache] Press the Logs button to view error logs and check</span><br><span class="line">[Apache] the Windows Event Viewer for more clues</span><br><span class="line">[Apache] If you need more help, copy and post this</span><br><span class="line">[Apache] entire log window on the forums</span><br></pre></td></tr></table></figure><p>需要修改端口号:</p><ul><li><code>界面</code>-&gt;<code>Config</code>-&gt;<code>Service and Port Settings</code>-&gt;<code>SSL Port</code></li><li><code>xampp/apache/conf/extra/httpd-ssl.conf</code><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Listen &#123;端口号&#125;</span><br></pre></td></tr></table></figure><blockquote><p>两次端口要一致</p></blockquote></li></ul><hr><h1 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h1><h2 id="xampp安装"><a href="#xampp安装" class="headerlink" title="xampp安装"></a><a href="https://jingyan.baidu.com/article/066074d66e1141c3c21cb0ce.html">xampp安装</a></h2><ul><li><code>.run</code>文件</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo chmod a+x *.run</span><br><span class="line">sudo ./*.run</span><br></pre></td></tr></table></figure><p>出现</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">XAMPP: Starting Apache...fail.</span><br><span class="line">XAMPP:  Another web server is already running.</span><br></pre></td></tr></table></figure><p>使用(待定)</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo /usr/sbin/apache2ctl stop</span><br></pre></td></tr></table></figure><ul><li>命令</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo /opt/lampp/lampp start <span class="comment"># https</span></span><br></pre></td></tr></table></figure><h2 id="wordpress安装"><a href="#wordpress安装" class="headerlink" title="wordpress安装"></a><a href="https://www.crifan.com/during_install_wordpress_access_wp_admin_install_php_error_database_connection_error_your_database_name_and_password_may_not_correct_provided_in_wp_config_php/">wordpress安装</a></h2><ul><li><a href="https://www.crifan.com/use_phpmyadmin_to_create_new_mysql_database_for_wordpress/">建立数据库</a></li></ul><p>若出现数据库已经存在的报错(重装时),删除原数据库.先手动删除数据库(位置<code>/opt/lampp/var/mysql/wordpress</code>),然后再用phpmyadmin(<code>localhost/phpmyadmin</code>)删除</p><ul><li><code>wp-config.php</code></li></ul><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">define(<span class="string">&#x27;DB_NAME&#x27;</span>, <span class="string">&#x27;wordpress&#x27;</span>);</span><br><span class="line">define(<span class="string">&#x27;DB_USER&#x27;</span>, <span class="string">&#x27;root&#x27;</span>);</span><br><span class="line">define(<span class="string">&#x27;DB_PASSWORD&#x27;</span>, <span class="string">&#x27;&#x27;</span>);</span><br></pre></td></tr></table></figure><p>好像最开始是不能有密码的</p><h2 id="报错解决"><a href="#报错解决" class="headerlink" title="报错解决"></a>报错解决</h2><ul><li><code>无法创建目录</code></li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo chmod a+w -R &#x2F;opt&#x2F;lampp&#x2F;htdocs</span><br></pre></td></tr></table></figure><ul><li>(localhost)<code>连接服务器时出错,请检查设置</code>(更新的时候)</li></ul><p>在<code>htdocs/wp-config.php</code>添加</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">define(&#39;FS_METHOD&#39;, &quot;direct&quot;);</span><br></pre></td></tr></table></figure><p>但还是一堆<code>Warning</code></p><h2 id="bug解决"><a href="#bug解决" class="headerlink" title="bug解决"></a>bug解决</h2><ul><li>本地<code>css</code>样式加载不正常</li></ul><p>用<code>127.0.0.1</code>替代<code>localhost</code></p><h2 id="其他配置"><a href="#其他配置" class="headerlink" title="其他配置"></a>其他配置</h2><ul><li><p><a href="https://www.oschina.net/question/1467780_147338">免ftp密码</a></p></li><li><p>修改站点信息</p></li></ul><p><code>仪表盘</code>-&gt;<code>设置</code>-&gt;<code>常规</code></p><h2 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h2><ul><li><code>WP Editor.md</code>:markdown编辑器</li><li><code>WordPress Database Backup</code>:备份工具</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> php </tag>
            
            <tag> wordpress </tag>
            
            <tag> xampp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>powerline配置</title>
      <link href="/2019/03/26/powerline%E9%85%8D%E7%BD%AE/"/>
      <url>/2019/03/26/powerline%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<p>本文中的powerline指的是</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get install python3-pip</span><br></pre></td></tr></table></figure><ul><li><p><a href="https://blog.csdn.net/cp3alai/article/details/45509459">颜色表参考</a></p></li><li><p>颜色声明:<code>.config/powerline/color.json</code></p></li></ul><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;colors&quot;</span>: </span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;0&quot;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="attr">&quot;1&quot;</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="attr">&quot;2&quot;</span>: <span class="number">2</span>,</span><br><span class="line">    <span class="attr">&quot;3&quot;</span>: <span class="number">3</span>,</span><br><span class="line">    <span class="attr">&quot;4&quot;</span>: <span class="number">4</span>,</span><br><span class="line">    <span class="attr">&quot;5&quot;</span>: <span class="number">5</span>,</span><br><span class="line">    <span class="attr">&quot;6&quot;</span>: <span class="number">6</span>,</span><br><span class="line">    <span class="attr">&quot;7&quot;</span>: <span class="number">7</span>,</span><br><span class="line">    <span class="attr">&quot;8&quot;</span>: <span class="number">8</span>,</span><br><span class="line">    <span class="attr">&quot;9&quot;</span>: <span class="number">9</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><code>vim</code>显示信息:<code>.config/powerline/themes/vim/default.json</code></li></ul><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;segments&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;left&quot;</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;function&quot;</span>: <span class="string">&quot;powerline.segments.vim.plugin.capslock.capslock_indicator&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;include_modes&quot;</span>: [<span class="string">&quot;i&quot;</span>, <span class="string">&quot;R&quot;</span>, <span class="string">&quot;Rv&quot;</span>],</span><br><span class="line">        <span class="attr">&quot;priority&quot;</span>: <span class="number">10</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;function&quot;</span>: <span class="string">&quot;branch&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;exclude_modes&quot;</span>: [<span class="string">&quot;nc&quot;</span>],</span><br><span class="line">        <span class="attr">&quot;priority&quot;</span>: <span class="number">30</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;function&quot;</span>: <span class="string">&quot;readonly_indicator&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;draw_soft_divider&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">&quot;after&quot;</span>: <span class="string">&quot; &quot;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;function&quot;</span>: <span class="string">&quot;file_scheme&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;priority&quot;</span>: <span class="number">20</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;function&quot;</span>: <span class="string">&quot;powerline.segments.shell.cwd&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;priority&quot;</span>: <span class="number">60</span></span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p><code>vim</code>颜色设定:<code>.config/powerline/colorshemes/vim/default.json</code></p><ul><li><code>ic</code>,<code>ix</code>:补全模式</li></ul></li><li><p>符号设定:<code>.config/powerline/themes/powerline.json</code></p></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> powerline </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>win10配置</title>
      <link href="/2019/03/23/win10%E9%85%8D%E7%BD%AE/"/>
      <url>/2019/03/23/win10%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h2 id="产品密钥"><a href="#产品密钥" class="headerlink" title="产品密钥"></a>产品密钥</h2><h3 id="专业版"><a href="#专业版" class="headerlink" title="专业版"></a>专业版</h3><ul><li>(2020.7)<code>XC88X-9N9QX-CDRVP-4XV22-RVV26</code></li></ul><h2 id="软件"><a href="#软件" class="headerlink" title="软件"></a>软件</h2><ul><li><p>起步</p></li><li><p>核心</p><ul><li>Dukto R6: 4平台传输文件</li><li>Disklnternals Linux Reader: 查看Linux系统的文件</li><li>balenaEtcher/rufus: 启动盘制作</li></ul></li><li><p>媒体</p><ul><li>PopSub: 字幕</li><li>GoldWave: 声音</li><li>Easy GIF Animator: gif</li><li>xdown: 下载器</li></ul></li><li><p>垃圾</p><ul><li>FreeSSHd</li></ul></li></ul><h2 id="关闭防火墙"><a href="#关闭防火墙" class="headerlink" title="关闭防火墙"></a><a href="https://jingyan.baidu.com/article/c1a3101e639c6ade656deb17.html?qq-pf-to=pcqq.group">关闭防火墙</a></h2><ul><li>(方法之一)<ol><li>打开<code>gpedit.msc</code>(需要专业版以上)</li><li><code>计算机配置</code>-&gt;<code>管理模板</code>-&gt;<code>Windows组件</code>-&gt;<code>Windows Defender</code>(或<code>Windows Defender 防病毒程序</code>)</li><li>双击<code>关闭Windows Defender</code>,选择<code>已启用</code></li></ol></li></ul><h2 id="需要来自system的权限"><a href="#需要来自system的权限" class="headerlink" title="需要来自system的权限"></a>需要来自<code>system</code>的权限</h2><p><code>属性</code>-&gt;<code>安全</code>-&gt;<code>高级</code>-&gt;(所有者)<code>更改</code>-&gt;<code>高级</code>-&gt;<code>立即查找</code>-&gt;选择一个用户(非<code>system</code>)-&gt;<code>确定</code>-&gt;<code>替换子容器和对象的所有者</code>-&gt;<code>使用可从此对象继承的权限项目替换所有子对象的权限项目</code>-&gt;<code>确定</code>-&gt;<code>确定</code></p><h2 id="office2016镜像版破解"><a href="#office2016镜像版破解" class="headerlink" title="office2016镜像版破解"></a><code>office2016</code>镜像版破解</h2><h2 id="mathematica破解"><a href="#mathematica破解" class="headerlink" title="mathematica破解"></a><code>mathematica</code>破解</h2><h2 id="Adobe-photoshop-CC2014破解"><a href="#Adobe-photoshop-CC2014破解" class="headerlink" title="Adobe photoshop CC2014破解"></a><code>Adobe photoshop CC2014</code>破解</h2><h3 id="首次破解"><a href="#首次破解" class="headerlink" title="首次破解"></a>首次破解</h3><ol><li>断网,运行注册机</li><li>安装时输入<code>序列号</code></li><li>安装后,<code>帮助</code>-&gt;<code>登录</code>-&gt;<code>链接Internet出现问题</code>-&gt;<code>脱机激活</code>-&gt;保证注册机的<code>序列号</code>和安装时的一样,并输入<code>请求码</code>-&gt;输入<code>激活码</code></li><li>在防火墙中禁用出站规则<ul><li><code>C:\Program Files (x86)\Common Files\Adobe\OOBE\PDApp\core\PDapp.exe</code></li><li><code>C:\Program Files (x86)\Common Files\Adobe\OOBE\PDApp\P6\adobe_licutil.exe</code></li><li><code>C:\Program Files (x86)\Common Files\Adobe\OOBE\PDApp\P7\adobe_licutil.exe</code></li></ul></li></ol><h3 id="序列号被注销"><a href="#序列号被注销" class="headerlink" title="序列号被注销"></a>序列号被注销</h3><ol><li>同上</li><li>由注册机生成新的<code>序列号</code>并输入</li><li>同上</li></ol><h2 id="路径笔记"><a href="#路径笔记" class="headerlink" title="路径笔记"></a>路径笔记</h2><p>注册表位置:<code>C:Windows/System32/config/</code></p>]]></content>
      
      
      
        <tags>
            
            <tag> windows </tag>
            
            <tag> photoshop </tag>
            
            <tag> mathematica </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>tikz笔记</title>
      <link href="/2019/03/21/tikz%E7%AC%94%E8%AE%B0/"/>
      <url>/2019/03/21/tikz%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<p>overleaf:<code>https://www.overleaf.com/learn/latex/LaTeX_Graphics_using_TikZ:_A_Tutorial_for_Beginners_(Part_3)%E2%80%94Creating_Flowcharts</code></p><embed src="/pdf/venn.pdf#zoom=100&scrollbar=0&toolbar=0" class="tikz_sample"><figure class="highlight tex"><table><tr><td class="code"><pre><span class="line"><span class="tag">\<span class="name">begin</span><span class="string">&#123;tikzpicture&#125;</span><span class="string">[very thick]</span></span></span><br><span class="line"><span class="tag">\<span class="name">draw</span><span class="string">[style=&#123;draw=blue!50, fill=blue!20,&#125;]</span></span> (0,0) ellipse [x radius=2cm, y radius=2cm];</span><br><span class="line"><span class="tag">\<span class="name">coordinate</span></span> [label=center:&#123;<span class="formula">$G$</span>&#125;] (A) at (-1.2,0);</span><br><span class="line"><span class="tag">\<span class="name">draw</span><span class="string">[style=&#123;draw=red!50, fill=red!20, opacity=0.7,&#125;]</span></span> (0.2,-0.7) ellipse [x radius=1.2cm, y radius=1.1cm];</span><br><span class="line"><span class="tag">\<span class="name">coordinate</span></span> [label=center:&#123;<span class="formula">$N$</span>&#125;] (A) at (0.2,-0.9);</span><br><span class="line"><span class="tag">\<span class="name">draw</span><span class="string">[style=&#123;draw=green!50, fill=green!20, opacity=0.7,&#125;]</span></span> (0.2,0.7) ellipse [x radius=1.2cm, y radius=1.1cm];</span><br><span class="line"><span class="tag">\<span class="name">coordinate</span></span> [label=center:&#123;<span class="formula">$H$</span>&#125;] (A) at (0.2,0.9);</span><br><span class="line"><span class="tag">\<span class="name">coordinate</span></span> [label=center:&#123;<span class="formula">$H<span class="tag">\<span class="name">cap</span></span> N$</span>&#125;] (A) at (0.2,0);</span><br><span class="line"><span class="tag">\<span class="name">end</span><span class="string">&#123;tikzpicture&#125;</span></span></span><br></pre></td></tr></table></figure><embed src="/pdf/graph.pdf#zoom=100&scrollbar=0&toolbar=0" class="tikz_sample"><figure class="highlight tex"><table><tr><td class="code"><pre><span class="line"><span class="tag">\<span class="name">begin</span><span class="string">&#123;tikzpicture&#125;</span><span class="string">[</span></span></span><br><span class="line"><span class="tag"><span class="string">%overlay, remember picture</span></span></span><br><span class="line"><span class="tag"><span class="string">]</span></span></span><br><span class="line"><span class="tag">\<span class="name">coordinate</span></span> (a0) at (  0.3, 0.2);</span><br><span class="line"><span class="tag">\<span class="name">coordinate</span></span> (b0) at (  3.3, 1.2);</span><br><span class="line"><span class="tag">\<span class="name">coordinate</span></span> (c0) at (  4.1,-1.3);</span><br><span class="line"><span class="tag">\<span class="name">coordinate</span></span> (d0) at (  8.1,-0.3);</span><br><span class="line"><span class="tag">\<span class="name">draw</span></span> (c0) -- (a0);</span><br><span class="line"><span class="tag">\<span class="name">draw</span></span> (c0) -- (d0);</span><br><span class="line"><span class="tag">\<span class="name">draw</span><span class="string">[style=&#123;draw=green!50, fill=green!20,&#125;]</span></span>(a0)ellipse[radius=1];</span><br><span class="line"><span class="tag">\<span class="name">draw</span><span class="string">[style=&#123;draw=green!50, fill=green!20,&#125;]</span></span>(b0)ellipse[radius=1];</span><br><span class="line"><span class="tag">\<span class="name">draw</span><span class="string">[style=&#123;draw=green!50, fill=green!20,&#125;]</span></span>(c0)ellipse[radius=1.3];</span><br><span class="line"><span class="tag">\<span class="name">draw</span><span class="string">[style=&#123;draw=green!50, fill=green!20,&#125;]</span></span>(d0)ellipse[radius=1.3];</span><br><span class="line"></span><br><span class="line"><span class="comment">%\draw[style=&#123;draw=red!50, fill=red!20,&#125;] (2,-4) ellipse [radius=0.2];</span></span><br><span class="line"><span class="comment">%\coordinate [label=center:&#123;表示牛逼的点&#125;] (info1) at (2,-5);</span></span><br><span class="line"><span class="comment">%\draw[style=&#123;draw=blue!50, fill=blue!20,&#125;] (8,-4) ellipse [radius=0.2];</span></span><br><span class="line"><span class="comment">%\coordinate [label=center:&#123;表示不牛逼的点&#125;] (info2) at (8,-5);</span></span><br><span class="line"><span class="tag">\<span class="name">coordinate</span></span> (a1) at ( 0  , 0  );</span><br><span class="line"><span class="tag">\<span class="name">coordinate</span></span> (b1) at ( 0  , 0.7);</span><br><span class="line"><span class="tag">\<span class="name">coordinate</span></span> (c1) at ( 0.8, 0.5);</span><br><span class="line"><span class="tag">\<span class="name">coordinate</span></span> (d1) at ( 0.5,-0.2);</span><br><span class="line"><span class="tag">\<span class="name">draw</span></span> (a1) -- (b1);</span><br><span class="line"><span class="tag">\<span class="name">draw</span></span> (a1) -- (c1);</span><br><span class="line"><span class="tag">\<span class="name">draw</span></span> (a1) -- (d1);</span><br><span class="line"><span class="tag">\<span class="name">coordinate</span></span> (a2) at ( 0  +3, 0  +1);</span><br><span class="line"><span class="tag">\<span class="name">coordinate</span></span> (b2) at ( 0  +3, 0.7+1);</span><br><span class="line"><span class="tag">\<span class="name">coordinate</span></span> (c2) at ( 0.8+3, 0.5+1);</span><br><span class="line"><span class="tag">\<span class="name">coordinate</span></span> (d2) at ( 0.5+3,-0.2+1);</span><br><span class="line"><span class="tag">\<span class="name">draw</span></span> (a2) -- (b2);</span><br><span class="line"><span class="tag">\<span class="name">draw</span></span> (a2) -- (c2);</span><br><span class="line"><span class="tag">\<span class="name">draw</span></span> (a2) -- (d2);</span><br><span class="line"><span class="tag">\<span class="name">coordinate</span></span> (a3) at (-3.9+8,-1.1);</span><br><span class="line"><span class="tag">\<span class="name">coordinate</span></span> (b3) at (-3.2+8,-2.0);</span><br><span class="line"><span class="tag">\<span class="name">coordinate</span></span> (c3) at (-4.5+8,-0.9);</span><br><span class="line"><span class="tag">\<span class="name">coordinate</span></span> (d3) at (-4.4+8,-2.1);</span><br><span class="line"><span class="tag">\<span class="name">coordinate</span></span> (e3) at (-3.0+8,-1.1);</span><br><span class="line"><span class="tag">\<span class="name">draw</span></span> (a3) -- (b3);</span><br><span class="line"><span class="tag">\<span class="name">draw</span></span> (a3) -- (c3);</span><br><span class="line"><span class="tag">\<span class="name">draw</span></span> (a3) -- (d3);</span><br><span class="line"><span class="tag">\<span class="name">draw</span></span> (a3) -- (e3);</span><br><span class="line"><span class="tag">\<span class="name">coordinate</span></span> (a4) at (12-3.9,-1.1+1);</span><br><span class="line"><span class="tag">\<span class="name">coordinate</span></span> (b4) at (12-3.2,-2.0+1);</span><br><span class="line"><span class="tag">\<span class="name">coordinate</span></span> (c4) at (12-4.5,-0.9+1);</span><br><span class="line"><span class="tag">\<span class="name">coordinate</span></span> (d4) at (12-4.4,-2.1+1);</span><br><span class="line"><span class="tag">\<span class="name">coordinate</span></span> (e4) at (12-3.0,-1.1+1);</span><br><span class="line"><span class="tag">\<span class="name">draw</span></span> (a4) -- (b4);</span><br><span class="line"><span class="tag">\<span class="name">draw</span></span> (a4) -- (c4);</span><br><span class="line"><span class="tag">\<span class="name">draw</span></span> (a4) -- (d4);</span><br><span class="line"><span class="tag">\<span class="name">draw</span></span> (a4) -- (e4);</span><br><span class="line"></span><br><span class="line"><span class="tag">\<span class="name">draw</span><span class="string">[style=&#123;draw=blue!50, fill=blue!20,&#125;]</span></span>(a1)ellipse[radius=0.2];</span><br><span class="line"><span class="tag">\<span class="name">draw</span><span class="string">[style=&#123;draw=blue!50, fill=blue!20,&#125;]</span></span>(b1)ellipse[radius=0.2];</span><br><span class="line"><span class="tag">\<span class="name">draw</span><span class="string">[style=&#123;draw=blue!50, fill=blue!20,&#125;]</span></span>(c1)ellipse[radius=0.2];</span><br><span class="line"><span class="tag">\<span class="name">draw</span><span class="string">[style=&#123;draw=blue!50, fill=blue!20,&#125;]</span></span>(d1)ellipse[radius=0.2];</span><br><span class="line"></span><br><span class="line"><span class="tag">\<span class="name">draw</span><span class="string">[style=&#123;draw= red!50, fill= red!20,&#125;]</span></span>(a2)ellipse[radius=0.2];</span><br><span class="line"><span class="tag">\<span class="name">draw</span><span class="string">[style=&#123;draw=blue!50, fill=blue!20,&#125;]</span></span>(b2)ellipse[radius=0.2];</span><br><span class="line"><span class="tag">\<span class="name">draw</span><span class="string">[style=&#123;draw=blue!50, fill=blue!20,&#125;]</span></span>(c2)ellipse[radius=0.2];</span><br><span class="line"><span class="tag">\<span class="name">draw</span><span class="string">[style=&#123;draw=blue!50, fill=blue!20,&#125;]</span></span>(d2)ellipse[radius=0.2];</span><br><span class="line"></span><br><span class="line"><span class="tag">\<span class="name">draw</span><span class="string">[style=&#123;draw= red!50, fill= red!20,&#125;]</span></span>(a3)ellipse[radius=0.2];</span><br><span class="line"><span class="tag">\<span class="name">draw</span><span class="string">[style=&#123;draw=blue!50, fill=blue!20,&#125;]</span></span>(b3)ellipse[radius=0.2];</span><br><span class="line"><span class="tag">\<span class="name">draw</span><span class="string">[style=&#123;draw=blue!50, fill=blue!20,&#125;]</span></span>(c3)ellipse[radius=0.2];</span><br><span class="line"><span class="tag">\<span class="name">draw</span><span class="string">[style=&#123;draw=blue!50, fill=blue!20,&#125;]</span></span>(d3)ellipse[radius=0.2];</span><br><span class="line"><span class="tag">\<span class="name">draw</span><span class="string">[style=&#123;draw=blue!50, fill=blue!20,&#125;]</span></span>(e3)ellipse[radius=0.2];</span><br><span class="line"></span><br><span class="line"><span class="tag">\<span class="name">draw</span><span class="string">[style=&#123;draw=blue!50, fill=blue!20,&#125;]</span></span>(a4)ellipse[radius=0.2];</span><br><span class="line"><span class="tag">\<span class="name">draw</span><span class="string">[style=&#123;draw=blue!50, fill=blue!20,&#125;]</span></span>(b4)ellipse[radius=0.2];</span><br><span class="line"><span class="tag">\<span class="name">draw</span><span class="string">[style=&#123;draw=blue!50, fill=blue!20,&#125;]</span></span>(c4)ellipse[radius=0.2];</span><br><span class="line"><span class="tag">\<span class="name">draw</span><span class="string">[style=&#123;draw=blue!50, fill=blue!20,&#125;]</span></span>(d4)ellipse[radius=0.2];</span><br><span class="line"><span class="tag">\<span class="name">draw</span><span class="string">[style=&#123;draw=blue!50, fill=blue!20,&#125;]</span></span>(e4)ellipse[radius=0.2];</span><br><span class="line"><span class="tag">\<span class="name">end</span><span class="string">&#123;tikzpicture&#125;</span></span></span><br></pre></td></tr></table></figure><embed src="/pdf/arrow_label.pdf#zoom=100&scrollbar=0&toolbar=0" class="tikz_sample"><ul><li><a href="https://tex.stackexchange.com/questions/354191/label-following-arrow-in-tikz">label参考</a></li><li><a href="https://tex.stackexchange.com/questions/58878/tikz-set-node-label-position-more-precisely">label位置</a></li></ul><figure class="highlight tex"><table><tr><td class="code"><pre><span class="line"><span class="tag">\<span class="name">begin</span><span class="string">&#123;tikzpicture&#125;</span><span class="string">[</span></span></span><br><span class="line"><span class="tag"><span class="string">a/.style=&#123;circle,draw=blue!50,fill=blue!20,very thick,minimum size=10mm&#125;,</span></span></span><br><span class="line"><span class="tag"><span class="string">b/.style=&#123;circle,draw=green!50,fill=green!20,very thick,minimum size=10mm&#125;</span></span></span><br><span class="line"><span class="tag"><span class="string">]</span></span></span><br><span class="line"><span class="tag">\<span class="name">node</span><span class="string">[a,label=&#123;[shift=&#123;(0,-2)&#125;]</span></span>1&#125;] (n1) at (0, 0)&#123;a&#125;;</span><br><span class="line"><span class="tag">\<span class="name">node</span><span class="string">[a,label=&#123;[shift=&#123;(0,-2)&#125;]</span></span>2&#125;] (n2) at (2, 0)&#123;a&#125;;</span><br><span class="line"><span class="tag">\<span class="name">node</span><span class="string">[b,label=&#123;[shift=&#123;(0,-2)&#125;]</span></span>3&#125;] (n3) at (4, 0)&#123;b&#125;;</span><br><span class="line"><span class="tag">\<span class="name">node</span><span class="string">[a,label=&#123;[shift=&#123;(0,-2)&#125;]</span></span>4&#125;] (n4) at (6, 0)&#123;a&#125;;</span><br><span class="line"><span class="tag">\<span class="name">node</span><span class="string">[b,label=&#123;[shift=&#123;(0,-2)&#125;]</span></span>5&#125;] (n5) at (8, 0)&#123;b&#125;;</span><br><span class="line"><span class="tag">\<span class="name">draw</span><span class="string">[-&gt;,thick]</span></span>(n1) to (n2);</span><br><span class="line"><span class="tag">\<span class="name">draw</span><span class="string">[-&gt;,thick]</span></span>(n2) to (n3);</span><br><span class="line"><span class="tag">\<span class="name">draw</span><span class="string">[-&gt;,thick]</span></span>(n3) to (n4);</span><br><span class="line"><span class="tag">\<span class="name">draw</span><span class="string">[-&gt;,thick]</span></span>(n4) to (n5);</span><br><span class="line"><span class="tag">\<span class="name">draw</span><span class="string">[shorten &gt;= 0pt,-&gt;,thick]</span></span>(n2) to[in=150,out=30,loop,looseness=4.8]node[midway,above]&#123;a&#125;(n2);</span><br><span class="line"><span class="tag">\<span class="name">draw</span><span class="string">[-&gt;,thick]</span></span>(n4) to[in=-30,out=-150]node[midway,below]&#123;a&#125;(n2);</span><br><span class="line"><span class="tag">\<span class="name">end</span><span class="string">&#123;tikzpicture&#125;</span></span></span><br></pre></td></tr></table></figure><embed src="/pdf/github.pdf#zoom=100&scrollbar=0&toolbar=0" class="tikz_sample"><figure class="highlight tex"><table><tr><td class="code"><pre><span class="line"><span class="tag">\<span class="name">newfontfamily</span></span><span class="tag">\<span class="name">DejaVu</span><span class="string">&#123;DejaVu Sans Mono for Powerline&#125;</span></span></span><br><span class="line"><span class="tag">\<span class="name">def</span></span><span class="tag">\<span class="name">Font</span></span>#1&#123;<span class="tag">\<span class="name">fontsize</span><span class="string">&#123;#1&#125;</span><span class="string">&#123;\baselineskip&#125;</span></span><span class="tag">\<span class="name">DejaVu</span></span><span class="tag">\<span class="name">textbf</span></span>&#125;</span><br><span class="line"><span class="tag">\<span class="name">begin</span><span class="string">&#123;tikzpicture&#125;</span><span class="string">[remember picture, overlay]</span></span></span><br><span class="line">  <span class="tag">\<span class="name">node</span></span> [shift=&#123;(0cm,-3cm)&#125;]  at (current page.north west)</span><br><span class="line">  &#123;<span class="comment">%</span></span><br><span class="line">  <span class="tag">\<span class="name">begin</span><span class="string">&#123;tikzpicture&#125;</span><span class="string">[remember picture, overlay]</span></span></span><br><span class="line">    <span class="tag">\<span class="name">draw</span></span> [fill=gray] (0,3) -- (3,3) -- (0,0) -- cycle ;</span><br><span class="line">    <span class="tag">\<span class="name">draw</span></span> [fill=white] (0,3) -- (2,3) -- (0,1) -- cycle ;</span><br><span class="line">    <span class="tag">\<span class="name">draw</span></span> (0,0) to node[midway, above, rotate=45] &#123;<span class="tag">\<span class="name">textcolor</span><span class="string">&#123;white&#125;</span><span class="string">&#123;\Font&#123;9&#125;</span><span class="string">&#123;fork me on github&#125;</span></span>&#125;&#125; (3,3) ;</span><br><span class="line">    <span class="tag">\<span class="name">draw</span></span> (0,1) to node[midway, above, rotate=45] &#123;<span class="tag">\<span class="name">includegraphics</span><span class="string">[width=.05\textwidth]</span><span class="string">&#123;pictures/github&#125;</span></span>&#125; (2,3) ;</span><br><span class="line">  <span class="tag">\<span class="name">end</span><span class="string">&#123;tikzpicture&#125;</span></span></span><br><span class="line">  &#125;;</span><br><span class="line"><span class="tag">\<span class="name">end</span><span class="string">&#123;tikzpicture&#125;</span></span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> latex </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>beamer笔记</title>
      <link href="/2019/03/20/beamer%E7%AC%94%E8%AE%B0/"/>
      <url>/2019/03/20/beamer%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<p><a href="http://www.latexstudio.net/archives/2825.html">http://www.latexstudio.net/archives/2825.html</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> latex </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>gcc inline assembly</title>
      <link href="/2019/03/20/gcc-inline-assembly/"/>
      <url>/2019/03/20/gcc-inline-assembly/</url>
      
        <content type="html"><![CDATA[<style>#my_pdf{  width: 90%;  height: 800px;  text-align: center;  margin-left: 5%;}</style><p><a href="http://www.ibiblio.org/gferg/ldp/GCC-Inline-Assembly-HOWTO.html">HOWTO</a><br><embed id="my_pdf" src="/pdf/HOWTO.pdf#toolbar=0&navpanes=0&scrollbar=0&zoom=120&statusbar=0&messages=0"><br><a href="http://www.delorie.com/djgpp/doc/brennan/brennan_att_inline_djgpp.html">DJGPP</a><br><embed id="my_pdf" src="/pdf/DJGPP.pdf#toolbar=0&navpanes=0&scrollbar=0&zoom=120&statusbar=0&messages=0"></p>]]></content>
      
      
      
        <tags>
            
            <tag> c </tag>
            
            <tag> gcc </tag>
            
            <tag> assemly </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mac使用</title>
      <link href="/2019/03/18/mac%E4%BD%BF%E7%94%A8/"/>
      <url>/2019/03/18/mac%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="免密码登录-自动登录"><a href="#免密码登录-自动登录" class="headerlink" title="免密码登录(自动登录)"></a>免密码登录(自动登录)</h2><ul><li>关闭文件保险箱</li><li>取消关闭自动登录</li></ul><h2 id="允许安装各种来源的软件"><a href="#允许安装各种来源的软件" class="headerlink" title="允许安装各种来源的软件"></a>允许安装各种来源的软件</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo spctl --master-disable</span><br></pre></td></tr></table></figure><h2 id="lrzsz-未成功"><a href="#lrzsz-未成功" class="headerlink" title="lrzsz(未成功)"></a><a href="http://www.cnblogs.com/dingdada/p/4498766.html">lrzsz</a>(未成功)</h2><ul><li>安装iterm2</li><li>安装lrzsz:<code>brew install lrzsz</code></li><li><del>软连接</del></li><li>安装automatic zmoderm for iterm2</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/bin</span><br><span class="line">sudo wget https://raw.github.com/mmastrac/iterm2-zmodem/master/iterm2-send-zmodem.sh</span><br><span class="line">sudo wget https://raw.github.com/mmastrac/iterm2-zmodem/master/iterm2-recv-zmodem.sh</span><br><span class="line">sudo chmod 777 /usr/<span class="built_in">local</span>/bin/iterm2-*</span><br></pre></td></tr></table></figure><ul><li>修改iterm2设置:<code>Profiles</code>$\to$<code>Edit Profiles</code>$\to$<code>Profiles</code>$\to$<code>Advanced</code>$\to$<code>Edit Trigger</code></li></ul><table><thead><tr><th align="center">Regular expression</th><th align="center">Action</th><th align="center">parameters</th></tr></thead><tbody><tr><td align="center"><code>\*\*B0100</code></td><td align="center">Run Silent Coprocess</td><td align="center">/usr/local/bin/iterm2-send-zmodem.sh</td></tr><tr><td align="center"><code>\*\*B00000000000000</code></td><td align="center">Run Silent Coprocess</td><td align="center">/usr/local/bin/iterm2-recv-zmodem.sh</td></tr></tbody></table><h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a><a href="https://zh.wikihow.com/%E5%9C%A8Mac-OS-X%E4%B8%8A%E6%88%AA%E5%8F%96%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE">截图</a></h2><ul><li>全屏截图,保存至桌面:<code>cmd</code>+<code>shift</code>+<code>3</code></li><li>区域截图,保存至桌面:<code>cmd</code>+<code>shift</code>+<code>4</code></li><li>窗口截图,保存至桌面:<code>cmd</code>+<code>shift</code>+<code>4</code>,<code>space</code></li><li>上3种,保存至粘贴板:+<code>ctrl</code></li><li>grab</li></ul><h2 id="位置"><a href="#位置" class="headerlink" title="位置"></a>位置</h2><ul><li>非系统盘:<code>/Volumes</code></li><li>应用程序:<code>/Applications</code></li><li>hosts:<code>/private/etc</code></li></ul><h2 id="开启root用户"><a href="#开启root用户" class="headerlink" title="开启root用户"></a>开启root用户</h2><p><code>设置</code>-&gt;<code>用户与群组</code>-&gt;<code>登录选项</code>-&gt;(锁)-&gt;(网络账户服务器)<code>加入...</code>-&gt;<code>打开目录实用工具</code>-&gt;(锁)-&gt;(顶部)<code>编辑</code>-&gt;<code>Root 用户...</code></p>]]></content>
      
      
      
        <tags>
            
            <tag> mac </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Abstract Algebra(人话版)</title>
      <link href="/2019/03/17/Abstract-Algebra-%E4%BA%BA%E8%AF%9D%E7%89%88/"/>
      <url>/2019/03/17/Abstract-Algebra-%E4%BA%BA%E8%AF%9D%E7%89%88/</url>
      
        <content type="html"><![CDATA[<h2 id="Sage准备"><a href="#Sage准备" class="headerlink" title="Sage准备"></a>Sage准备</h2><ul><li>mac<ol><li>开启共享</li><li><code>Applications/SageMath-8.6.app/Contents/Resources/sage/sage</code></li></ol></li></ul><h3 id="模-n-整数-Z-n"><a href="#模-n-整数-Z-n" class="headerlink" title="模$n$整数$Z_n$"></a>模$n$整数$Z_n$</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">Z8 = Integers(<span class="number">8</span>)</span><br><span class="line">Z8.list()</span><br><span class="line"><span class="comment"># [0, 1, 2, 3, 4, 5, 6, 7]</span></span><br><span class="line"></span><br><span class="line">a = Z8.an_element(); a</span><br><span class="line"><span class="comment"># 0</span></span><br><span class="line"></span><br><span class="line">a = Z8(<span class="number">7</span>); a</span><br><span class="line"><span class="comment"># 7</span></span><br><span class="line"></span><br><span class="line">Z8.addition_table(names = <span class="string">&#x27;elements&#x27;</span>)</span><br><span class="line"><span class="comment"># +  0 1 2 3 4 5 6 7</span></span><br><span class="line"><span class="comment">#  +----------------</span></span><br><span class="line"><span class="comment"># 0| 0 1 2 3 4 5 6 7</span></span><br><span class="line"><span class="comment"># 1| 1 2 3 4 5 6 7 0</span></span><br><span class="line"><span class="comment"># 2| 2 3 4 5 6 7 0 1</span></span><br><span class="line"><span class="comment"># 3| 3 4 5 6 7 0 1 2</span></span><br><span class="line"><span class="comment"># 4| 4 5 6 7 0 1 2 3</span></span><br><span class="line"><span class="comment"># 5| 5 6 7 0 1 2 3 4</span></span><br><span class="line"><span class="comment"># 6| 6 7 0 1 2 3 4 5</span></span><br><span class="line"><span class="comment"># 7| 7 0 1 2 3 4 5 6</span></span><br></pre></td></tr></table></figure><h3 id="子群subgroups"><a href="#子群subgroups" class="headerlink" title="子群subgroups"></a>子群subgroups</h3><ul><li><p>群</p><ul><li>结合律</li><li>单位元存在</li><li>逆元存在</li></ul></li><li><p>子群</p><ul><li>封闭性</li><li>单位元存在性</li><li>逆元存在性</li></ul></li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">S8 = SymmetricGroup(<span class="number">8</span>)</span><br><span class="line">Q = QuaternionGroup()</span><br><span class="line">Q.is_subgroup(S8)</span><br><span class="line"><span class="comment"># True</span></span><br><span class="line"></span><br><span class="line">a = S8.random_element()</span><br><span class="line">[a (x) <span class="keyword">for</span> x <span class="keyword">in</span> S8.domain()]</span><br><span class="line"><span class="comment"># [5, 2, 6, 4, 1, 8, 3, 7]</span></span><br></pre></td></tr></table></figure><h3 id="一般线性群"><a href="#一般线性群" class="headerlink" title="一般线性群"></a>一般线性群</h3><ul><li>$\mathbb{M}_2(\mathbb{R})$:所有$2\times2$矩阵</li><li>$GL_2(\mathbb{R})$:$\mathbb{M}_2$中可逆矩阵.可逆矩阵构成一般线性群</li><li>$A\in GL_2(\mathbb{R}),A^{-1}=\dfrac{1}{ad-bc}<br>\begin{pmatrix}<br>d &amp; -b \\</li><li>c &amp; a \\<br>\end{pmatrix}<br>$</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">matrix([[<span class="number">1</span>,<span class="number">0</span>],[<span class="number">3</span>,<span class="number">4</span>]])</span><br><span class="line"><span class="comment"># [1 0]</span></span><br><span class="line"><span class="comment"># [3 4]</span></span><br></pre></td></tr></table></figure><h3 id="循环群"><a href="#循环群" class="headerlink" title="循环群"></a>循环群</h3><ul><li>存在一些$a\in G$使得$G=\langle a\rangle$</li><li>$C_{\infty}\cong\mathbb{Z}(\mathbb{Z},+),C_n\cong\mathbb{Z}_n$</li><li>无限循环群$C_{\infty}$<ul><li>$|g^k|=\infty$</li><li>生成元:$g,g^{-1}$</li><li>子群:$\langle g^k\rangle,k\in\mathbb{N}$</li></ul></li><li>有限循环群$C_n$<ul><li>生成元:$g^k,\gcd(k,n)=1$</li></ul></li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">G = <span class="number">3</span>*ZZ</span><br><span class="line"><span class="number">-12</span> <span class="keyword">in</span> G</span><br><span class="line"><span class="comment"># True</span></span><br><span class="line">G.gen()</span><br><span class="line"><span class="comment"># 3</span></span><br></pre></td></tr></table></figure><h3 id="四元群-Q-8"><a href="#四元群-Q-8" class="headerlink" title="四元群$Q_8$"></a>四元群$Q_8$</h3><ul><li>$Q_8={\pm1,\pm I,\pm J,\pm K}$,其中</li></ul><p>$$<br>1=<br>\begin{pmatrix}<br>1 &amp; 0 \\<br>0 &amp; 1 \\<br>\end{pmatrix}<br>I=<br>\begin{pmatrix}<br>0 &amp; 1 \\<br>-1 &amp; 0 \\<br>\end{pmatrix}<br>J=<br>\begin{pmatrix}<br>0 &amp; i \\<br>i &amp; 0 \\<br>\end{pmatrix}<br>K=\begin{pmatrix}<br>i &amp; 0 \\<br>0 &amp; -i \\<br>\end{pmatrix}<br>$$</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">Q = QuaternionGroup()</span><br><span class="line">Q.order()</span><br><span class="line"><span class="comment"># 8</span></span><br><span class="line">Q.is_abelian()</span><br><span class="line"><span class="comment"># False</span></span><br></pre></td></tr></table></figure><blockquote><p>Sage中复数用<code>CC</code>表示,可用<code>i</code>/<code>I</code></p></blockquote><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">H = [CC(<span class="number">1</span>), CC(<span class="number">-1</span>), CC(i), CC(-i)]</span><br><span class="line">sage: CC.multiplication_table(elements = H, names = [<span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;-1&#x27;</span>, <span class="string">&#x27;i&#x27;</span>, <span class="string">&#x27;-i&#x27;</span>])</span><br><span class="line"><span class="comment">#  *   1 -1  i -i</span></span><br><span class="line"><span class="comment">#   +------------</span></span><br><span class="line"><span class="comment">#  1|  1 -1  i -i</span></span><br><span class="line"><span class="comment"># -1| -1  1 -i  i</span></span><br><span class="line"><span class="comment">#  i|  i -i -1  1</span></span><br><span class="line"><span class="comment"># -i| -i  i  1 -1</span></span><br></pre></td></tr></table></figure><h3 id="二面体群-Dihedral-Group-D-n"><a href="#二面体群-Dihedral-Group-D-n" class="headerlink" title="二面体群(Dihedral Group)$D_n$"></a>二面体群(Dihedral Group)$D_n$</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">D100 = DihedralGroup(<span class="number">100</span>)</span><br><span class="line">D50 = DihedralGroup(<span class="number">50</span>)</span><br><span class="line">Z2 = Integers(<span class="number">2</span>)</span><br><span class="line">D100.is_abelian()</span><br><span class="line"><span class="comment"># False</span></span><br><span class="line">D100.is_cyclic()</span><br><span class="line"><span class="comment"># False</span></span><br></pre></td></tr></table></figure><h3 id="置换群-S-n"><a href="#置换群-S-n" class="headerlink" title="置换群$S_n$:"></a>置换群$S_n$:</h3><ul><li>秩:$|S_n|=n!$</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">S3 = SymmetricGroup(<span class="number">3</span>)</span><br><span class="line">rho1 = S3([<span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>]); rho1</span><br><span class="line"><span class="comment"># (1,3)</span></span><br><span class="line"></span><br><span class="line">S3.domain()</span><br><span class="line"><span class="comment"># &#123;1, 2, 3&#125;</span></span><br><span class="line"></span><br><span class="line">[rho1(x) <span class="keyword">for</span> x <span class="keyword">in</span> S3.domain()]</span><br><span class="line"><span class="comment"># [3, 2, 1]</span></span><br><span class="line"></span><br><span class="line">[[a(x) <span class="keyword">for</span> x <span class="keyword">in</span> S3.domain()] <span class="keyword">for</span> a <span class="keyword">in</span> S3]</span><br><span class="line"><span class="comment"># [[1, 2, 3], [3, 1, 2], [2, 3, 1], [1, 3, 2], [3, 2, 1], [2, 1, 3]]</span></span><br><span class="line"></span><br><span class="line">S3.cayley_table(names=<span class="string">&#x27;elements&#x27;</span>)</span><br><span class="line"><span class="comment">#       *       ()   (2,3)   (1,2) (1,2,3) (1,3,2)   (1,3)</span></span><br><span class="line"><span class="comment">#        +------------------------------------------------</span></span><br><span class="line"><span class="comment">#      ()|      ()   (2,3)   (1,2) (1,2,3) (1,3,2)   (1,3)</span></span><br><span class="line"><span class="comment">#   (2,3)|   (2,3)      () (1,2,3)   (1,2)   (1,3) (1,3,2)</span></span><br><span class="line"><span class="comment">#   (1,2)|   (1,2) (1,3,2)      ()   (1,3)   (2,3) (1,2,3)</span></span><br><span class="line"><span class="comment"># (1,2,3)| (1,2,3)   (1,3)   (2,3) (1,3,2)      ()   (1,2)</span></span><br><span class="line"><span class="comment"># (1,3,2)| (1,3,2)   (1,2)   (1,3)      () (1,2,3)   (2,3)</span></span><br><span class="line"><span class="comment">#   (1,3)|   (1,3) (1,2,3) (1,3,2)   (2,3)   (1,2)      ()</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">S5 = SymmetricGroup(<span class="number">5</span>)</span><br><span class="line">sigma = S5(<span class="string">&quot;(1,3)(2,5,4)&quot;</span>)</span><br><span class="line">sigma**<span class="number">2</span></span><br><span class="line"><span class="comment"># (2,4,5)</span></span><br></pre></td></tr></table></figure><h4 id="循环置换群"><a href="#循环置换群" class="headerlink" title="循环置换群"></a>循环置换群</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">C3 = CyclicPermutationGroup(<span class="number">3</span>)</span><br></pre></td></tr></table></figure><h3 id="交代群-A-n"><a href="#交代群-A-n" class="headerlink" title="交代群$A_n$"></a>交代群$A_n$</h3><ul><li>$S_n$的子群,偶排列,$|A_n|=\dfrac{n!}{2}$</li></ul><blockquote><p>如果排列为偶<code>.sign()</code>输出1,为奇输出-1</p></blockquote><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">A4 = AlternatingGroup(<span class="number">4</span>)</span><br><span class="line">rho = A4.random_element()</span><br><span class="line">rho</span><br><span class="line"><span class="comment"># (1,4,2)</span></span><br><span class="line"></span><br><span class="line">rho.sign()</span><br><span class="line"><span class="comment"># 1</span></span><br><span class="line"></span><br><span class="line">S4 = SymmetricGroup(<span class="number">4</span>)</span><br><span class="line">rho = S4.random_element()</span><br><span class="line">rho; rho.sign()</span><br><span class="line"><span class="comment"># (1,4,2,3)</span></span><br><span class="line"><span class="comment"># -1</span></span><br><span class="line"></span><br><span class="line">A4.order()<span class="string">&#x27; S4.order()</span></span><br><span class="line"><span class="string"># 12</span></span><br><span class="line"><span class="string"># 24</span></span><br></pre></td></tr></table></figure><blockquote><p>通过给定generators来生成一个群的子群</p></blockquote><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">sigma = (<span class="number">1</span>,<span class="number">4</span>,<span class="number">2</span>)</span><br><span class="line">sg = A4.subgroup([sigma])</span><br><span class="line">sg.list()</span><br><span class="line"><span class="comment"># [(), (1,2,4), (1,4,2)]</span></span><br></pre></td></tr></table></figure><blockquote><p>穷举所有子群(注意<code>s</code>)</p></blockquote><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">A4.subgroups()</span><br></pre></td></tr></table></figure><h3 id="陪集"><a href="#陪集" class="headerlink" title="陪集"></a>陪集</h3><ul><li>$H$是$G$的子群,$H$的左陪集:$gH=\{gh:h\in H\}$</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">S3 = SymmetricGroup(<span class="number">3</span>)</span><br><span class="line">a = S3(<span class="string">&quot;(1,2)&quot;</span>)</span><br><span class="line">H = S3.subgroup([a])</span><br><span class="line">rc = S3.cosets(H, side = <span class="string">&#x27;right&#x27;</span>); rc</span><br><span class="line"><span class="comment"># [[(), (1,2)], [(2,3), (1,3,2)], [(1,2,3), (1,3)]]</span></span><br><span class="line"></span><br><span class="line">lc = S3.cosets(H, side = <span class="string">&#x27;left&#x27;</span>); lc</span><br><span class="line"><span class="comment"># [[(), (1,2)], [(2,3), (1,2,3)], [(1,3,2), (1,3)]]</span></span><br></pre></td></tr></table></figure><blockquote><p>乱序的list比较结果为False,可通过排序再进行比较</p></blockquote><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">b = S3(<span class="string">&quot;(1,2,3)&quot;</span>)</span><br><span class="line">H = S3.subgroup([b])</span><br><span class="line">rc = S3.cosets(H, side = <span class="string">&#x27;right&#x27;</span>);</span><br><span class="line">lc = S3.cosets(H, side = <span class="string">&#x27;left&#x27;</span>);</span><br><span class="line">rc == lc</span><br><span class="line"><span class="comment"># False</span></span><br><span class="line"></span><br><span class="line">rc_sorted = sorted([sorted(coset) <span class="keyword">for</span> coset <span class="keyword">in</span> rc])</span><br><span class="line">lc_sorted = sorted([sorted(coset) <span class="keyword">for</span> coset <span class="keyword">in</span> lc])</span><br><span class="line">rc_sorted == lc_sorted</span><br><span class="line"><span class="comment"># True</span></span><br></pre></td></tr></table></figure><ul><li>$H$是$G$的子群,index of $H=H$在$G$中左陪集的个数$=H$右陪集的个数,记作$[G:H]$</li></ul><h3 id="正规子群-Normal-Subgroups"><a href="#正规子群-Normal-Subgroups" class="headerlink" title="正规子群(Normal Subgroups)"></a>正规子群(Normal Subgroups)</h3><ul><li>$H$是$G$的子群,$gH=Hg,\forall g\in G$</li><li>等价条件,设$N$是$G$的子群<ul><li>$N$是$G$的正规子群</li><li>$\forall g\in G,gNg^{-1}\subset N$</li><li>$\forall g\in G,gNg^{-1}=N$</li></ul></li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">A4.is_normal(S4)</span><br><span class="line"><span class="comment"># True</span></span><br></pre></td></tr></table></figure><h3 id="商群-factor-quotient-group"><a href="#商群-factor-quotient-group" class="headerlink" title="商群(factor/quotient group)"></a>商群(factor/quotient group)</h3><ul><li>$N$是$G$的正规子群,商群$G/N$是$N$在$G$中左陪集的集合</li><li>$aN,bN\in G/N,(aN)(bN)=abN$</li><li>$G/N$的阶为$[G:N]$</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">Q = S4.quotient(A4)</span><br></pre></td></tr></table></figure><h3 id="同构-同态"><a href="#同构-同态" class="headerlink" title="同构 同态"></a>同构 同态</h3><ul><li>同构:$(G,\cdot),(H,\circ)$单射且满射$\phi:G\to H$</li></ul><p>$$\phi(a\cdot b)=\phi(a)\circ\phi(b),\forall a,b\in G$$</p><ul><li>同态:$(G,\cdot),(H,\circ)$映射$\phi:G\to H$</li></ul><p>$$\phi(a\cdot b)=\phi(a)\circ\phi(b),\forall a,b\in G$$</p><ul><li>核(kernel):群同态$\phi:G\to H$,$e$是$H$的单位元,$G$的子群$\phi^{-1}({e})$是$\phi$的kernel</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">A4.is_isomorphic(S4)</span><br><span class="line"><span class="comment"># False</span></span><br><span class="line"></span><br><span class="line">x = S4.gen(<span class="number">0</span>)</span><br><span class="line">phi = PermutationGroupMorphism(A4, S4, x)</span><br><span class="line">phi</span><br><span class="line"><span class="comment"># Permutation group morphism:</span></span><br><span class="line"><span class="comment">#   From: Alternating group of order 4!/2 as a permutation group</span></span><br><span class="line"><span class="comment">#   To:   Symmetric group of order 4! as a permutation group</span></span><br><span class="line"><span class="comment">#   Defn: [(2,3,4), (1,2,3)] -&gt; [(1,2,3,4)]</span></span><br><span class="line"></span><br><span class="line">phi = PermutationGroupMorphism(A4, S4, A4.gens()); phi</span><br><span class="line"><span class="comment"># Permutation group morphism:</span></span><br><span class="line"><span class="comment">#   From: Alternating group of order 4!/2 as a permutation group</span></span><br><span class="line"><span class="comment">#   To:   Symmetric group of order 4! as a permutation group</span></span><br><span class="line"><span class="comment">#   Defn: [(2,3,4), (1,2,3)] -&gt; [(2,3,4), (1,2,3)]</span></span><br><span class="line"></span><br><span class="line">a = A4.random_element(); print(a, <span class="string">&quot;-&gt;&quot;</span>, phi(a))</span><br><span class="line"><span class="comment"># ((2,3,4), &#x27;-&gt;&#x27;, (2,3,4))</span></span><br><span class="line"></span><br><span class="line">phi.kernel()</span><br><span class="line"><span class="comment"># Subgroup of (Alternating group of order 4!/2 as a permutation group) generated by [()]</span></span><br></pre></td></tr></table></figure><h3 id="null-space"><a href="#null-space" class="headerlink" title="null space"></a>null space</h3><p><code>sage</code>中null space使用kernel代替</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">Z = Integers(<span class="number">2</span>)</span><br><span class="line">Z</span><br><span class="line"><span class="comment"># Ring of integers modulo 2</span></span><br><span class="line">M = matrix(Z,[[<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>],[<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>],[<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>]])</span><br><span class="line">M</span><br><span class="line"><span class="comment"># [0 1 0 0 0]</span></span><br><span class="line"><span class="comment"># [1 0 1 0 1]</span></span><br><span class="line"><span class="comment"># [1 0 0 1 0]</span></span><br><span class="line">H = M.right_kernel_matrix()</span><br><span class="line">H</span><br><span class="line"><span class="comment"># [1 0 0 1 1]</span></span><br><span class="line"><span class="comment"># [0 0 1 0 1]</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 问题求解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sage </tag>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数理逻辑</title>
      <link href="/2019/03/13/%E6%95%B0%E7%90%86%E9%80%BB%E8%BE%91/"/>
      <url>/2019/03/13/%E6%95%B0%E7%90%86%E9%80%BB%E8%BE%91/</url>
      
        <content type="html"><![CDATA[<h2 id="第一讲-命题逻辑"><a href="#第一讲-命题逻辑" class="headerlink" title="第一讲 命题逻辑"></a>第一讲 命题逻辑</h2><h3 id="定义1-1"><a href="#定义1-1" class="headerlink" title="定义1.1"></a>定义1.1</h3><p>命题符:$P_0,P_1,P_2…P_n,n\in\mathbb{N}$,记$PS={P_n|n\in\mathbb{N}}$.本书中,命题符之集$PS$为可数无穷集,即$|PS|=\aleph_0$</p><h3 id="定义1-3"><a href="#定义1-3" class="headerlink" title="定义1.3"></a>定义1.3</h3><p>所有命题的集合$PROP$是满足以下条件的最小集合</p><ol><li>$PS\subseteq PROP$</li><li>若$A\in PROP$,则$C_{\lnot}(A)\in PROP$</li><li>若$A,B\in PROP$,则$C_{\wedge(A,B)},C_{\vee}(A,B)$和$C_{\to}(A,B)\in PROP$</li></ol><h3 id="引理-1-5"><a href="#引理-1-5" class="headerlink" title="引理 1.5"></a>引理 1.5</h3><p>$A\in PROP$等价于存在有穷序列$A_0,A_1…A_n$使$A$为$A_n$且对任何$i\le n$</p><ol><li>$A_i\in PS$</li><li>或 存在$k &lt; i$使$A_i$为$(\lnot A_k)$</li><li>或 存在$k,j &lt; i$使$A_i$为$(A_k\ast A_l)$,这里$\ast$为$\wedge,\vee,\to$之一</li></ol><h3 id="命题-1-9"><a href="#命题-1-9" class="headerlink" title="命题 1.9"></a>命题 1.9</h3><ol><li>$v$满足$A$,记为$v\models A$,指$\hat{v}(A)=T$</li><li>$A$为永真式,记为$\models A$,指对任何$v$有$\hat{v}(A)=T$</li><li>$A$可满足,指有$v$使$v\models A$</li><li>设$\Gamma$为命题集,$A$为$T$的语义结论,记为$\Gamma\models A$,指对所有$v$,若对任何$B\in\Gamma$有$\hat{v}(B)=T$则$\hat{v}=T$</li></ol><h3 id="定义-1-13"><a href="#定义-1-13" class="headerlink" title="定义 1.13"></a>定义 1.13</h3><p>设$A,B$为命题$A$与$B$逻辑等价,记为$A\simeq B$,指对任何赋值$v,v\models A$ iff $v\models B$</p><h2 id="第八讲-命题逻辑的永真推理系统"><a href="#第八讲-命题逻辑的永真推理系统" class="headerlink" title="第八讲 命题逻辑的永真推理系统"></a>第八讲 命题逻辑的永真推理系统</h2><table><thead><tr><th align="center">公理</th><th align="center"></th></tr></thead><tbody><tr><td align="center">A01</td><td align="center">$A\to A$</td></tr><tr><td align="center">A02</td><td align="center">$(A\to(B\to C))\to(B\to(A\to C))$</td></tr><tr><td align="center">A03</td><td align="center">$(A\to B)\to((B\to C)\to(A\to C))$</td></tr><tr><td align="center">A04</td><td align="center">$(A\to(A\to B))\to(A\to B)$</td></tr><tr><td align="center">A05</td><td align="center">$(A\to\lnot B)\to(B\to\lnot A)$</td></tr><tr><td align="center">A06</td><td align="center">$(\lnot\lnot A)\to A$</td></tr><tr><td align="center">A07</td><td align="center">$(A\wedge B)\to A$</td></tr><tr><td align="center">A08</td><td align="center">$(A\wedge B)\to B$</td></tr><tr><td align="center">A09</td><td align="center">$A\to(B\to(A\wedge B))$</td></tr><tr><td align="center">A10</td><td align="center">$A\to(A\vee B)$</td></tr><tr><td align="center">A11</td><td align="center">$B\to(A\vee B)$</td></tr><tr><td align="center">A12</td><td align="center">$(A\to C)\to((B\to C)\to((A\vee B)\to C))$</td></tr><tr><td align="center">T13</td><td align="center">$(A\to B)\to((C\to A)\to(C\to B))$</td></tr><tr><td align="center">T14</td><td align="center">$(A\to B)\to([D\to(C\to A)]\to[D\to(C\to B)])$</td></tr><tr><td align="center">T15</td><td align="center">$\vdash A\to(B\to A)$</td></tr><tr><td align="center">T16</td><td align="center">$\vdash[C\to(B\to A)]\to[(C\to B)\to(C\to A)]$</td></tr><tr><td align="center">T17</td><td align="center">$\vdash(\lnot A\to\lnot B)\to(B\to S)$</td></tr><tr><td align="center">T18</td><td align="center">$\vdash A\to \lnot\lnot A$</td></tr><tr><td align="center">T19</td><td align="center">$\vdash(A\to B)\to(\lnot B\to\lnot A)$</td></tr><tr><td align="center">T20</td><td align="center">$\vdash A\vee\lnot A$</td></tr><tr><td align="center">T21</td><td align="center">$A,\lnot A\vdash\lnot B$</td></tr><tr><td align="center">T22</td><td align="center">$A,\lnot A\vdash B$</td></tr><tr><td align="center">T23</td><td align="center">$(B\to\lnot B)\to\lnot B$</td></tr><tr><td align="center">T24</td><td align="center">$\vdash(A\to(C\wedge\lnot C)\to\lnot A$</td></tr><tr><td align="center">T25</td><td align="center">$(B\vee A)\to(\lnot A\to B)$</td></tr><tr><td align="center">T26</td><td align="center">$(A\to B)\to(B\vee\lnot A)$</td></tr><tr><td align="center">T27</td><td align="center">$(A\vee B)\to(B\vee A)$</td></tr><tr><td align="center">T28</td><td align="center">$(A\to(B\to C))\to((A\wedge B)\to C)$</td></tr><tr><td align="center">T29</td><td align="center">$(C\vee A)\to((C\vee B)\to(C\vee(A\wedge B)))$</td></tr><tr><td align="center">T30</td><td align="center">$(C\vee A)\to[(B\to C)\to((A\to B)\to C)]$</td></tr><tr><td align="center">T31</td><td align="center">$(A\to(C\vee B))\to(C\vee(A\to B))$</td></tr></tbody></table><h3 id="定理-8-3-推理定理"><a href="#定理-8-3-推理定理" class="headerlink" title="定理 8.3(推理定理)"></a>定理 8.3(推理定理)</h3><p>若$\Gamma,C\vdash A$,则$\Gamma\vdash C\to A$,这里$\Gamma,C$为$\Gamma\cup\{C\}$的简写</p>]]></content>
      
      
      <categories>
          
          <category> 数理逻辑 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>概率论与数理统计</title>
      <link href="/2019/03/09/%E6%A6%82%E7%8E%87%E8%AE%BA%E4%B8%8E%E6%95%B0%E7%90%86%E7%BB%9F%E8%AE%A1/"/>
      <url>/2019/03/09/%E6%A6%82%E7%8E%87%E8%AE%BA%E4%B8%8E%E6%95%B0%E7%90%86%E7%BB%9F%E8%AE%A1/</url>
      
        <content type="html"><![CDATA[<h1 id="第一章"><a href="#第一章" class="headerlink" title="第一章"></a>第一章</h1><h2 id="定理1-1-全概率公式"><a href="#定理1-1-全概率公式" class="headerlink" title="定理1.1 全概率公式"></a>定理1.1 全概率公式</h2><blockquote><p>deleted</p></blockquote><h2 id="定理1-2-贝叶斯公式"><a href="#定理1-2-贝叶斯公式" class="headerlink" title="定理1.2 贝叶斯公式"></a>定理1.2 贝叶斯公式</h2><blockquote><p>deleted</p></blockquote><h2 id="定理1-6-泊松定理"><a href="#定理1-6-泊松定理" class="headerlink" title="定理1.6 泊松定理"></a>定理1.6 <strong>泊松定理</strong></h2><p>设$n$为正整数,$\lambda=np_n$为常数,则对任意正整数$k$有<br>$$ \lim_{n\to\infty}C_n^kp_n^k(1-p_n)^{n-k}=\dfrac{\lambda^k}{k!}e^{-\lambda} $$</p><h1 id="第二章"><a href="#第二章" class="headerlink" title="第二章"></a>第二章</h1><h2 id="分布函数-F-x-的基本性质"><a href="#分布函数-F-x-的基本性质" class="headerlink" title="分布函数$F(x)$的基本性质"></a>分布函数$F(x)$的<strong>基本性质</strong></h2><ol><li>$F(x_2)\ge F(x_1)$</li><li>$F(-\infty)=0,F(+\infty)=1$</li><li>右连续</li></ol><h2 id="常见离散型随机变量"><a href="#常见离散型随机变量" class="headerlink" title="常见离散型随机变量"></a>常见离散型随机变量</h2><ul><li>0-1分布</li></ul><p>如果随机试验$E$只有两个结果:$A$与$\bar{A}$,则称$E$为<strong>贝努利试验</strong></p><ul><li>二项分布</li></ul><p>设$n$重贝努利试验中$A$发生的次数为$X$,则$X$服从二项分布</p><ul><li>泊松分布,$X\sim P(\lambda)$</li></ul><p>$$p_k=P(X=k)=\dfrac{\lambda^k}{k!}e^{-\lambda},k=0,1,2…$$<br>其中$\lambda &gt; 0$为常数</p><p>若随机变量$X\sim B(n,p)$,则当$n$充分大,$p$充分小时,令$\lambda=np$,则有<br>$$ P(X=k)=C^k_np^k(1-p)^{n-k}\approx\dfrac{\lambda^k}{k!}e^{-\lambda} $$</p><ul><li>几何分布,$g(p)$</li></ul><p>$$p_k=P(X=k)=(1-p)^{k-1}p,k=1,2…$$</p><p>在贝努利试验中$P(A)=p,P(\bar{A})=1-p$,试验进行到$A$首次出现为止</p><p>令$X$表示所需试验次数,则$X$服从参数为$p$的几何分布</p><p><strong>无记忆性</strong>:$P(X=s+t|X &gt; t) = P(X=s)$</p><ul><li><em>超几何分布</em></li></ul><p><em>一批产品有$N$件,其中$M$件次品,其余为正品<br>令$X$为取出$n$件产品中的次品数,$X$服从超几何分布</em></p><h2 id="连续型随机变量-密度函数-p-x-的基本性质"><a href="#连续型随机变量-密度函数-p-x-的基本性质" class="headerlink" title="(连续型随机变量)密度函数$p(x)$的基本性质"></a>(连续型随机变量)密度函数$p(x)$的基本性质</h2><ol><li>$p(x)\ge0$</li><li>$\int_{-\infty}^{+\infty}p(x)dx=1$</li></ol><h2 id="常见连续型随机变量"><a href="#常见连续型随机变量" class="headerlink" title="常见连续型随机变量"></a>常见连续型随机变量</h2><ul><li><p>均匀分布,$U[a,b]$</p></li><li><p>指数分布,$X\sim E(\lambda)$</p></li></ul><p>$$p(x)=\begin{cases}<br>\lambda e^{-\lambda x}&amp;x\ge0\\<br>0&amp;x &lt; 0<br>\end{cases}$$<br>其中$\lambda &gt; 0$为常数</p><p>$X$的分布函数为<br>$$<br>F(x)=\begin{cases}<br>1-e^{-\lambda x}&amp;x\ge0\\<br>0&amp;x &lt; 0<br>\end{cases}<br>$$</p><p><strong>无记忆性</strong>:$P(X &gt; s + t|X &gt; s)=P(X &gt; t)$</p><ul><li>正态分布,记为$X\sim N(\mu,\sigma^2)$</li></ul><p>$$p(x)=\dfrac{1}{\sqrt{2\pi}\sigma}e^{-\frac{(x-\mu)^2}{2\sigma^2}},-\infty &lt; x &lt; \infty$$</p><p><strong>正态分布随机变量的线性函数仍然服从正态分布</strong>:$X\sim N(\mu,\sigma^2)$,则$Y=aX+b\sim N(a\mu+b,(a\sigma)^2)$</p><h2 id="随机变量函数的分布"><a href="#随机变量函数的分布" class="headerlink" title="随机变量函数的分布"></a>随机变量函数的分布</h2><p>$$ F_Y(y)=P(Y\le y)=P(g(X)\le y)=\int_{x:g(x)\le y}p_X(x)dx $$</p><h1 id="第三章"><a href="#第三章" class="headerlink" title="第三章"></a>第三章</h1><h2 id="二维分布函数性质"><a href="#二维分布函数性质" class="headerlink" title="二维分布函数性质"></a>二维分布函数性质</h2><ol><li><p>$F(x,y)$分别对每个变量单调不减</p><ul><li>$\forall y,x_2 &gt; x_1,F(x_2,y) &gt; F(x_1,y)$</li><li>$\forall x,y_2 &gt; y_1,F(x,y_2) &gt; F(x,y_1)$</li></ul></li><li><p>$0\le F(x,y)\le1$,且</p><ul><li>$\forall y,F(-\infty,y)=0$</li><li>$\forall x,F(x,-\infty)=0$</li><li>$F(-\infty,-\infty)=0$</li><li>$F(+\infty,+\infty)=1$</li></ul></li><li><p>$F(x,y)$关于每个变量右连续<br>$$F(x,y)=F(x+0,y),F(x,y)=F(x,y+0)$$</p></li><li><p>$F(x_2,y_2)-F(x_2,y_1)-F(x_1,y_2)+F(x_1,y_1)\ge0,(x_2\ge x_1,y_2\ge y_1)$</p></li></ol><h2 id="边缘分布函数-F-X-x-F-Y-y"><a href="#边缘分布函数-F-X-x-F-Y-y" class="headerlink" title="边缘分布函数$F_X(x),F_Y(y)$"></a>边缘分布函数$F_X(x),F_Y(y)$</h2><h2 id="联合密度函数性质"><a href="#联合密度函数性质" class="headerlink" title="联合密度函数性质"></a>联合密度函数性质</h2><ol><li>$p(x,y)\ge0$</li><li>$\int_{-\infty}^{+\infty}\int_{-\infty}^{+\infty}p(x,y)dxdy=1$</li><li>若$p(x,y)$在点$p(x,y)$连续,则$\dfrac{\partial^2F(x,y)}{\partial x\partial y}=p(x,y)$</li><li>点$(X,Y)$落在$G$内的概率:$P((X,Y)\in G)=\iint_Gp(x,y)dxdy$</li></ol><h2 id="边缘密度-p-X-x-p-Y-y"><a href="#边缘密度-p-X-x-p-Y-y" class="headerlink" title="边缘密度$p_X(x),p_Y(y)$"></a>边缘密度$p_X(x),p_Y(y)$</h2><h2 id="二维随机变量函数的分布"><a href="#二维随机变量函数的分布" class="headerlink" title="二维随机变量函数的分布"></a>二维随机变量函数的分布</h2><h3 id="泊松分布的可加性"><a href="#泊松分布的可加性" class="headerlink" title="泊松分布的可加性"></a>泊松分布的可加性</h3><p>$X,Y$独立,分别服从参数为$\lambda_1,\lambda_2$的泊松分布,则$Z=X+Y$服从参数为$\lambda_1+\lambda_2$的泊松分布</p><p>如果随机变量$X$与$Y$相互独立,且$X\sim N(\mu_1,\sigma_1^2),Y\sim N(\mu_2,\sigma_2^2)$</p><h3 id="随机变量和的分布"><a href="#随机变量和的分布" class="headerlink" title="随机变量和的分布"></a>随机变量和的分布</h3><ul><li>分布函数法</li><li>卷积公式法</li></ul><h3 id="独立正态随机变量线性函数的分布"><a href="#独立正态随机变量线性函数的分布" class="headerlink" title="独立正态随机变量线性函数的分布"></a>独立正态随机变量线性函数的分布</h3><ul><li>$Z=X+Y\sim N(\mu_1+\mu_2,\sigma_1^2+\sigma_2^2)$</li><li>$Z=aX+bY\sim N(a\mu_1+b\mu_2,a^2\sigma_1^2+b^2\sigma_2^2)$</li></ul><p>推广:如果$X_1,X_2…X_n$相互独立,$X_i\sim N(\mu_i,\sigma_i^2)$</p><p>$$Z=a_1X_1+a_2X_2+…+a_nX_n\sim N(\sum_{i=1}^ba_i\mu_i,\sum_{i=1}^na_i^2\sigma_i^2)$$</p><h3 id="极大极小分布"><a href="#极大极小分布" class="headerlink" title="极大极小分布"></a>极大极小分布</h3><ul><li><p>$F_M(z)=P(\max{X,Y}\le z)=P(X\le z,Y\le z)$</p></li><li><p>$F_N(z)=P(\min{X,Y}\le z)=1-P(\min(X,Y)\ge z)=1-P(X &gt; z,Y &gt; z)$</p></li></ul><p>当$X_1,X_2,…,X_n$相互独立且同分布</p><ul><li><p>$F_M(z)=[F(z)]^n$</p></li><li><p>$F_N(z)=1-[1-F(z)]^n$</p></li></ul><h1 id="第四章"><a href="#第四章" class="headerlink" title="第四章"></a>第四章</h1><h2 id="方差"><a href="#方差" class="headerlink" title="方差"></a>方差</h2><ul><li><p>$D(X)=E(X-EX)^2=EX^2-(EX)^2$</p></li><li><p>当$X,Y$独立,$D(X\pm Y)=D(X)\pm D(Y)$</p></li><li><p>切比雪夫不等式:对任意$\varepsilon &gt; 0$</p></li></ul><p>$$P(|X-E(X)|\ge\varepsilon)\le\dfrac{D(X)}{\varepsilon^2}$$</p><h2 id="常见分布的期望与方差"><a href="#常见分布的期望与方差" class="headerlink" title="常见分布的期望与方差"></a>常见分布的期望与方差</h2><table><thead><tr><th align="center">记号</th><th align="center">分布</th><th align="center">参数</th><th align="center">数学期望</th><th align="center">方差</th></tr></thead><tbody><tr><td align="center"></td><td align="center">0-1分布</td><td align="center">$0 &lt; p &lt; 1$</td><td align="center">$p$</td><td align="center">$p(1-p)$</td></tr><tr><td align="center"></td><td align="center"><em>几何分布</em></td><td align="center"><em>$0 &lt; p &lt; 1$</em></td><td align="center"><em>$1/p$</em></td><td align="center"><em>$\dfrac{1-p}{p^2}$</em></td></tr><tr><td align="center">$B(n,p)$</td><td align="center">二项分布</td><td align="center">$n\ge1,0 &lt; p &lt; 1$</td><td align="center">$np$</td><td align="center">$np(1-p)$</td></tr><tr><td align="center">$P(\lambda)$</td><td align="center">泊松分布</td><td align="center">$\lambda &gt; 0$</td><td align="center">$\lambda$</td><td align="center">$\lambda$</td></tr><tr><td align="center">$U(a,b)$</td><td align="center">均匀分布</td><td align="center">$a &lt; b$</td><td align="center">$(a + b)/2$</td><td align="center">$(b-a)^2/12$</td></tr><tr><td align="center">$E(\lambda)$</td><td align="center">指数分布</td><td align="center">$\lambda &gt; 0$</td><td align="center">$1/\lambda$</td><td align="center">$1/\lambda^2$</td></tr><tr><td align="center">$N(\mu,\sigma^2)$</td><td align="center">正态分布</td><td align="center">$\mu\in R,\sigma &gt; 0$</td><td align="center">$\mu$</td><td align="center">$\sigma^2$</td></tr><tr><td align="center">$\chi^2(n)$</td><td align="center">$\chi^2$分布</td><td align="center">$n$</td><td align="center">$n$</td><td align="center">$2n$</td></tr></tbody></table><h2 id="矩"><a href="#矩" class="headerlink" title="矩"></a>矩</h2><ul><li><p><strong>$X$的$k$阶中心矩</strong>:$E(X-EX)^k$</p></li><li><p><strong>$X$的$k$阶原点矩</strong>:$X\sim N(0,1),EX^k=<br>\begin{cases}<br>0 &amp; k\text{为奇数}\\<br>(k-1)!!\quad &amp; k\text{为偶数}\\<br>\end{cases}$</p></li></ul><h2 id="协方差-cov-X-Y"><a href="#协方差-cov-X-Y" class="headerlink" title="协方差,cov$(X,Y)$"></a>协方差,cov$(X,Y)$</h2><p>$$ \text{cov}(X,Y)=E[(X-EX)(Y-EY)]=E(XY)-E(X)E(Y) $$</p><p>$$ D(X\pm Y)=D(X)+D(Y)\pm2\text{cov}(X,Y) $$</p><blockquote><p>其他性质</p></blockquote><h2 id="相关系数-rho-XY-或corr-X-Y"><a href="#相关系数-rho-XY-或corr-X-Y" class="headerlink" title="相关系数,$\rho_{XY}$或corr$(X,Y)$"></a>相关系数,$\rho_{XY}$或corr$(X,Y)$</h2><p>$$ \dfrac{\text{cov}(X,Y)}{\sqrt{D(X)D(Y)}} $$</p><ul><li>$X,Y$不相关的等价条件<ol><li>$\rho(XY)=0$</li><li>$cov(X,Y)=0$</li><li>$E(XY)=E(X)E(Y)$</li><li>$D(X\pm Y)=D(X)\pm D(Y)$</li></ol></li></ul><h1 id="第五章"><a href="#第五章" class="headerlink" title="第五章"></a>第五章</h1><h2 id="大数定律"><a href="#大数定律" class="headerlink" title="大数定律"></a>大数定律</h2><p>对任意$\varepsilon &gt; 0$,有<br>$$ \lim_{n\to\infty}\{|\dfrac{1}{n}\sum_{k=1}^nX_k-\dfrac{1}{n}\sum_{k=1}^nEX_k| &lt; \varepsilon\}=1 $$<br>或<br>$$ \lim_{n\to\infty}\{|\dfrac{1}{n}\sum_{k=1}^nX_k-\dfrac{1}{n}\sum_{k=1}^nEX_k|\ge\varepsilon\}=0 $$<br>则称$\{X_n\}$服从<strong>大数定律</strong>,(随机变量的平均值依概率收敛于他们数学期望的平均值)</p><h3 id="马尔科夫大数定律"><a href="#马尔科夫大数定律" class="headerlink" title="马尔科夫大数定律"></a>马尔科夫大数定律</h3><p>设随机变量$\{X_n\}$满足$\dfrac{1}{n^2}D(\sum_{k=1}^nX_k)\to0(n\to\infty)$,则$\{X_n\}$服从大数定律</p><h3 id="切比雪夫大数定律"><a href="#切比雪夫大数定律" class="headerlink" title="切比雪夫大数定律"></a>切比雪夫大数定律</h3><p>设$\{X_n\}$为两两互不相关的随机变量序列,又存在常数$C &gt; 0$,使得对每个随机变量$X_k,D(X_k)\le C$,则$\{X_n\}$服从大数定律</p><h3 id="独立同分布大数定律"><a href="#独立同分布大数定律" class="headerlink" title="独立同分布大数定律"></a>独立同分布大数定律</h3><p>若$\{X_n\}$独立同分布,$EX_n=\mu,D(X_n)=\sigma^2 &lt; \infty$,则$\{X_n\}$服从大数定律,即$\dfrac{1}{n}\sum_{k=1}^{n}X_k\overset{P}{\to}\mu(=EX_k)$ </p><h3 id="Bernoulli大数定律"><a href="#Bernoulli大数定律" class="headerlink" title="Bernoulli大数定律"></a>Bernoulli大数定律</h3><p>设$\mu_n$为$n$重Bernoulli试验中事件$A$发生的次数,$p$为事件$A$在每次试验中发生的概率,则任意的$\varepsilon &gt; 0$<br>$$ \lim_{n\to\infty}P(|\dfrac{\mu_n}{n}-p|\ge\varepsilon)=0 $$</p><h2 id="中心极限定理"><a href="#中心极限定理" class="headerlink" title="中心极限定理"></a>中心极限定理</h2><h3 id="列维-林德伯格中心极限定理-独立同分布的中心极限定理"><a href="#列维-林德伯格中心极限定理-独立同分布的中心极限定理" class="headerlink" title="列维-林德伯格中心极限定理(独立同分布的中心极限定理)"></a>列维-林德伯格中心极限定理(独立同分布的中心极限定理)</h3><p>设$\{X_n\}$独立同分布,$EX_n=\mu,D(X_n)=\sigma^2$都存在,则$\{X_n\}$服从中心极限定理<br>$$ \lim_{n\to\infty}P(\dfrac{\sum_{k=1}^nX_k-n\mu}{\sqrt{n\sigma^2}}\le x)=\dfrac{1}{\sqrt{2\pi}}\int_{-\infty}^{x}e^{-\frac{t^2}{2}}dt=\Phi(x) $$</p><h3 id="贝努利情形的中心极限定理-拉普拉斯中心极限定理"><a href="#贝努利情形的中心极限定理-拉普拉斯中心极限定理" class="headerlink" title="贝努利情形的中心极限定理(拉普拉斯中心极限定理)"></a>贝努利情形的中心极限定理(拉普拉斯中心极限定理)</h3><blockquote><p>TODO</p></blockquote><p>$\mu_n$服从二项分布,则$\mu_n$的极限分布是正态分布</p><h1 id="第六章"><a href="#第六章" class="headerlink" title="第六章"></a>第六章</h1><h2 id="统计量"><a href="#统计量" class="headerlink" title="统计量"></a>统计量</h2><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><ul><li>样本均值<br>$$ \bar{X}=\dfrac{1}{n}\sum_{i=1}^nX_i $$</li><li>样本方差<br>$$ S_n^2=\dfrac{1}{n}\sum_{i=1}^n(X_i-\bar{X})^2=\dfrac{1}{n}\sum_{i=1}^nX_i^2-\bar{X}^2 $$</li><li>(修正的)样本方差<br>$$ S_{n-1}^2=\dfrac{1}{n-1}\sum_{i=1}^n(X_i-\bar{X})^2 $$<ul><li>与样本方差的关系<br>$$ \dfrac{S_n}{\sqrt{n-1}}=\dfrac{S_{n-1}}{\sqrt{n}} $$</li></ul></li><li>样本$k$阶(原点)矩</li><li>样本$k$阶中心矩</li></ul><h2 id="chi-2-分布"><a href="#chi-2-分布" class="headerlink" title="$\chi^2$分布"></a>$\chi^2$分布</h2><p>$X_1,X_2…X_n$独立同分布,均$\sim N(0,1)$,称随机变量<br>$$ \chi^2_n=\sum_{i=1}^nX_i^2 $$<br>为服从自由度为$n$的**$\chi^2$分布**,记为$\chi^2_n=\chi^2(n)$</p><ol><li>若$\chi_1^2\sim\chi^2(n_1),\chi_2^n\sim\chi^2(n_2),$且$\chi_1^2$与$\chi_2^2$相互独立,则有$\chi_1^2+\chi_2^2\sim\chi^2(n_1+n_2)$</li><li>若$\chi^2\sim\chi^2(n)$,则$E(\chi^2)=n,D(\chi^2)=2n$</li></ol><h2 id="t-分布"><a href="#t-分布" class="headerlink" title="$t$分布"></a>$t$分布</h2><p>$X\sim N(0,1),Y\sim\chi^2(n)$且$X,Y$相互独立,称随机变量<br>$$ T=\dfrac{X}{\sqrt{Y/n}} $$<br>为服从自由度为$n$的<strong>t分布</strong>,记为$T\sim t(n)$</p><h2 id="F-分布"><a href="#F-分布" class="headerlink" title="$F$分布"></a>$F$分布</h2><p>$U\sim\chi^2(n_1),V\sim\chi^2(n_2)$,且$U,V$相互独立,称随机变量<br>$$ F=\dfrac{U/n_1}{V/n_2} $$<br>为服从自由度为$(n_1,n_2)$的<strong>F分布</strong>,记为$F\sim F(n_1,n_2)$</p><ul><li>若$F\sim F(n_1,n_2)$,则$\dfrac{1}{F}\sim F(n_2,n_1)$</li></ul><h2 id="上-alpha-分位点"><a href="#上-alpha-分位点" class="headerlink" title="上$\alpha$分位点"></a>上$\alpha$分位点</h2><p>对于上$\alpha$分位点$\lambda_\alpha$,$X$服从$N(0,1),\chi^2(n),t(n),F(n_1,n_2)$时分别记为$u_\alpha,\chi^2_\alpha(n),t_\alpha(n),F_\alpha(n_1,n_2)$</p><p>$$ u_{1-\alpha}=-u_{\alpha} $$<br>$$ t_{1-\alpha}(n)=-t_{1-\alpha}(n) $$<br>$$ F_{1-\alpha}(n_1,n_2)=\dfrac{1}{F_\alpha(n_2,n_1)} $$<br>$$ P(\dfrac{1}{F}&gt;\dfrac{1}{F_{1-\alpha}(n_1,n_2)})=\alpha $$</p><h2 id="样本均值的分布"><a href="#样本均值的分布" class="headerlink" title="样本均值的分布"></a>样本均值的分布</h2><p>设$X_1,X_2…X_n$来自正态总体$X\sim N(\mu,\sigma^2)$的样本,则</p><ul><li>$\dfrac{\bar{X}-\mu}{\sigma/\sqrt{n}}\sim N(0,1)$(<em>$\bar{X}\sim N(\mu,\dfrac{\sigma^2}{n})$</em>)</li></ul><h2 id="样本方差的分布"><a href="#样本方差的分布" class="headerlink" title="样本方差的分布"></a>样本方差的分布</h2><p>设$X_1,X_2…X_n$是来自正态总体$N(\mu,\sigma^2)$的样本,$\bar{X},S_n^2$分别为样本均值和样本方差,则有</p><ul><li>$\dfrac{nS_n^2}{\sigma^2}\sim\chi^2(n-1)$或$\dfrac{(n-1)S^2_{n-1}}{\sigma^2}\sim\chi^2(n-1)$(<em>$\dfrac{1}{\sigma^2}\sum_1^n(\dfrac{X_i-\bar{X}}{\sigma})^2=\sum_1^n(\dfrac{X_i-\bar{X}}{\sigma})^2\sim\chi^2(n-1)$</em>)</li><li>$\bar{X}$与$S_n^2$独立</li></ul><h2 id="3"><a href="#3" class="headerlink" title="3"></a>3</h2><p>设$X_1,X_2…X_n$来自正态总体$X\sim N(\mu,\sigma^2)$的样本,则有</p><ul><li>$\dfrac{\bar{X}-\mu}{S_n/\sqrt{n-1}}\sim t(n-1)$或$\dfrac{\bar{X}-\mu}{S_{n-1}/\sqrt{n}}\sim t(n-1)$</li></ul><h2 id="双正态总体样本均值差-样本方差比的分布"><a href="#双正态总体样本均值差-样本方差比的分布" class="headerlink" title="双正态总体样本均值差,样本方差比的分布"></a>双正态总体样本均值差,样本方差比的分布</h2><p>设$X\sim N(\mu_1,\sigma_1^2),Y\sim N(\mu_2,\sigma_2^2)$,且$X,Y$独立,$X_1,X_2…X_{n_1}$是来自$X$的样本,$Y_1,Y_2…Y_{n_2}$是来自$Y$的样本,$\bar{X},\bar{Y}$是样本均值,$S_1^2,S_2^2$是$X,Y$的修正样本方差</p><p>$$ S_1^2=\dfrac{1}{n-1}\sum_{i=1}^{n_1}(X_i-\bar{X})^2\qquad S_2^2=\dfrac{1}{n_2-1}\sum_{i=1}^{n_2}(Y_i-\bar{Y})^2 $$</p><p>则有</p><h3 id="4"><a href="#4" class="headerlink" title="4"></a>4</h3><p>$$ \dfrac{S_1^2/S_2^2}{\sigma_1^2/\sigma_2^2}\sim F(n_1-1,n_2-1) $$</p><h3 id="5"><a href="#5" class="headerlink" title="5"></a>5</h3><p>$$ U=\dfrac{(\bar{X}-\bar{Y})-(\mu_1-\mu_2)}{\sqrt{\dfrac{\sigma_1^2}{n_1}+\dfrac{\sigma_2^2}{n_2}}}\sim N(0,1) $$</p><h1 id="第七章"><a href="#第七章" class="headerlink" title="第七章"></a>第七章</h1><h2 id="矩估计"><a href="#矩估计" class="headerlink" title="矩估计"></a>矩估计</h2><h2 id="极大似然估计"><a href="#极大似然估计" class="headerlink" title="极大似然估计"></a>极大似然估计</h2><p><em>$X\sim N(\mu,\sigma^2)$</em></p><h3 id="极大似然估计的不变性"><a href="#极大似然估计的不变性" class="headerlink" title="极大似然估计的不变性"></a>极大似然估计的不变性</h3><p>$\hat{\theta}$是$\theta$的极大似然估计,则$u(\hat{\theta})$是$u(\theta)$的极大似然估计</p><h2 id="估计量的评价标准"><a href="#估计量的评价标准" class="headerlink" title="估计量的评价标准"></a>估计量的评价标准</h2><h2 id="区间估计"><a href="#区间估计" class="headerlink" title="区间估计"></a>区间估计</h2><h3 id="正态总体-N-mu-sigma-2-中均值-mu-的置信区间"><a href="#正态总体-N-mu-sigma-2-中均值-mu-的置信区间" class="headerlink" title="正态总体$N(\mu,\sigma^2)$中均值$\mu$的置信区间"></a>正态总体$N(\mu,\sigma^2)$中均值$\mu$的置信区间</h3><h4 id="sigma-2-已知"><a href="#sigma-2-已知" class="headerlink" title="$\sigma^2$已知"></a>$\sigma^2$已知</h4><p>取枢轴变量<br>$$ U=\dfrac{\bar{X}-u}{\sigma/\sqrt{n}}\sim N(0,1) $$</p><p>由$P(|U| &lt; u_{\alpha/2})=1-\alpha$,解得<br>$$ P(\bar{X}-u_{\alpha/2}\dfrac{\sigma}{\sqrt{n}} &lt; \mu &lt; \bar{X}+u_{\alpha/2}\dfrac{\sigma}{\sqrt{n}})=1-\alpha $$</p><p>于是$\mu$的置信度为$1-\alpha$的置信区间为<br>$$ (\bar{X}-u_{\alpha/2}\dfrac{\sigma}{\sqrt{n}},\bar{X}+u_{\alpha/2}\dfrac{\sigma}{\sqrt{n}}) $$</p><h4 id="sigma-2-未知"><a href="#sigma-2-未知" class="headerlink" title="$\sigma^2$未知"></a>$\sigma^2$未知</h4><p>$S_n^2=\dfrac{1}{n}\sum_{i=1}^n(X_i-\bar{X})^2$,$T=\dfrac{\bar{X}-\mu}{S_n/\sqrt{n-1}}\sim t(n-1)$<em>或$T=\dfrac{\bar{X}-\mu}{S_{n-1}/\sqrt{n}}\sim t(n-1)$</em></p><h3 id="正态总体-N-mu-sigma-2-中方差-sigma-2-的置信区间-mu-未知"><a href="#正态总体-N-mu-sigma-2-中方差-sigma-2-的置信区间-mu-未知" class="headerlink" title="正态总体$N(\mu,\sigma^2)$中方差$\sigma^2$的置信区间($\mu$未知)"></a>正态总体$N(\mu,\sigma^2)$中方差$\sigma^2$的置信区间($\mu$未知)</h3><p>$\chi^2=\dfrac{nS_n^2}{\sigma^2}\sim\chi^2(n-1)$</p><h3 id="两个正态总体-N-mu-1-sigma-1-2-N-mu-2-sigma-2-2-的均值差-mu-1-mu-2-的置信区间"><a href="#两个正态总体-N-mu-1-sigma-1-2-N-mu-2-sigma-2-2-的均值差-mu-1-mu-2-的置信区间" class="headerlink" title="两个正态总体$N(\mu_1,\sigma_1^2),N(\mu_2,\sigma_2^2)$的均值差$\mu_1-\mu_2$的置信区间"></a>两个正态总体$N(\mu_1,\sigma_1^2),N(\mu_2,\sigma_2^2)$的均值差$\mu_1-\mu_2$的置信区间</h3><h4 id="sigma-1-2-sigma-2-2-已知"><a href="#sigma-1-2-sigma-2-2-已知" class="headerlink" title="$\sigma_1^2,\sigma_2^2$已知"></a>$\sigma_1^2,\sigma_2^2$已知</h4><p>取<br>$$ U=\dfrac{\bar{X}-\bar{Y}-(\mu_1-\mu_2)}{\sqrt{\dfrac{\sigma_1^2}{n_1}+\dfrac{\sigma_2^2}{n_2}}}\sim N(0,1) $$</p><p>由$P(|U| &lt; u_{\alpha/2})=1-\alpha$,解得<br>$$ P(\bar{X}-\bar{Y}-u_{\alpha/2}\sqrt{\dfrac{\sigma_1^2}{n_1}+\dfrac{\sigma_2^2}{n_2}} &lt; \mu_1-\mu_2 &lt; \bar{X}-\bar{Y}+u_{\alpha/2}\sqrt{\dfrac{\sigma_1^2}{n_1}+\dfrac{\sigma_2^2}{n_2}})=1-\alpha $$</p><p>得$\mu_1-\mu_2$的置信度为$1-\alpha$的置信区间为<br>$$ (\bar{X}-\bar{Y}-u_{\alpha/2}\sqrt{\dfrac{\sigma_1^2}{n_1}+\dfrac{\sigma_2^2}{n_2^2}},\bar{X}-\bar{Y}+u_{\alpha/2}\sqrt{\dfrac{\sigma_1^2}{n_1}+\dfrac{\sigma_2^2}{n_2}}) $$</p><h4 id="sigma-1-2-sigma-2-2-sigma-2-但-sigma-2-未知"><a href="#sigma-1-2-sigma-2-2-sigma-2-但-sigma-2-未知" class="headerlink" title="$\sigma_1^2=\sigma_2^2=\sigma^2$,但$\sigma^2$未知"></a>$\sigma_1^2=\sigma_2^2=\sigma^2$,但$\sigma^2$未知</h4><blockquote><p>TODO</p></blockquote><h3 id="两个正态总体-N-mu-1-sigma-1-2-N-mu-2-sigma-2-2-的方差比-sigma-1-2-sigma-2-2-的置信区间-mu-1-mu-2-未知"><a href="#两个正态总体-N-mu-1-sigma-1-2-N-mu-2-sigma-2-2-的方差比-sigma-1-2-sigma-2-2-的置信区间-mu-1-mu-2-未知" class="headerlink" title="两个正态总体$N(\mu_1.\sigma_1^2),N(\mu_2,\sigma_2^2)$的方差比$\sigma_1^2/\sigma_2^2$的置信区间($\mu_1,\mu_2$未知)"></a>两个正态总体$N(\mu_1.\sigma_1^2),N(\mu_2,\sigma_2^2)$的方差比$\sigma_1^2/\sigma_2^2$的置信区间($\mu_1,\mu_2$未知)</h3><p>取<br>$$ F=\dfrac{S_1^2\sigma_2^2}{S_2^2\sigma_1^2}\sim F(n_1-1,n_2-1) $$</p><p>作枢轴变量.得<br>$$ P(F_{1-\alpha/2}(n_1-1,n_2-1) &lt; \dfrac{S_1^2\sigma_2^2}{S_2^2\sigma_1^2} &lt; F_{\alpha/2}(n_1-1,n_2-1))=1-\alpha $$</p><p>得到$\dfrac{\sigma_1^2}{\sigma_2^2}$的置信度为$1-\alpha$的置信区间为<br>$$ (\dfrac{S_1^2}{S_2^2}\dfrac{1}{F_{\alpha/2}(n_1-1,n_2-1)},\dfrac{S_1^2}{S_2^2}\dfrac{1}{F_{1-\alpha/2}(n_1-1,n_2-1)}) $$</p><h2 id="非正态总体均值的区间估计-大样本法"><a href="#非正态总体均值的区间估计-大样本法" class="headerlink" title="非正态总体均值的区间估计(大样本法)"></a>非正态总体均值的区间估计(大样本法)</h2><p>$$ \dfrac{\sum_{i=1}^nX_i-n\mu}{\sqrt{n}\sigma}\to N(0,1) $$<br>若$\sigma$未知,用样本标准差$S$代替,得<br>$$ U=\dfrac{\bar{X}-\mu}{S/\sqrt{n}}\approx N(0,1) $$<br>置信区间近似为$(\bar{X}-u_{\alpha/2}\sqrt{\dfrac{\bar{X}(1-\bar{X})}{n}},\bar{X}+u_{\alpha/2}\sqrt{\dfrac{\bar{X}(1-\bar{X})}{n}})$</p><h1 id="第八章"><a href="#第八章" class="headerlink" title="第八章"></a>第八章</h1><h2 id="单个正态总体-N-mu-sigma-2-均值-mu-的假设检验"><a href="#单个正态总体-N-mu-sigma-2-均值-mu-的假设检验" class="headerlink" title="单个正态总体$N(\mu,\sigma^2)$均值$\mu$的假设检验"></a>单个正态总体$N(\mu,\sigma^2)$均值$\mu$的假设检验</h2><h3 id="sigma-2-已知-mu-检验"><a href="#sigma-2-已知-mu-检验" class="headerlink" title="$\sigma^2$已知($\mu$检验)"></a>$\sigma^2$已知($\mu$检验)</h3><h3 id="sigma-2-未知-t-检验"><a href="#sigma-2-未知-t-检验" class="headerlink" title="$\sigma^2$未知($t$检验)"></a>$\sigma^2$未知($t$检验)</h3><h2 id="两个正态总体的均值差的检验"><a href="#两个正态总体的均值差的检验" class="headerlink" title="两个正态总体的均值差的检验"></a>两个正态总体的均值差的检验</h2><h3 id="sigma-2-1-sigma-2-2-均已知"><a href="#sigma-2-1-sigma-2-2-均已知" class="headerlink" title="$\sigma^2_1,\sigma^2_2$均已知"></a>$\sigma^2_1,\sigma^2_2$均已知</h3><h2 id="单个正态总体方差的假设检验-chi-2-检验法"><a href="#单个正态总体方差的假设检验-chi-2-检验法" class="headerlink" title="单个正态总体方差的假设检验($\chi^2$检验法)"></a>单个正态总体方差的假设检验($\chi^2$检验法)</h2><h2 id="两个正态总体的方差比的假设检验-F-检验法"><a href="#两个正态总体的方差比的假设检验-F-检验法" class="headerlink" title="两个正态总体的方差比的假设检验($F$检验法)"></a>两个正态总体的方差比的假设检验($F$检验法)</h2>]]></content>
      
      
      <categories>
          
          <category> 概率论与数理统计 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>vimscript笔记</title>
      <link href="/2019/03/09/vimscript%E7%AC%94%E8%AE%B0/"/>
      <url>/2019/03/09/vimscript%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="资料"><a href="#资料" class="headerlink" title="资料"></a>资料</h2><ul><li><a href="http://vimdoc.sourceforge.net/htmldoc/autocmd.html#VimEnter">ENG手册</a></li><li><a href="http://vimcdoc.sourceforge.net/doc/usr_41.html">vim中文帮助文档</a></li><li><a href="http://learnvimscriptthehardway.onefloweroneworld.com/">笨办法学vimscript</a></li><li><a href="https://google.github.io/styleguide/vimscriptfull.xml#Functions">Google Vimscript Guide</a></li><li><a href="http://lymslive.top/book/vimllearn/vm.cgi?p=content">viml语言编程</a></li></ul><h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><h3 id="函数调用"><a href="#函数调用" class="headerlink" title="函数调用"></a>函数调用</h3><ul><li>调用:<code>:call $func($para)</code></li><li>映射到按键(返回函数的返回值)</li></ul><figure class="highlight vim"><table><tr><td class="code"><pre><span class="line"><span class="keyword">inoremap</span> <span class="symbol">&lt;expr&gt;</span><span class="symbol">&lt;tab&gt;</span> Func()</span><br><span class="line"><span class="keyword">inoremap</span> <span class="symbol">&lt;tab&gt;</span> <span class="symbol">&lt;c-r&gt;</span>=Func()<span class="symbol">&lt;cr&gt;</span></span><br><span class="line"><span class="keyword">inoremap</span> <span class="symbol">&lt;tab&gt;</span> <span class="symbol">&lt;esc&gt;</span>:<span class="keyword">call</span> Func()<span class="symbol">&lt;cr&gt;</span><span class="keyword">a</span></span><br></pre></td></tr></table></figure><h3 id="外部函数调用"><a href="#外部函数调用" class="headerlink" title="外部函数调用"></a>外部函数调用</h3><p>在<code>file.vim</code>中定义</p><figure class="highlight vim"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">file</span>#<span class="title">main</span><span class="params">()</span></span></span><br><span class="line">...</span><br><span class="line"><span class="keyword">endfunction</span></span><br></pre></td></tr></table></figure><p>在其他文件</p><figure class="highlight vim"><table><tr><td class="code"><pre><span class="line"><span class="keyword">call</span> file#main()</span><br></pre></td></tr></table></figure><h3 id="系统函数"><a href="#系统函数" class="headerlink" title="系统函数"></a>系统函数</h3><ul><li><p><code>:help functions</code></p></li><li><p><code>:expand(&quot;&lt;cword&gt;&quot;)</code>:以字符串的形式返回当前光标下的词</p></li></ul><h2 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h2><h3 id="自定义命令"><a href="#自定义命令" class="headerlink" title="自定义命令"></a>自定义命令</h3><figure class="highlight vim"><table><tr><td class="code"><pre><span class="line">command! On <span class="keyword">call</span> MyFunction()</span><br></pre></td></tr></table></figure><h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><h3 id="变量的作用域"><a href="#变量的作用域" class="headerlink" title="变量的作用域"></a>变量的作用域</h3><ul><li><code>g</code>:全局</li><li><code>s</code>:当前脚本</li><li><code>w</code>:当前窗口</li><li><code>t</code>:当前的编辑器选项卡</li><li><code>b</code>:缓冲区</li><li><code>l</code>:当前的函数</li><li><code>a</code>:当前函数的一个参数</li><li><code>v</code>:vim的预定义变量</li></ul><h3 id="访问变量"><a href="#访问变量" class="headerlink" title="访问变量"></a>访问变量</h3><ul><li><code>&amp;</code> <code>var</code>:一个vim选项</li><li><code>&amp;l:</code> <code>var</code>:本地变量(局部变量)</li><li><code>&amp;g:</code> <code>var</code>:全局变量</li><li><code>@</code> <code>var</code>:寄存器</li><li><code>$</code> <code>var</code>:环境变量</li></ul><h3 id="特殊字符-按键"><a href="#特殊字符-按键" class="headerlink" title="特殊字符/按键"></a>特殊字符/按键</h3><ul><li><p>帮助:<code>:help keycodes</code></p></li><li><p><code>&lt;cword&gt;</code>:光标下的单词</p></li><li><p><a href="http://www.bagualu.net/wordpress/archives/2279">获取文件名</a></p><ul><li>expand(‘%’):当前文件名</li><li>expand(‘%:e’):扩展名</li><li>expand(‘%:r?’):去除扩展名?</li><li>expand(‘%:p’):完整路径</li><li>expand(‘%:h’):当前目录</li></ul></li><li><p>打印一些特殊符号(例)</p><ul><li><code>&lt;c-v&gt;</code>:<code>:iunmap &lt;c-v&gt;</code>(如果有)$\to$<code>&lt;c-v&gt;</code>(准备输入特殊字符)$\to$<code>&lt;c-v&gt;</code>(输入真的<code>CTRL+V</code>)</li></ul><hr></li></ul><h2 id="关于vim-sb-complete"><a href="#关于vim-sb-complete" class="headerlink" title="关于vim-sb-complete"></a>关于<code>vim-sb-complete</code></h2><p>地址</p><p>-<a href="https://github.com/NiaBie/vim-sb-complete1">https://github.com/NiaBie/vim-sb-complete1</a><br>-<a href="https://github.com/NiaBie/vim-sb-complete2">https://github.com/NiaBie/vim-sb-complete2</a><br>-<a href="https://github.com/NiaBie/vim-sb-complete3">https://github.com/NiaBie/vim-sb-complete3</a></p><h3 id="手册查询"><a href="#手册查询" class="headerlink" title="手册查询"></a>手册查询</h3><ul><li><code>complete-items</code></li><li><code>complete</code>: 菜单</li><li><code>ins-completion</code><ul><li><code>completefunc</code></li><li><code>omnifunc</code></li></ul></li></ul><h3 id="踩过的坑"><a href="#踩过的坑" class="headerlink" title="踩过的坑"></a>踩过的坑</h3><ul><li><code>getline</code>最后没有换行符</li><li><code>match</code>返回的是匹配的位置</li></ul><h3 id="字符及转义"><a href="#字符及转义" class="headerlink" title="字符及转义"></a>字符及转义</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">let g:sbcom_isword &#x3D; [&quot;[0-9a-zA-Z:_]&quot;]</span><br><span class="line">let g:sbcom_issplit &#x3D; [&quot;&#96;&quot;, &quot;\\~&quot;, &quot;!&quot;, &quot;@&quot;, &quot;#&quot;, &quot;\\$&quot;, &quot;%&quot;, &quot;\\^&quot;, &quot;&amp;&quot;, &quot;*&quot;, &quot;(&quot;, &quot;)&quot;, &quot;-&quot;, &quot;&#x3D;&quot;, &quot;+&quot;, &quot;[&quot;, &quot;&#123;&quot;, &quot;]&quot;, &quot;&#125;&quot;, &quot;\\&quot;, &quot;|&quot;, &quot;;&quot;, &quot;\&#39;&quot;, &quot;\&quot;&quot;, &quot;,&quot;, &quot;&lt;&quot;, &quot;\\.&quot;, &quot;&gt;&quot;, &quot;&#x2F;&quot;, &quot;?&quot;, &quot; &quot;, &quot;\t&quot;, &quot;\n&quot;]</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> vim </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>npm笔记</title>
      <link href="/2019/03/05/npm%E7%AC%94%E8%AE%B0/"/>
      <url>/2019/03/05/npm%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="创建到发布"><a href="#创建到发布" class="headerlink" title="创建到发布"></a>创建到发布</h1><ul><li><a href="https://www.cnblogs.com/penghuwan/p/6973702.html">比较详细的教程:cnblogs</a></li><li><a href="https://www.jianshu.com/p/60ac7fe6edce">教程索引:简书</a></li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm init <span class="comment"># 创建package.json</span></span><br><span class="line">npm login</span><br><span class="line">...</span><br><span class="line">npm publish</span><br></pre></td></tr></table></figure><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>参考:<a href="https://segmentfault.com/a/1190000007624021">思否</a></p><ul><li>安装单个包</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo npm i <span class="variable">$package</span></span><br><span class="line">sudo npm i <span class="variable">$package</span> --save <span class="comment"># 记录在package.json的dependencies下</span></span><br><span class="line">sudo npm i <span class="variable">$package</span> --save-dev <span class="comment">#记录在devSependencies下</span></span><br></pre></td></tr></table></figure><ul><li>按照<code>package.json</code>来安装</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo npm install</span><br></pre></td></tr></table></figure><ul><li>讲<code>node_modules</code>下的包记录到<code>package.json</code>中(待改进),<a href="https://stackoverflow.com/questions/29276345/npm-save-installed-packages-as-dependencies">stackoverflow</a></li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install $(ls node_modules/) --save</span><br></pre></td></tr></table></figure><blockquote><p>关于<code>@</code>开头的包说明</p></blockquote><ul><li><a href="https://stackoverflow.com/questions/36293481/use-of-symbol-in-node-module-names">stackoverflow</a></li><li><a href="https://stackoverflow.com/questions/36667258/what-is-the-meaning-of-the-at-prefix-on-npm-packages">stackoverflow(dup)</a></li></ul><ul><li>查看已安装的npm包</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo npm list -g --depth=0</span><br></pre></td></tr></table></figure><h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><p><code>no_perms Private mode enable, only admin can publish this module</code>:<a href="https://www.jianshu.com/p/0916afb4acba">简书</a>,<a href="http://www.cnblogs.com/mengff/p/5486533.html">cnblogs</a></p><h2 id="npm脚本"><a href="#npm脚本" class="headerlink" title="npm脚本"></a>npm脚本</h2><ul><li><a href="http://www.ruanyifeng.com/blog/2016/10/npm_scripts.html">阮一峰的网络日志</a></li></ul><h1 id="node-module使用"><a href="#node-module使用" class="headerlink" title="node_module使用"></a><code>node_module</code>使用</h1><p><a href="http://javascript.ruanyifeng.com/nodejs/npm.html">npm模块管理器</a></p><h2 id="npm-run-all"><a href="#npm-run-all" class="headerlink" title="npm-run-all"></a>npm-run-all</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 继发执行</span></span><br><span class="line">$ npm-run-all build:html build:js</span><br><span class="line"><span class="comment"># 等同于</span></span><br><span class="line">$ npm run build:html &amp;&amp; npm run build:js</span><br></pre></td></tr></table></figure><h1 id="npm使用unpkg-官网翻译"><a href="#npm使用unpkg-官网翻译" class="headerlink" title="npm使用unpkg(官网翻译)"></a>npm使用unpkg(<a href="https://yq.aliyun.com/articles/592213">官网翻译</a>)</h1><h2 id="unpkg-是什么"><a href="#unpkg-是什么" class="headerlink" title="unpkg 是什么"></a>unpkg 是什么</h2><p>unpkg 是一个内容源自 npm 的全球快速 CDN.</p><blockquote><p>注:它部署在cloudflare上,在大陆地区访问到的是香港节点.它支持h/2和很多新特性,如果不考虑网络延迟的原因,性能优化较为出色.在国内一些互联网公司也有镜像,例如知乎和饿了么</p></blockquote><p>它能以快速而简单的方式提供任意包、任意文件,通过类似这样的URL:<code>unpkg.com/:package@:version/:file</code></p><h2 id="怎样使用unpkg"><a href="#怎样使用unpkg" class="headerlink" title="怎样使用unpkg"></a>怎样使用unpkg</h2><p>使用固定的版本号:</p><p><code>unpkg.com/react @16.0.0/umd/react.production.min.js</code></p><p><code>unpkg.com/react-dom @16.0.0/umd/react-dom.production.min.js</code></p><p>也可使用语义化版本范围,或标签来代替固定版本号,亦可忽略版本和标签,直接使用最新的版本</p><p><code>unpkg.com/react@^16/umd/react.production.min.js</code></p><p><code>unpkg.com/react/umd/react.production.min.js</code></p><p>如果忽略了文件的路径(例如,使用裸网址”bare”URL),unpkg会提供<code>package.json</code>里指定的文件,或降级到main</p><p><code>unpkg.com/d3</code></p><p><code>unpkg.com/jquery</code></p><p><code>unpkg.com/three</code></p><blockquote><p>注:这种方式会产生一次302到最新的文件URL.好处是自动使用最新版,坏处是多一次性跳转,降低了性能</p></blockquote><p>在网址最后添加斜线,可以查看一个包内的所有文件列表.</p><p><code>unpkg.com/react/</code></p><p><code>unpkg.com/lodash/</code></p><h2 id="查询参数"><a href="#查询参数" class="headerlink" title="查询参数"></a>查询参数</h2><h3 id="meta"><a href="#meta" class="headerlink" title="?meta"></a>?meta</h3><p>以<code>JSON</code>格式返回包的元数据(metadata)(例如: /any/file?meta)</p><h3 id="module"><a href="#module" class="headerlink" title="?module"></a>?module</h3><p>展开<code>javascript</code>模块里所有”bare”<code>import</code>为unpkg网址.此功能为初步实验性质的</p><blockquote><p>具体的实现和更多介绍可参考此仓库:<code>babel-plugin-unpkg</code></p></blockquote><h2 id="UNPKG上的发布流程"><a href="#UNPKG上的发布流程" class="headerlink" title="UNPKG上的发布流程"></a>UNPKG上的发布流程</h2><p>如果你是npm包作者,只要发布到npm仓库,unpkg替你减轻了发布到CDN的麻烦.仅需npm包中包含UMD构建即可(并非在代码仓库里包含,两者不同!)</p><p>简单来讲,通过以下步骤:</p><ul><li>添加umd(或dist)目录到.gitignore文件中</li><li>添加umd目录到package.json文件数组(files)中</li><li>发布的时候,使用脚本构建UMD打包文件到umd目录</li></ul><p>就是这样了,当npm发布时,在unpkg上也会拥有一个有效的文件版本</p><p>一旦发布到npm后即可被访问到,如果按以上说明操作,将具有更好的效果.建议参考Vue的package.json帮助理解</p>]]></content>
      
      
      
        <tags>
            
            <tag> npm </tag>
            
            <tag> unpkg </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Abstract Algebra</title>
      <link href="/2019/03/05/Abstract-Algebra/"/>
      <url>/2019/03/05/Abstract-Algebra/</url>
      
        <content type="html"><![CDATA[<h2 id="2-The-Integers"><a href="#2-The-Integers" class="headerlink" title="2. The Integers"></a>2. The Integers</h2><h3 id="Theorem-2-10"><a href="#Theorem-2-10" class="headerlink" title="Theorem 2.10"></a>Theorem 2.10</h3><p>Let $a$ and $b$ be nonzero integers. Then there exist integers $r$ and $s$ such that<br>$$ \gcd(a,b)=ar+bs $$<br>Furthermore, the greatest common divisor of $a$ and $b$ is unique</p><h2 id="3-Groups"><a href="#3-Groups" class="headerlink" title="3.Groups"></a>3.Groups</h2><h3 id="Theorem-3-23"><a href="#Theorem-3-23" class="headerlink" title="Theorem 3.23"></a>Theorem 3.23</h3><p>In a group, the usual laws of exponents hold; that is, for all $g, h\in G$</p><ol><li><p>$g^mg^n=g^{m+n}$ for all $m, n\in\mathbb{Z}$</p></li><li><p>$(g^m)^n=g^{mn}$ for all $m, n\in\mathbb{Z}$</p></li><li><p>$(gh)^n=(g^{-1}h^{-1})^{-n}$ for all $n\in\mathbb{Z}$. Furthermore, <strong>if $G$ is abelian</strong>, then $(gh)^n=g^nh^n$</p></li></ol><h3 id="Proposition-3-30"><a href="#Proposition-3-30" class="headerlink" title="Proposition 3.30"></a>Proposition 3.30</h3><p>A subset $H$ of $G$ is a subgroup if and only if it satisfies the following conditions</p><ol><li><p>The identity $e$ of $G$ is in $H$</p></li><li><p>If $h_1, h_2\in H$, then $h_1h_2\in H$</p></li><li><p>If $h\in H$, then $h^{-1}\in H$</p></li></ol><h3 id="Proposition-3-31"><a href="#Proposition-3-31" class="headerlink" title="Proposition 3.31"></a>Proposition 3.31</h3><p>Let $H$ be a subset of a group $G$. Then $H$ is a subgroup of $G$ if and only if $H\not=\emptyset$, and whenever $g, h\in H$ then $gh^{-1}$ is in $H$</p><h2 id="4-Cyclic-Groups"><a href="#4-Cyclic-Groups" class="headerlink" title="4.Cyclic Groups"></a>4.Cyclic Groups</h2><h3 id="Remark-4-4"><a href="#Remark-4-4" class="headerlink" title="Remark 4.4"></a>Remark 4.4</h3><p>If we are using the “+” notations, as in the case of the integers under addition, we write $\langle a\rangle={na:a\in\mathbb{Z}}$</p><p>For $a\in G$, we call $\langle a\rangle$ the <strong>cyclic subgroup</strong> generated by $a$. If $G$ contains some element $a$ such that $G=\langle a\rangle$, then $G$ is a cyclic group. In this case $a$ is a <strong>generator</strong> of $G$.</p><p>If $a$ is an element of a group $G$, we define the <strong>order</strong> of $a$ to be the smallest positive integer $n$ such that $a^n=e$, and we write $|a|=n$. If there is no such integer $n$, we say that the order of $a$ is <strong>infinite</strong> and write $|a|=\infty$ to denote the order of $a$</p><h3 id="Corollary-4-14"><a href="#Corollary-4-14" class="headerlink" title="Corollary 4.14"></a>Corollary 4.14</h3><p>The generators of $\mathbb{Z}_n$ are the integers r subch that $1\le r&lt;n$ and gcd$(r, n)=1$</p><blockquote><p>$\text{cis}(x)=\cos(x)+$i$\sin(x)$</p></blockquote><h3 id="Proposition-4-20"><a href="#Proposition-4-20" class="headerlink" title="Proposition 4.20"></a>Proposition 4.20</h3><p>Let $z=r\text{cis}\theta$ and $w=s\text{cis}\phi$ be two nozero compler numbers. Then $$zw=rs\text{cis}(\theta+\phi)$$</p><h2 id="5-Permutation-Groups"><a href="#5-Permutation-Groups" class="headerlink" title="5. Permutation Groups"></a>5. Permutation Groups</h2><h3 id="Proposition-5-8"><a href="#Proposition-5-8" class="headerlink" title="Proposition 5.8"></a>Proposition 5.8</h3><p>Let $\sigma$ and $\tau$ be two disjoint cycles in $S_X$. Then $\sigma\tau=\tau\sigma$</p><h3 id="Theorem-5-9"><a href="#Theorem-5-9" class="headerlink" title="Theorem 5.9"></a>Theorem 5.9</h3><p>Every permutation in $S_n$ can be written as the product of disjpint cycles</p><h3 id="Lemma-5-14"><a href="#Lemma-5-14" class="headerlink" title="Lemma 5.14"></a>Lemma 5.14</h3><p>If the identity is written is written as the product of r transpositions $$id=\tau_1\tau_2…\tau_r$$ then $r$ is an even number </p><h3 id="The-Alternating-Groups"><a href="#The-Alternating-Groups" class="headerlink" title="The Alternating Groups"></a>The Alternating Groups</h3><p>One of the most important subgroups of $S_n$ is the set of all even permutations, $A_n$. The group $A_n$ is called the alternating group on n letters</p><h3 id="Theorem-5-16"><a href="#Theorem-5-16" class="headerlink" title="Theorem 5.16"></a>Theorem 5.16</h3><p>The set $A_n$ is a subgroup of $S_n$ </p><h3 id="Proposition-5-17"><a href="#Proposition-5-17" class="headerlink" title="Proposition 5.17"></a>Proposition 5.17</h3><p>The number of even permutations in $S_n, n\ge2$, is equal to the number of odd permutations; hence, the order of $A_n$ is $\dfrac{n!}{2}$ </p><h3 id="Dihedral-Groups"><a href="#Dihedral-Groups" class="headerlink" title="Dihedral Groups"></a>Dihedral Groups</h3><p>We define the <strong>nth dihedral group</strong> to be the group of rigid motions of a regular n-gon. $D_n$ consists of all finite products of $r$ and $s$</p><p>$$D_n={1, r, r^2…r^{n-1}, s, sr, sr^2…sr^{n-1}}$$</p><h2 id="6-Cosets-and-Lagrange’s-Theorem"><a href="#6-Cosets-and-Lagrange’s-Theorem" class="headerlink" title="6.Cosets and Lagrange’s Theorem"></a>6.Cosets and Lagrange’s Theorem</h2><h3 id="Cosets"><a href="#Cosets" class="headerlink" title="Cosets"></a>Cosets</h3><p>Let $G$ be a group and $H$ a subgroup of $G$. Define a <strong>left coset</strong> of $H$ with <strong>representative</strong> $g\in G$ to be the set $$gH={gh:h\in H}$$</p><h3 id="Lemma-6-3"><a href="#Lemma-6-3" class="headerlink" title="Lemma 6.3"></a>Lemma 6.3</h3><p>Let $H$ be a subgroup of a group $G$ and suppose that $g_1,g_2\in G$. The following conditions are equivalent</p><ol><li>$g_1H=g_2H$</li><li>$Hg_1^{-1}=Hg_2^{-1}$ </li><li>$g_1H\subset g_2H$</li><li>$g_2\in g_1 H$</li><li>$g_1^{-1}g_2\in H$</li></ol><h3 id="Theorem-6-4"><a href="#Theorem-6-4" class="headerlink" title="Theorem 6.4"></a>Theorem 6.4</h3><p>Let $H$ be a subgroup of a group $G$. Then the left cosets of $H$ in $G$ partition $G$. That is, the group $G$ is the disjoint union of the left cosets of $H$ in $G$</p><h3 id="Remark-6-5"><a href="#Remark-6-5" class="headerlink" title="Remark 6.5"></a>Remark 6.5</h3><p>Let $G$ be a group and $H$ be a subgroup of $G$. Define the <strong>index</strong> of $H$ in $G$ to be the number of left cosets of $H$ in $G$. We will denote the index by $[G:H]$ </p><h3 id="Theorem-6-10-Lagrange"><a href="#Theorem-6-10-Lagrange" class="headerlink" title="Theorem 6.10 Lagrange"></a>Theorem 6.10 Lagrange</h3><p>Let $G$ be a finite group and let $H$ be a subgroup of $G$. Then $G/H=[G:H]$ is the number of distinct left cosets of $H$ in $G$. In particular, the number of elements in $H$ must divide the number of elements in $G$ </p><h3 id="Corollary-6-11"><a href="#Corollary-6-11" class="headerlink" title="Corollary 6.11"></a>Corollary 6.11</h3><p>Suppose that $G$ is a finite group and $g\in G$. Then the order of $g$ must divide the number of elements in $G$ </p><h3 id="Corollary-6-12"><a href="#Corollary-6-12" class="headerlink" title="Corollary 6.12"></a>Corollary 6.12</h3><p>Let $|G|=p$ with $p$ a prime number. Then $G$ is cyclic and any $g\in G$ such that $g\not=e$ is a generator</p><h3 id="Corollary-6-13"><a href="#Corollary-6-13" class="headerlink" title="Corollary 6.13"></a>Corollary 6.13</h3><p>Let $H$ and $K$ be subgroups of a finite group $G$ such that $K\subset H\subset G$. Then $$[G:K]=[G:H][H:K]$$ </p><h3 id="Proposition-6-15"><a href="#Proposition-6-15" class="headerlink" title="Proposition 6.15"></a>Proposition 6.15</h3><p>The group $A_4$ has no subgroup of order 6 </p><h3 id="Theorem-6-16"><a href="#Theorem-6-16" class="headerlink" title="Theorem 6.16"></a>Theorem 6.16</h3><p>Two cycles $\tau$ and $\mu$ in $S_n$ have the same length if and only if there exists a $\sigma\in S_n$ such that $\mu=\sigma\tau\sigma^{-1}$ </p><h3 id="Euler-phi-function"><a href="#Euler-phi-function" class="headerlink" title="Euler $\phi$-function"></a>Euler $\phi$-function</h3><p>The Euler $\phi$-function is the map $\phi:\mathbb{N}\to\mathbb{N}$ defined by $\phi(n)=1$ for $n=1$, and, for $n&gt;1$, $\phi(n)$ is the number of positive integers $m$ with $1\le m &lt; n$ and $\gcd(m,n)=1$ </p><h3 id="Theorem-6-18-Euler’s-Theorem"><a href="#Theorem-6-18-Euler’s-Theorem" class="headerlink" title="Theorem 6.18 Euler’s Theorem"></a>Theorem 6.18 Euler’s Theorem</h3><p>Let $a$ and $n$ be integers such that $n&gt;0$ and $\gcd(a,n)=1$. Then $a^{\phi(n)}\equiv1(\mod n)$ </p><h3 id="Theorem-6-19-Fermat’s-Little-Theorem"><a href="#Theorem-6-19-Fermat’s-Little-Theorem" class="headerlink" title="Theorem 6.19 Fermat’s Little Theorem"></a>Theorem 6.19 Fermat’s Little Theorem</h3><p>Let $p$ be any prime number and suppise that $p\not|a(p$ does not divide $a$). Then $$a^{p-1}\equiv1(\mod p)$$ </p><p>Furthermore, for any integer $b, b^p\equiv b(\mod p)$ </p><h2 id="Algebraic-Coding-Theory"><a href="#Algebraic-Coding-Theory" class="headerlink" title="Algebraic Coding Theory"></a>Algebraic Coding Theory</h2><h3 id="weight"><a href="#weight" class="headerlink" title="weight"></a>weight</h3><p>The weight $w(x)$ of a binary code word $x$ is the number of 1s in $x$, $w(x)=d(x,0)$</p><h3 id="Theorem-8-17"><a href="#Theorem-8-17" class="headerlink" title="Theorem 8.17"></a>Theorem 8.17</h3><p>Let $x$ and $y$ be binary n-tuples. Then $w(x + y) = d(x, y)$</p><h3 id="Theorem-8-18"><a href="#Theorem-8-18" class="headerlink" title="Theorem 8.18"></a>Theorem 8.18</h3><p>Let $d_{\min}$ be the minimum distance for a group code $C$. Then $d_{\min}$ is the minimum of all the nonzero weights of the nonzero codewords in $C$. That is<br>$$d_{\min}=\min{w(x):x\not=0}$$</p><h3 id="Theorem-8-21"><a href="#Theorem-8-21" class="headerlink" title="Theorem 8.21"></a>Theorem 8.21</h3><p>Let $\mathbb{M}_{m\times n}$ denote the set fo all $m\times n$ matrices with entries in $\mathbb{Z}_2$. We do matrix operations as usual except that all our addition and multiplication operations occur in $\mathbb{Z}_2$. Define the <strong>null sppace</strong> of a matrix $H\in\mathbb{M}_{m\times n}(\mathbb{Z}_2)$ to be the set of all binary n-tuples $x$ such that $Hx=0$. We denote the null space of a matrix $H$ by Null$(H)$</p><p>Let $H$ be in $\mathbb{M}_{m\times n}(\mathbb{Z}_2)$. Then the null space of $H$ is a group code.</p><h3 id="Theorem-8-25"><a href="#Theorem-8-25" class="headerlink" title="Theorem 8.25"></a>Theorem 8.25</h3><p>If $H\in\mathbb{M}_{m\times n}(\mathbb{Z}_2)$ is a canonical parity-check matrix, then Null$(H)$ consists of all $x\in\mathbb{Z}_2^n$ whose first $n-m$ bits are arbitrary but whose last $m$ bits are determined by $Hx=0$. Each of the last $m$ bits serves as an even parity check bit for some of the first $n-m$ bits. Hence, $H$ gives rise to an $(n,n-m)$-block code</p><h3 id="Theorem-8-26"><a href="#Theorem-8-26" class="headerlink" title="Theorem 8.26"></a>Theorem 8.26</h3><p>Suppose that $G$ is an $n\times k$ standard generator matrix. Then $C={y:Gx=y for x\in\mathbb{Z}_2^k}$ is an $(n,k)$-block code. More specifically, $C$ is a group code</p><h3 id="Lemma-8-27"><a href="#Lemma-8-27" class="headerlink" title="Lemma 8.27"></a>Lemma 8.27</h3><p>Let $H=(A|I_m)$ be an $m\times n$ canonical parity-check matrix and $G=(\dfrac{I_{n-m}}{A})$ be the corresponding $n\times(n-m)$ standard generator matrix. Then $HG=0$</p><h3 id="Theorem-8-28"><a href="#Theorem-8-28" class="headerlink" title="Theorem 8.28"></a>Theorem 8.28</h3><p>Let $H=(A|I_m)$ be an $m\times n$ canonical parity-check matrix and let $G=(\dfrac{I_{n-m}}{A})$ be the $n\times(n-m)$ standard generator matrix associated with $H$. Let $C$ be the code generated by $G$. Then $y$ is in $C$ if and only if $Hy=0$. In particular, $C$ is a linear code with canonical parity-check matrix $H$</p><h3 id="Proposition-8-30"><a href="#Proposition-8-30" class="headerlink" title="Proposition 8.30"></a>Proposition 8.30</h3><p>Let $e_i$ be the binary n-tuple with a 1 in the ith coordinate and 0’s elsewhere and suppose that $H\in\mathbb{M}_{m\times n}(\mathbb{Z}_2)$. Then $He_i$ is the ith column of the matrix $H$</p><h3 id="Theorem-8-31"><a href="#Theorem-8-31" class="headerlink" title="Theorem 8.31"></a>Theorem 8.31</h3><p>Let $H$ be an $m\times n$ binary matrix. Then the null space of $H$ is a single error-detecting code if and only if no column of $H$ consists entirely of zeros</p><h3 id="Theorem-8-34"><a href="#Theorem-8-34" class="headerlink" title="Theorem 8.34"></a>Theorem 8.34</h3><p>Let $H$ be a binary matrix. The null space of $H$ is a single error-correcting code if and only if $H$ does not contain any zero columns and no two columns of $H$ are identical</p><h3 id="Proposition-8-36"><a href="#Proposition-8-36" class="headerlink" title="Proposition 8.36"></a>Proposition 8.36</h3><p>If $H$ is an $m\times n$ matrix and $x\in\mathbb{Z}_2^n$, then we say that the <strong>syndrome</strong> of $x$ is $Hx$</p><p>Let the $m\times n$ binary matrix $H$ determine a linear code and let $x$ be the received n-tuple. Write $x$ as $x=c+e$, where $c$ is the transmitted codeword and $e$ is the transmission error. The the syndrome $Hx$ of the received codeword $x$ is also the syndrome of the error $e$</p><h3 id="Proposition-8-43"><a href="#Proposition-8-43" class="headerlink" title="Proposition 8.43"></a>Proposition 8.43</h3><p>Let $C$ be an $(n,k)$-linear code given by the matrix $H$ and suppose that $x$ and $y$ are in $\mathbb{Z}_2^n$. Then $x$ and $y$ are in the same coset of $C$ if and only if $Hx=Hy$. That is, two n-tuples are in the same coset if and only if their syndromes are the same</p><h2 id="Isomorphisms"><a href="#Isomorphisms" class="headerlink" title="Isomorphisms"></a>Isomorphisms</h2><h3 id="Isomorphism"><a href="#Isomorphism" class="headerlink" title="Isomorphism"></a>Isomorphism</h3><p>If $G$ is isomorphic to $H$, we write $G\cong H$. The map $\phi$ is called an isomorphism</p><h3 id="Theorem-9-7"><a href="#Theorem-9-7" class="headerlink" title="Theorem 9.7"></a>Theorem 9.7</h3><p>All cyclic groups of infinite order are isomorphic to $\mathbb{Z}$</p><h3 id="Theorem-9-8"><a href="#Theorem-9-8" class="headerlink" title="Theorem 9.8"></a>Theorem 9.8</h3><p>If $G$ is a cylic group of order $n$, then $G$ is isomorphic to $\mathbb{Z}$</p><h3 id="Corollary-9-9"><a href="#Corollary-9-9" class="headerlink" title="Corollary 9.9"></a>Corollary 9.9</h3><p>If $G$ is a group of order $p$, where $p$ is a prime number, then $G$ is isomorphic to $\mathbb{Z}_p$</p><h3 id="Theorem-9-12"><a href="#Theorem-9-12" class="headerlink" title="Theorem 9.12"></a>Theorem 9.12</h3><p>Every group is isomorphic to a group of permutations</p><h3 id="Proposition-9-13"><a href="#Proposition-9-13" class="headerlink" title="Proposition 9.13"></a>Proposition 9.13</h3><p>Let $G$ and $H$ be groups. The set $G\times H$ is a group under the operation $(g_1,h_1)(g_2,h_2)=(g_1g_1,h_1h_2)$ where $g_1,g_2\in G$ and $h_1,h_2\in H$</p><h3 id="External-Direct-Product"><a href="#External-Direct-Product" class="headerlink" title="External Direct Product"></a>External Direct Product</h3><p>The group $G\times H$ is called the <strong>external direct product</strong> of $G$ and $H$. Notice that there is nothing special about the fact that we have used only two groups to build a new group. The direct product $$\prod^n_{i=1}G_i=G_1\times G_2…G_n$$ of the groups $G_1,G_2…G_n$ is defined in exactly the same manner. If $G=G_1=G_2…G_n$, we often write $G^n$ instead of $G_1\times G_2…G_n$</p><h3 id="9-17"><a href="#9-17" class="headerlink" title="9.17"></a>9.17</h3><p>Let $(g,h)\in G\times H$, If $g$ and $h$ have finite orders $r$ and $s$ respectively, then the order of $(g,h)$ in $G\times H$ is the least common multiple of $r$ and $s$</p><h3 id="Corollary-9-18"><a href="#Corollary-9-18" class="headerlink" title="Corollary 9.18"></a>Corollary 9.18</h3><p>Let $(g_1,…,g_n)\in\prod G_i$. If $g_i$ has finite order $r_i$ in $G_i$, then the order of $(g_1,…,g_n)$ in $\prod G_i$ is the least common multiple of $r_1,…,r_n$</p><h3 id="Theorem-9-21"><a href="#Theorem-9-21" class="headerlink" title="Theorem 9.21"></a>Theorem 9.21</h3><p>The group $\mathbb{Z}_m\times\mathbb{Z}_n$ is isomorphic to $\mathbb{Z}_{mn}$ if and only if $\gcd(m,n)=1$</p><h3 id="Corollary-9-22"><a href="#Corollary-9-22" class="headerlink" title="Corollary 9.22"></a>Corollary 9.22</h3><p>Let $n_1,…,n_k$ be positive integers. Then $$\prod^k_{i=1}\mathbb{Z}_{n_i}\cong\mathbb{Z}_{n_1…n_k}$$ if and only if $\gcd(n_i,n_j)=1$ for $i\not=j$</p><h3 id="Corollary-9-23"><a href="#Corollary-9-23" class="headerlink" title="Corollary 9.23"></a>Corollary 9.23</h3><p>If $$m=p_1^{e_1},…,p_k^{e_k}$$ where the $p_is$ are distinct primes, then</p><p>$$\mathbb{Z}_{m_{}}\cong\mathbb{Z}_{p_1^{e_1}}\times…\times\mathbb{Z}_{p_k^{e_k}}$$</p><h2 id="Internal-Direct-Products"><a href="#Internal-Direct-Products" class="headerlink" title="Internal Direct Products"></a>Internal Direct Products</h2><h3 id="Internal-Direct-Product"><a href="#Internal-Direct-Product" class="headerlink" title="Internal Direct Product"></a>Internal Direct Product</h3><p>Let $G$ be a group with subgroups $H$ and $K$ satisfying the following conditions</p><ul><li>$G=HK={hk:h\in H,k\in K}$</li><li>$H\cap K={e}$</li><li>$hk=kh$ for all $k\in K$ and $h\in H$</li></ul><p>then $G$ is the <strong>internal direct product</strong> of $H$ and $K$</p><h3 id="Theorem-9-27"><a href="#Theorem-9-27" class="headerlink" title="Theorem 9.27"></a>Theorem 9.27</h3><p>Let $G$ be the internal direct product of subgroups $H$ and $K$. Then $G$ is isomorphic to $H\times K$</p><h3 id="Theorem-9-28"><a href="#Theorem-9-28" class="headerlink" title="Theorem 9.28"></a>Theorem 9.28</h3><p>The group $\mathbb{Z}_6$ is an internal direct product of subgroups $H_i$, where $i=1,2…n$. Then $G$ is isomorphic to $\prod_iH_i$</p><h2 id="10-Normal-Subgroups-and-Factor-Groups"><a href="#10-Normal-Subgroups-and-Factor-Groups" class="headerlink" title="10 Normal Subgroups and Factor Groups"></a>10 Normal Subgroups and Factor Groups</h2><h3 id="Normal-Subgroups"><a href="#Normal-Subgroups" class="headerlink" title="Normal Subgroups"></a>Normal Subgroups</h3><p>A subgroup $H$ of a group G is <strong>normal</strong> in $G$ if $gH=Hg$ for all $g\in G$. That is,a normal subgroup of a group $G$ is one in which the right and left cosets are precisely the same</p><h3 id="Theorem-10-3"><a href="#Theorem-10-3" class="headerlink" title="Theorem 10.3"></a>Theorem 10.3</h3><p>Let $G$ be a group and $N$ be a subgroup of $G$. Then the following statements are equivalent</p><ol><li>The subgroup $N$ is normal in G</li><li>Forall $g\in G, gNg^{-1}\subset N$</li><li>For all $g\in G, gNg^{-1}=N$</li></ol><h3 id="Factor-Groups"><a href="#Factor-Groups" class="headerlink" title="Factor Groups"></a>Factor Groups</h3><p>If $N$ is a normal subgroup of a group $G$, then the cosets of $N$ in $G$ form a group $G/N$ under the operation $(aN)(bN)=abN$. The group is called the <strong>factor</strong> or <strong>quotient group</strong> of $G$ and $N$</p><h3 id="Theorem-10-4"><a href="#Theorem-10-4" class="headerlink" title="Theorem 10.4"></a>Theorem 10.4</h3><p>Let $N$ be a normal subgroup of a group $G$. The cosets of $N$ in $G$ form a group $G/N$ of order $G/N$</p><h3 id="Simple-Groups"><a href="#Simple-Groups" class="headerlink" title="Simple Groups"></a>Simple Groups</h3><p>Groups with nontrivial normal subgroups are called <strong>simple groups</strong></p><h3 id="Lemma-10-8"><a href="#Lemma-10-8" class="headerlink" title="Lemma 10.8"></a>Lemma 10.8</h3><p>The alternating group $A_n$ is generated by 3-cycles for $n\ge3$</p><h3 id="Lemma-10-9"><a href="#Lemma-10-9" class="headerlink" title="Lemma 10.9"></a>Lemma 10.9</h3><p>Let $N$ be a normal subgroup of $A_n$, where $n\ge3$. If $N$ contains a 3-cycle, then $N=A$</p><h3 id="Lemma-10-10"><a href="#Lemma-10-10" class="headerlink" title="Lemma 10.10"></a>Lemma 10.10</h3><p>For $n\ge5$, every nontrivial normal subgroup $N$ of $A_n$ contains a 3-cycle</p><h3 id="Theorem-10-11"><a href="#Theorem-10-11" class="headerlink" title="Theorem 10.11"></a>Theorem 10.11</h3><p>The alternating group $A_n$ is simple for $n\ge5$</p><h2 id="11-Group-Homomorphisms"><a href="#11-Group-Homomorphisms" class="headerlink" title="11 Group Homomorphisms"></a>11 Group Homomorphisms</h2><h3 id="Homomorphisms"><a href="#Homomorphisms" class="headerlink" title="Homomorphisms"></a>Homomorphisms</h3><p>A <strong>homomorphism</strong> between groups $(G,\cdot)$ and $(H,\circ)$ is a map $\phi:G\to H$ such that $$\phi(g_1\cdot g_2)=\phi(g_1)\circ\phi(g_2)$$ for $g_1,g_2\in G$. The range of $\phi$ in $H$ is called the <strong>homomorphic image</strong> of $\phi$</p><h3 id="Proposition-11-4"><a href="#Proposition-11-4" class="headerlink" title="Proposition 11.4"></a>Proposition 11.4</h3><p>Let $\phi:G_1\to G_2$ be a homomorphism of groups. Then</p><ol><li>If $e$ is the identity of $G_1$, then $\phi(e)$ is the identity of $G_2$</li><li>For any element $g\in G_1, \phi(g^{-1})=[\phi(g)]^{-1}$</li><li>If $H_1$ is a subgroup of $G_1$, then $\phi(H_1)$ is a subgroup of $G_2$</li><li>If $H_2$ is a subgroup of $G_2$, then $\phi^{-1}(H_2)-{g\in G_1:\phi(g)\in H_2}$ is a subgroup of $G_1$. Furthermore, if $H_2$ is normal in $G_2$, then $\phi^{-1}(H_2)$ is normal in $G_1$</li></ol><h3 id="Kernel"><a href="#Kernel" class="headerlink" title="Kernel"></a>Kernel</h3><p>Let $\phi:G\to H$ be a group homomorphism and suppose that $e$ is the identity of $H$. By Proposition 11.4, $\phi^{-1}({e})$ is a subgroup of $G$. This subgroup is called the <strong>kernel</strong> of $\phi$ and will be denoted by $\ker\phi$</p><h3 id="Theorem-11-5"><a href="#Theorem-11-5" class="headerlink" title="Theorem 11.5"></a>Theorem 11.5</h3><p>Let $\phi:G\to H$ be a group homomorphism. Then the kernel of $\phi$ is a normal subgroup of $G$</p><h3 id="Canonical-Homomorphism"><a href="#Canonical-Homomorphism" class="headerlink" title="Canonical Homomorphism"></a>Canonical Homomorphism</h3><p>Let $H$ be a normal subgroup of $G$. Define the <strong>natural</strong> or <strong>canonical homomorphism</strong> $$\phi:G\to G/H$$ by $$\phi(g)=gH$$ This is indeed a homomorphism since $$\phi(g_1g_2)=g_1g_2H=g_1Hg_2H=\phi(g_1)\phi(g_2)$$ The kernel of this homomorphism is $H$</p><h3 id="Theorem-11-10-First-Isomorphism-Theorem"><a href="#Theorem-11-10-First-Isomorphism-Theorem" class="headerlink" title="Theorem 11.10 First Isomorphism Theorem"></a>Theorem 11.10 First Isomorphism Theorem</h3><p>If $\phi:G\to H$ is a group homomorphism with $K=\ker\psi$, then $K$ is normal in $G$. Let $\phi:G\to G/K$ be the canonical homomorphism. Then there exists a unique isomorphism $\eta:G/K\to\psi(G)$ such that $\psi=\eta\phi$</p><h3 id="Theorem-11-12-Second-Isomorphism-Theorem"><a href="#Theorem-11-12-Second-Isomorphism-Theorem" class="headerlink" title="Theorem 11.12 Second Isomorphism Theorem"></a>Theorem 11.12 Second Isomorphism Theorem</h3><p>Let $H$ be a subgroup of a group $G$ (not necessarily normal in $G$) and $N$ a normal subgroup of $G$. Then $HN$ is a subgroup of $G, H\cap N$ is a normal subgroup of $H$, and $$H/N\cap N\cong HN/N$$</p><h3 id="Theorem-11-13-Correspondence-Theorem"><a href="#Theorem-11-13-Correspondence-Theorem" class="headerlink" title="Theorem 11.13 Correspondence Theorem"></a>Theorem 11.13 Correspondence Theorem</h3><p>Let $N$ be a normal subgroup of a group $G$. Then $H\mapsto H/N$ is a one-to-one correspondence between the set of subgroups $H$ containing $N$ and the set of subgroups of $G/N$. Furthermore, the normal subgroups of $G$ containing $N$ correspond to normal subgroups of $G/N$</p><h3 id="Third-Isomorphism-Theorem"><a href="#Third-Isomorphism-Theorem" class="headerlink" title="Third Isomorphism Theorem"></a>Third Isomorphism Theorem</h3><p>Let $G$ be a group and $N$ and $H$ be normal subgroups of $G$ with $N\subset H$. Then $$G/H\cong\dfrac{G/N}{H/N}$$</p>]]></content>
      
      
      <categories>
          
          <category> 问题求解 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>七牛云使用笔记</title>
      <link href="/2019/03/04/bucket%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/"/>
      <url>/2019/03/04/bucket%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<ul><li><p>外链</p><ul><li>live2d_api:pnu3nz53b.bkt.clouddn.com</li><li>live2d_mini:pnu7uf4io.bkt.clouddn.com</li><li>live2d_lazy:pnu9p6tp8.bkt.clouddn.com</li></ul></li></ul><h2 id="listbucket"><a href="#listbucket" class="headerlink" title="listbucket"></a><a href="https://github.com/qiniu/qshell/blob/master/docs/listbucket.md">listbucket</a></h2><p>列举七牛空间的文件列表</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">qshell listbucket live2d_api</span><br></pre></td></tr></table></figure><h2 id="qupload"><a href="#qupload" class="headerlink" title="qupload"></a><a href="https://github.com/qiniu/qshell/blob/master/docs/qupload.md">qupload</a></h2><p>上传</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">qshell qupload .qshell.json</span><br></pre></td></tr></table></figure><p><code>.qshell.json</code>配置</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;src&quot;</span>: <span class="string">&quot;/home/lynx/live2d_api&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;bucket&quot;</span>: <span class="string">&quot;live2d_api&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="batchdelete"><a href="#batchdelete" class="headerlink" title="batchdelete"></a><a href="https://github.com/qiniu/qshell/blob/master/docs/batchdelete.md">batchdelete</a></h2><p>删除文件名列表中的文件</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">qshell batchdelete live2d_mini -i delete_list</span><br></pre></td></tr></table></figure><h2 id="还没开始看的参考网址"><a href="#还没开始看的参考网址" class="headerlink" title="还没开始看的参考网址"></a>还没开始看的参考网址</h2><ul><li><a href="https://devework.com/wordpress-qiniu.html">加速图片等静态文件</a></li><li><a href="https://blog.csdn.net/YZCSzhiYZTY/article/details/78224706">上传文件夹的python实现</a></li><li><a href="https://blog.csdn.net/u010646653/article/details/9371011">https://blog.csdn.net/u010646653/article/details/9371011</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> html </tag>
            
            <tag> bucket </tag>
            
            <tag> 七牛云 </tag>
            
            <tag> cdn </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>html笔记</title>
      <link href="/2019/02/27/html%E7%AC%94%E8%AE%B0/"/>
      <url>/2019/02/27/html%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="lt-canvas-gt-放缩及调整位置"><a href="#lt-canvas-gt-放缩及调整位置" class="headerlink" title="&lt;canvas&gt;放缩及调整位置"></a><code>&lt;canvas&gt;</code>放缩及调整位置</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">canvas</span> <span class="attr">id</span> = <span class="string">&quot;canvas&quot;</span> <span class="attr">width</span> = <span class="string">&quot;300&quot;</span> <span class="attr">height</span> = <span class="string">&quot;300&quot;</span> <span class="attr">style</span> = <span class="string">&quot;width:200px; height:200px; left:60px&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="表格固定宽度"><a href="#表格固定宽度" class="headerlink" title="表格固定宽度"></a>表格固定宽度</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">  table</span><br><span class="line"><span class="css">    <span class="selector-tag">th</span><span class="selector-pseudo">:first-of-type</span> &#123;<span class="attribute">width</span>: <span class="number">200px</span>;&#125;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">th</span><span class="selector-pseudo">:nth-of-type(2)</span> &#123;<span class="attribute">width</span>: <span class="number">200px</span>;&#125;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="表格自适应宽度"><a href="#表格自适应宽度" class="headerlink" title="表格自适应宽度"></a>表格自适应宽度</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="built_in">window</span>.onresize = my_resize;</span></span><br><span class="line"><span class="javascript"><span class="built_in">window</span>.onload = my_resize;</span></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">my_resize</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">var</span> x = <span class="built_in">window</span>.innerWidth;</span></span><br><span class="line"><span class="javascript">  sheet = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;my_table&#x27;</span>).sheet;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">if</span> (<span class="built_in">window</span>.innerWidth &lt; <span class="number">950</span>)&#123;</span></span><br><span class="line"><span class="javascript">    sheet.addRule(<span class="string">&#x27;table th:first-of-type, table th:nth-of-type(2)&#x27;</span>,</span></span><br><span class="line"><span class="javascript">    <span class="string">&#x27;width: &#x27;</span> + x/<span class="number">7</span> + <span class="string">&#x27;px;&#x27;</span>);</span></span><br><span class="line"><span class="javascript">  &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="javascript">    sheet.addRule(<span class="string">&#x27;table th:first-of-type, table th:nth-of-type(2)&#x27;</span>,</span></span><br><span class="line"><span class="javascript">    <span class="string">&#x27;width: &#x27;</span> + x/<span class="number">15</span> + <span class="string">&#x27;px;&#x27;</span>);</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="js修改css"><a href="#js修改css" class="headerlink" title="js修改css"></a>js修改css</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">document.styleSheets[0].addRule(&#x27;.box&#x27;, &#x27;height: 100px&#x27;);</span><br><span class="line">document.styleSheets[0].insertRule(&#x27;.box &#123;height: 100px&#125;&#x27;, 0);</span><br></pre></td></tr></table></figure><p><a href="https://www.cnblogs.com/LiuWeiLong/p/6058059.html">参考</a><br><a href="https://www.w3cplus.com/javascript/style-and-class.html">w3plus</a></p><p>元素里面的文字也算子节点</p><p><a href="https://www.jb51.net/article/61737.htm">js提取元素</a></p><h2 id="div大小放缩示例"><a href="#div大小放缩示例" class="headerlink" title="div大小放缩示例"></a><code>div</code>大小放缩示例</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">mouse</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> direct = <span class="number">0</span>;</span></span><br><span class="line"><span class="javascript">      e = <span class="built_in">window</span>.event;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">if</span> (e.wheelDelta) &#123; <span class="comment">//判断浏览器IE，谷歌滑轮事件             </span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span> (e.wheelDelta &gt; <span class="number">0</span>) &#123; <span class="comment">//当滑轮向上滚动时</span></span></span><br><span class="line">          change(1);</span><br><span class="line">        &#125;</span><br><span class="line"><span class="javascript">        <span class="keyword">if</span> (e.wheelDelta &lt; <span class="number">0</span>) &#123; <span class="comment">//当滑轮向下滚动时</span></span></span><br><span class="line">          change(-1);</span><br><span class="line">        &#125;</span><br><span class="line"><span class="javascript">      &#125; <span class="keyword">else</span> <span class="keyword">if</span> (e.detail) &#123; <span class="comment">//Firefox滑轮事件</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span> (e.detail &gt; <span class="number">0</span>) &#123; <span class="comment">//当滑轮向上滚动时</span></span></span><br><span class="line">          change(1);</span><br><span class="line">        &#125;</span><br><span class="line"><span class="javascript">        <span class="keyword">if</span> (e.detail &lt; <span class="number">0</span>) &#123; <span class="comment">//当滑轮向下滚动时</span></span></span><br><span class="line">          change(-1);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">change</span>(<span class="params">num</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">var</span> b1 = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;b1&#x27;</span>);</span></span><br><span class="line"><span class="javascript">  <span class="keyword">var</span> bit = b1.width/b1.height;</span></span><br><span class="line">  if (num == 1) &#123;</span><br><span class="line"><span class="javascript">    b1.src = <span class="string">&quot;/i/eg_mouse.jpg&quot;</span>;</span></span><br><span class="line">    b1.width += 2*bit;</span><br><span class="line">    b1.height += 2;</span><br><span class="line"><span class="javascript">    <span class="keyword">if</span> (b1.style.left == <span class="string">&quot;&quot;</span>) &#123;</span></span><br><span class="line"><span class="javascript">      b1.style.left = <span class="string">&quot;-&quot;</span> + bit + <span class="string">&quot;px&quot;</span>;</span></span><br><span class="line"><span class="javascript">      b1.style.top = <span class="string">&quot;-1px&quot;</span>;</span></span><br><span class="line"><span class="javascript">    &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> temp = (<span class="built_in">Number</span>(b1.style.left.replace(<span class="regexp">/px/</span>, <span class="string">&quot;&quot;</span>)) - <span class="number">1</span>*bit).toString() + <span class="string">&quot;px&quot;</span>;</span></span><br><span class="line"><span class="javascript">      <span class="comment">// 注意toString加括号</span></span></span><br><span class="line">      b1.style.left = temp;</span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> temp = (<span class="built_in">Number</span>(b1.style.top.replace(<span class="regexp">/px/</span>, <span class="string">&quot;&quot;</span>)) - <span class="number">1</span>).toString() + <span class="string">&quot;px&quot;</span>;</span></span><br><span class="line">      b1.style.top = temp;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="javascript">  &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">    b1.src = <span class="string">&quot;/i/eg_mouse2.jpg&quot;</span></span></span><br><span class="line">    b1.width -= 2*bit;</span><br><span class="line">    b1.height -= 2;</span><br><span class="line"><span class="javascript">    <span class="keyword">if</span> (b1.style.left == <span class="string">&quot;&quot;</span>) &#123;</span></span><br><span class="line"><span class="javascript">      b1.style.left = bit + <span class="string">&quot;px&quot;</span>;</span></span><br><span class="line"><span class="javascript">      b1.style.top = <span class="string">&quot;1px&quot;</span>;</span></span><br><span class="line"><span class="javascript">    &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> temp = (<span class="built_in">Number</span>(b1.style.left.replace(<span class="regexp">/px/</span>, <span class="string">&quot;&quot;</span>)) + <span class="number">1</span>*bit).toString() + <span class="string">&quot;px&quot;</span>;</span></span><br><span class="line">      b1.style.left = temp;</span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> temp = (<span class="built_in">Number</span>(b1.style.top.replace(<span class="regexp">/px/</span>, <span class="string">&quot;&quot;</span>)) + <span class="number">1</span>).toString() + <span class="string">&quot;px&quot;</span>;</span></span><br><span class="line">      b1.style.top = temp;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://www.w3school.com.cn&quot;</span> <span class="attr">onmousewheel</span>=<span class="string">&quot;mouse()&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">alt</span>=<span class="string">&quot;Visit W3School!&quot;</span> <span class="attr">src</span>=<span class="string">&quot;/i/eg_mouse2.jpg&quot;</span> <span class="attr">id</span>=<span class="string">&quot;b1&quot;</span> <span class="attr">style</span>=<span class="string">&quot;position: fixed; top: 100px; left: 100px;&quot;</span> <span class="attr">width</span>=<span class="string">&quot;200px&quot;</span> <span class="attr">height</span>=<span class="string">&quot;100px&quot;</span> /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 不要把width写进style --&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> javascript </tag>
            
            <tag> html </tag>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ubuntu使用</title>
      <link href="/2019/02/25/ubuntu%E4%BD%BF%E7%94%A8/"/>
      <url>/2019/02/25/ubuntu%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="零散笔记"><a href="#零散笔记" class="headerlink" title="零散笔记"></a>零散笔记</h1><h2 id="摄像头-webcam"><a href="#摄像头-webcam" class="headerlink" title="摄像头(webcam)"></a>摄像头(webcam)</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt install v4l-util cheese</span><br><span class="line">sudo cheese</span><br></pre></td></tr></table></figure><p>修改摄像头权限</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ls -ltrh /dev/video*</span><br><span class="line">sudo chmod 777 /dev/video0</span><br><span class="line">cheese</span><br></pre></td></tr></table></figure><h2 id="在文件夹中执行脚本"><a href="#在文件夹中执行脚本" class="headerlink" title="在文件夹中执行脚本"></a>在文件夹中执行脚本</h2><p>在<code>文件</code>$\to$<code>首选项</code>$\to$<code>行为</code>$\to$<code>可执行文本文件</code></p><h2 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h2><p>不要出现<code>fn</code>+<code>super</code>的组合</p><h3 id="截屏"><a href="#截屏" class="headerlink" title="截屏"></a>截屏</h3><ul><li>复制截图到剪切板:<code>ctrl</code>+<code>print</code></li><li>复制窗口截图到剪切板:<code>ctrl</code>+<code>alt</code>+<code>print</code></li><li>复制选区截图到剪切板:<code>shift</code>+<code>ctrl</code>+<code>print</code></li><li>保存截图到<code>图片</code>:<code>print</code></li><li>保存窗口截图到<code>图片</code>:<code>alt</code>+<code>print</code></li><li>保存选区截图到<code>图片</code>:<code>shift</code>+<code>print</code></li><li>录屏:<code>shift</code>+<code>ctrl</code>+<code>alt</code>+<code>r</code></li></ul><h3 id="禁用快捷键"><a href="#禁用快捷键" class="headerlink" title="禁用快捷键"></a>禁用快捷键</h3><p><code>backspace</code></p><h2 id="WLAN"><a href="#WLAN" class="headerlink" title="WLAN"></a>WLAN</h2><h3 id="wifi连接"><a href="#wifi连接" class="headerlink" title="wifi连接"></a>wifi连接</h3><p><a href="https://askubuntu.com/questions/16584/how-to-connect-and-disconnect-to-a-network-manually-in-terminal">参考:askubuntu</a></p><ul><li><p>查看网卡名:<code>iwconfig</code></p></li><li><p>扫描:<code>nmcli dev wifi</code></p></li><li><p>连接:<code>nmcli dev wifi connect WLAN_NAME password PASSWORD</code></p></li><li><p>忘记:<code>nmcli c delete WLAN_NAME</code></p></li><li><p>关闭热点:<code>nmcli dev disconnect wlp2s0</code></p></li><li><p>关闭wlan:<code>nmcli radio wifi off</code></p></li><li><p>开启wlan:<code>nmcli radio wifi on</code></p></li></ul><h3 id="热点"><a href="#热点" class="headerlink" title="热点"></a>热点</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nm-connection-editor</span><br></pre></td></tr></table></figure><ol><li><p><code>+</code>-&gt;<code>Wifi</code>-&gt;<code>Mode</code>:<code>Hotspot</code></p></li><li><p>开启热点</p><ul><li><code>设置</code>-&gt;(右上角)<code>Connect to Hidden Network</code></li><li><code>设置</code>$\to$<code>wifi</code>$\to$<code>打开wifi热点</code></li></ul></li></ol><h3 id="共享wifi"><a href="#共享wifi" class="headerlink" title="共享wifi"></a>共享wifi</h3><ul><li><code>create_ap</code>:<a href="https://github.com/oblique/create_ap">github</a></li></ul><h2 id="误删PATH救急"><a href="#误删PATH救急" class="headerlink" title="误删PATH救急"></a>误删<code>PATH</code>救急</h2><ul><li>Linux通用?</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> PATH=/usr/<span class="built_in">local</span>/sbin:/usr/<span class="built_in">local</span>/bin:/sbin:/bin:/usr/sbin:/usr/bin:<span class="variable">$PATH</span></span><br></pre></td></tr></table></figure><blockquote><p>不要忘记加<code>:PATH</code></p></blockquote><h2 id="安装字体"><a href="#安装字体" class="headerlink" title="安装字体"></a>安装字体</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo mkdir /usr/share/fonts/&#123;name&#125;</span><br><span class="line">sudo cp &#123;font&#125;.ttf /usr/share/fonts/&#123;name&#125;</span><br><span class="line"><span class="built_in">cd</span> /usr/share/fonts/&#123;name&#125;</span><br><span class="line">sudo mkfontscale</span><br><span class="line">sudo mkfontdir</span><br><span class="line">sudo <span class="built_in">fc</span>-cache -fv</span><br></pre></td></tr></table></figure><h2 id="文件编码"><a href="#文件编码" class="headerlink" title="文件编码"></a>文件编码</h2><ul><li><a href="https://blog.csdn.net/jnbbwyth/article/details/6991425">enca等</a></li><li><a href="https://linux.cn/article-7959-1.html">iconv</a></li></ul><hr><h1 id="安装软件"><a href="#安装软件" class="headerlink" title="安装软件"></a>安装软件</h1><h2 id="基本"><a href="#基本" class="headerlink" title="基本"></a>基本</h2><ul><li><a href="https://www.sublimetext.com/docs/3/linux_repositories.html">sublime</a></li><li>chromium:注意数据备份<code>.config/chromium</code><ul><li><code>tamper monkey</code></li><li><code>Adblock Plus</code></li><li><code>SwitchyOmega</code></li><li><code>crxMouse Top Gestures</code></li><li><code>hoxx</code></li></ul></li><li>dukto:3系统互传软件</li><li>hyper:配置文件<code>~/.hyper.js</code></li><li>vscode</li><li><code>gnome-tweak</code>:如果还在用gnome<ul><li><code>dash to panel</code></li><li><code>topicons plus</code></li><li><code>user themes</code></li></ul></li><li>搜狗输入法:<a href="https://blog.csdn.net/qq_32782339/article/details/79489851">CSDN</a><ul><li>官网下载deb</li><li><code>sudo apt install -f &amp;&amp; sudo dpkg -i sougou.deb</code></li><li><code>设置</code>-&gt;<code>区域和语言</code>-&gt;<code>键盘输入法系统</code>(点击任务栏的输入法图标-&gt;<code>Configure</code>)</li></ul></li><li>日语输入法<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt install fcitx-mozc</span><br><span class="line"><span class="comment"># sudo apt install fcitx-anthy</span></span><br><span class="line"><span class="comment"># im-config -n fcitx</span></span><br></pre></td></tr></table></figure>重启(<code>fcitx configuration</code>)<ul><li>片假名切换:<code>f7</code></li></ul></li><li><code>gparted</code>:磁盘分区</li><li><code>exfat-utils</code>:支持<code>exfat</code>格式的u盘</li></ul><h2 id="deepin-wine软件"><a href="#deepin-wine软件" class="headerlink" title="deepin wine软件"></a><code>deepin wine</code>软件</h2><ul><li>QQ</li><li>TIM</li><li>QQ轻聊版</li><li>微信</li><li>Foxmail</li><li>百度网盘</li><li>360压缩</li><li>WinRAR</li><li>迅雷极速版</li></ul><p><a href="https://www.lulinux.com/archives/1319">详细</a>,<a href="https://github.com/wszqkzqk/deepin-wine-ubuntu">github</a></p><h3 id="软件的文件存放位置"><a href="#软件的文件存放位置" class="headerlink" title="软件的文件存放位置"></a>软件的文件存放位置</h3><ul><li>QQ:</li></ul><p><code>/home/lynx/.deepinwine/Deepin-QQ/dosdevices/c:/users/lynx/My Documents/Tencent Files/$account/FileRecv</code></p><h3 id="deepin-wine字体异常处理"><a href="#deepin-wine字体异常处理" class="headerlink" title="deepin wine字体异常处理"></a><code>deepin wine</code>字体异常处理</h3><h4 id="修改注册表-TODO"><a href="#修改注册表-TODO" class="headerlink" title="修改注册表(TODO)"></a>修改注册表(TODO)</h4><ol><li><p>新建(任何位置,文件名随意)<code>zh.reg</code><br>1.1. 字体链接</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[HKEY_LOCAL_MACHINE\Software\Microsoft\Windows NT\CurrentVersion\FontLink\SystemLin]</span><br><span class="line">&quot;字体名&quot;&#x3D;&quot;字体文件&quot;</span><br></pre></td></tr></table></figure><p>1.2. 字体(强制)替换</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[HKEY_LOCAL_MACHINE\Software\Microsoft\Windows NT\CurrentVersion\FontSubstitutes]</span><br><span class="line">&quot;字体名&quot;&#x3D;&quot;字体文件&quot;</span><br></pre></td></tr></table></figure><p>1.3 字体(缺失)替换</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[HKEY_CURRENT_USER\Software\\Wine\\Fonts\\Replacements]</span><br><span class="line">&quot;字体名&quot;&#x3D;&quot;字体文件&quot;</span><br></pre></td></tr></table></figure></li><li><p>修改注册表(貌似没用)</p></li></ol><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">deepin-wine regedit zh.reg</span><br></pre></td></tr></table></figure><h4 id="补充字体文件"><a href="#补充字体文件" class="headerlink" title="补充字体文件"></a>补充字体文件</h4><ul><li>字体文件存放位置:<code>./deepin-wine/软件名/driver_c/windows/fonts/</code></li></ul><h2 id="wps软件"><a href="#wps软件" class="headerlink" title="wps软件"></a>wps软件</h2><h3 id="缺少字体的处理方法"><a href="#缺少字体的处理方法" class="headerlink" title="缺少字体的处理方法"></a>缺少字体的处理方法</h3><ol><li>下载并解压字体文件夹<code>wps-font-symbols</code></li></ol><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/pengphei/wps-font-symbols</span><br><span class="line">sudo cp -r wps-font-symbols /usr/share/fonts</span><br><span class="line"><span class="comment"># cd /usr/share/fonts</span></span><br><span class="line"><span class="comment"># sudo chmod 755 wps-font-symbols</span></span><br><span class="line"><span class="built_in">cd</span> /usr/share/fonts/wps-font-symbols</span><br><span class="line"><span class="comment"># sudo chmod 644 *</span></span><br><span class="line">sudo mkfontdir</span><br><span class="line">sudo mkfontscale</span><br><span class="line"><span class="built_in">fc</span>-cache</span><br></pre></td></tr></table></figure><ol start="2"><li>或直接从windows复制对应字体</li></ol><h2 id="默认软件管理"><a href="#默认软件管理" class="headerlink" title="默认软件管理"></a>默认软件管理</h2><ul><li><code>exo-utils</code><ul><li>使用<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">exo-preferred-applications</span><br></pre></td></tr></table></figure></li></ul></li></ul><h2 id="文件管理器"><a href="#文件管理器" class="headerlink" title="文件管理器"></a>文件管理器</h2><p>由于ubuntu自带的文件管理器(nautilus)太睿智,推荐以下文件管理器</p><ul><li>pcmanfm</li><li>nemo</li><li>thunar</li><li>dolphin</li></ul><h3 id="修改默认文件管理器"><a href="#修改默认文件管理器" class="headerlink" title="修改默认文件管理器"></a>修改默认文件管理器</h3><p>TODO:<code>/etc/gnome/defaults.list</code>(直接修改好像没用)</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># what&#x27;s the current default file manager?</span></span><br><span class="line">xdg-mime query default inode/directory</span><br><span class="line"></span><br><span class="line"><span class="comment"># set nautilus as a default file manager</span></span><br><span class="line">xdg-mime default nautilus.desktop inode/directory <span class="comment"># application/x-gnome-saved-search</span></span><br></pre></td></tr></table></figure><p>软件对应<code>/usr/share/applications</code>下的<code>desktop</code>名</p><h2 id="matlab"><a href="#matlab" class="headerlink" title="matlab"></a>matlab</h2><h3 id="离线激活"><a href="#离线激活" class="headerlink" title="离线激活"></a>离线激活</h3><ol><li><p>输入许可证路径<code>license_standalone.lic</code></p></li><li><p>修改matlab所在目录的读写权限以及用户组</p></li><li><p>讲破解文件的<code>lmgrimpl</code>文件覆盖原matlab文件</p></li></ol><h3 id="许可证失效-无法打开matlab"><a href="#许可证失效-无法打开matlab" class="headerlink" title="许可证失效(无法打开matlab)"></a>许可证失效(无法打开matlab)</h3><p>删除<code>matlab/licenses</code>下的文件</p><h2 id="mathematica"><a href="#mathematica" class="headerlink" title="mathematica"></a>mathematica</h2><p>报错</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">CRITICAL FAILURE: PrintIntroduction() Error</span><br><span class="line">$ProductTitle not defined.</span><br></pre></td></tr></table></figure><p>路径不能有空格</p><h2 id="一个解决包依赖问题的软件"><a href="#一个解决包依赖问题的软件" class="headerlink" title="一个解决包依赖问题的软件"></a>一个解决包依赖问题的软件</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt install aptitude</span><br></pre></td></tr></table></figure><ul><li>(示例)卸载libreoffice</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo aptitude purge libreoffice6.0</span><br></pre></td></tr></table></figure><h2 id="字体编辑"><a href="#字体编辑" class="headerlink" title="字体编辑"></a>字体编辑</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo add-apt-repository ppa:fontforge/fontforge</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install fontforge</span><br></pre></td></tr></table></figure><h3 id="修改字体名称"><a href="#修改字体名称" class="headerlink" title="修改字体名称"></a>修改字体名称</h3><ol><li>打开字体文件</li><li><code>基础</code>-&gt;<code>字体信息</code></li><li><code>文件</code>-&gt;<code>生成字体</code>-&gt;(可选)选择<code>TrueType</code>(ttf)</li></ol><h2 id="图像编辑"><a href="#图像编辑" class="headerlink" title="图像编辑"></a>图像编辑</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt install gimp</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt install krita</span><br><span class="line">sudo apt install krita-l10n</span><br></pre></td></tr></table></figure><h2 id="图像转换"><a href="#图像转换" class="headerlink" title="图像转换"></a>图像转换</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt install sam2p</span><br><span class="line">sam2p shit.png shit.gif</span><br></pre></td></tr></table></figure><h2 id="gif录屏"><a href="#gif录屏" class="headerlink" title="gif录屏"></a>gif录屏</h2><ul><li>byzanz</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt install byzanz </span><br><span class="line">byzanz-record --duration=50 --delay=3 --x=1030 --y=100 --height=500 demo1.gif</span><br></pre></td></tr></table></figure><h2 id="视频播放"><a href="#视频播放" class="headerlink" title="视频播放"></a>视频播放</h2><ul><li>mpv</li></ul><p><a href="https://github.com/mpv-player/mpv/blob/master/etc/input.conf">快捷键:https://github.com/mpv-player/mpv/blob/master/etc/input.conf</a></p><h2 id="视频转换"><a href="#视频转换" class="headerlink" title="视频转换"></a>视频转换</h2><ul><li>ffmpeg</li></ul><h3 id="gif转视频"><a href="#gif转视频" class="headerlink" title="gif转视频"></a>gif转视频</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ffmpeg -f gif -i draw1.gif draw1.mpg</span><br></pre></td></tr></table></figure><h3 id="视频合并"><a href="#视频合并" class="headerlink" title="视频合并"></a>视频合并</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ffmpeg -i <span class="string">&quot;concat:draw1.mpg|draw2.mpg|pen.mpg|edit.mpg|clip.mpg&quot;</span> demo.mp4</span><br></pre></td></tr></table></figure><ul><li>注意添加<code>concat</code></li><li>只有特定格式的视频才能合并</li></ul><h3 id="视频剪切"><a href="#视频剪切" class="headerlink" title="视频剪切"></a>视频剪切</h3><ul><li><strong>TODO</strong>:视频关键帧会影响剪切的时长</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ffmpeg -ss 00:00:00 -t 00:01:15 -i del.mpg -vcodec copy -acodec copy del.mp4</span><br></pre></td></tr></table></figure><h2 id="桌面便签-Indicator-Stickynotes"><a href="#桌面便签-Indicator-Stickynotes" class="headerlink" title="桌面便签(Indicator Stickynotes)"></a>桌面便签(Indicator Stickynotes)</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo add-apt-repository ppa:umang/indicator-stickynotes</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install indicator-stickynotes</span><br></pre></td></tr></table></figure><h2 id="下载器-TODO"><a href="#下载器-TODO" class="headerlink" title="下载器(TODO)"></a>下载器(TODO)</h2><ul><li>wget:单线程</li><li>curl:单线程</li><li>axel:多线程</li><li>aria2:可以设置线程</li><li>mwget:多线程版wget</li><li>Prozilla:多线程,cmd,gui</li><li>Downloader for X:多线程,gui</li><li>MyGet:多线程</li><li>Linuxdown:多线程,cmd</li><li>Transmission:磁力,gui(不会用)</li><li>Uget:cURL+aria2</li></ul><h2 id="网络监测"><a href="#网络监测" class="headerlink" title="网络监测"></a>网络监测</h2><ul><li>nethogs</li></ul><hr><h1 id="基本没用"><a href="#基本没用" class="headerlink" title="基本没用"></a>基本没用</h1><h2 id="屏幕管理"><a href="#屏幕管理" class="headerlink" title="屏幕管理"></a>屏幕管理</h2><ul><li>arandr</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt install arandr</span><br></pre></td></tr></table></figure><h2 id="镜像源"><a href="#镜像源" class="headerlink" title="镜像源"></a>镜像源</h2><p><code>/etc/apt/sources.list</code></p><ul><li><code>ubuntu 19.04</code></li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">deb http:&#x2F;&#x2F;cn.archive.ubuntu.com&#x2F;ubuntu&#x2F; disco main restricted</span><br><span class="line">deb http:&#x2F;&#x2F;cn.archive.ubuntu.com&#x2F;ubuntu&#x2F; disco-updates main restricted</span><br><span class="line">deb http:&#x2F;&#x2F;cn.archive.ubuntu.com&#x2F;ubuntu&#x2F; disco universe</span><br><span class="line">deb http:&#x2F;&#x2F;cn.archive.ubuntu.com&#x2F;ubuntu&#x2F; disco-updates universe</span><br><span class="line">deb http:&#x2F;&#x2F;cn.archive.ubuntu.com&#x2F;ubuntu&#x2F; disco multiverse</span><br><span class="line">deb http:&#x2F;&#x2F;cn.archive.ubuntu.com&#x2F;ubuntu&#x2F; disco-updates multiverse</span><br><span class="line">deb http:&#x2F;&#x2F;cn.archive.ubuntu.com&#x2F;ubuntu&#x2F; disco-backports main restricted universe multiverse</span><br><span class="line">deb http:&#x2F;&#x2F;security.ubuntu.com&#x2F;ubuntu disco-security main restricted</span><br><span class="line">deb http:&#x2F;&#x2F;security.ubuntu.com&#x2F;ubuntu disco-security universe</span><br><span class="line">deb http:&#x2F;&#x2F;security.ubuntu.com&#x2F;ubuntu disco-security multiverse</span><br></pre></td></tr></table></figure><ul><li>中科大</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">deb https:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;ubuntu&#x2F; bionic main restricted universe multiverse</span><br><span class="line">deb-src https:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;ubuntu&#x2F; bionic main restricted universe multiverse</span><br><span class="line">deb https:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;ubuntu&#x2F; bionic-updates main restricted universe multiverse</span><br><span class="line">deb-src https:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;ubuntu&#x2F; bionic-updates main restricted universe multiverse</span><br><span class="line">deb https:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;ubuntu&#x2F; bionic-backports main restricted universe multiverse</span><br><span class="line">deb-src https:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;ubuntu&#x2F; bionic-backports main restricted universe multiverse</span><br><span class="line">deb https:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;ubuntu&#x2F; bionic-security main restricted universe multiverse</span><br><span class="line">deb-src https:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;ubuntu&#x2F; bionic-security main restricted universe multiverse</span><br><span class="line">deb https:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;ubuntu&#x2F; bionic-proposed main restricted universe multiverse</span><br><span class="line">deb-src https:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;ubuntu&#x2F; bionic-proposed main restricted universe multiverse</span><br></pre></td></tr></table></figure><ul><li>清华</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">deb https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; bionic main restricted universe multiverse</span><br><span class="line">deb-src https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; bionic main restricted universe multiverse</span><br><span class="line">deb https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; bionic-updates main restricted universe multiverse</span><br><span class="line">deb-src https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; bionic-updates main restricted universe multiverse</span><br><span class="line">deb https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; bionic-backports main restricted universe multiverse</span><br><span class="line">deb-src https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; bionic-backports main restricted universe multiverse</span><br><span class="line">deb https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; bionic-security main restricted universe multiverse</span><br><span class="line">deb-src https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; bionic-security main restricted universe multiverse</span><br><span class="line">deb https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; bionic-proposed main restricted universe multiverse</span><br><span class="line">deb-src https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; bionic-proposed main restricted universe multiverse</span><br></pre></td></tr></table></figure><ul><li>网易</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">deb http:&#x2F;&#x2F;mirrors.163.com&#x2F;ubuntu&#x2F; bionic main restricted universe multiverse</span><br><span class="line">deb http:&#x2F;&#x2F;mirrors.163.com&#x2F;ubuntu&#x2F; bionic-security main restricted universe multiverse</span><br><span class="line">deb http:&#x2F;&#x2F;mirrors.163.com&#x2F;ubuntu&#x2F; bionic-updates main restricted universe multiverse</span><br><span class="line">deb http:&#x2F;&#x2F;mirrors.163.com&#x2F;ubuntu&#x2F; bionic-proposed main restricted universe multiverse</span><br><span class="line">deb http:&#x2F;&#x2F;mirrors.163.com&#x2F;ubuntu&#x2F; bionic-backports main restricted universe multiverse</span><br><span class="line">deb-src http:&#x2F;&#x2F;mirrors.163.com&#x2F;ubuntu&#x2F; bionic main restricted universe multiverse</span><br><span class="line">deb-src http:&#x2F;&#x2F;mirrors.163.com&#x2F;ubuntu&#x2F; bionic-security main restricted universe multiverse</span><br><span class="line">deb-src http:&#x2F;&#x2F;mirrors.163.com&#x2F;ubuntu&#x2F; bionic-updates main restricted universe multiverse</span><br><span class="line">deb-src http:&#x2F;&#x2F;mirrors.163.com&#x2F;ubuntu&#x2F; bionic-proposed main restricted universe multiverse</span><br><span class="line">deb-src http:&#x2F;&#x2F;mirrors.163.com&#x2F;ubuntu&#x2F; bionic-backports main restricted universe multiverse</span><br></pre></td></tr></table></figure><ul><li>阿里</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">deb http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; bionic main restricted universe multiverse</span><br><span class="line">deb http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; bionic-security main restricted universe multiverse</span><br><span class="line">deb http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; bionic-updates main restricted universe multiverse</span><br><span class="line">deb http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; bionic-proposed main restricted universe multiverse</span><br><span class="line">deb http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; bionic-backports main restricted universe multiverse</span><br><span class="line">deb-src http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; bionic main restricted universe multiverse</span><br><span class="line">deb-src http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; bionic-security main restricted universe multiverse</span><br><span class="line">deb-src http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; bionic-updates main restricted universe multiverse</span><br><span class="line">deb-src http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; bionic-proposed main restricted universe multiverse</span><br><span class="line">deb-src http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; bionic-backports main restricted universe multiverse</span><br></pre></td></tr></table></figure><h2 id="apt"><a href="#apt" class="headerlink" title="apt"></a>apt</h2><ul><li><a href="https://www.sysgeek.cn/apt-vs-apt-get/">apt与apt-get区别</a></li><li><a href="https://linux.cn/article-4933-1.html">apt-get示例</a></li></ul><h2 id="系统监视器安装"><a href="#系统监视器安装" class="headerlink" title="系统监视器安装"></a>系统监视器安装</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt install gnome-system-monitor</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> ubuntu </tag>
            
            <tag> wlan </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo插入live2d</title>
      <link href="/2019/02/24/hexo%E6%8F%92%E5%85%A5live2d/"/>
      <url>/2019/02/24/hexo%E6%8F%92%E5%85%A5live2d/</url>
      
        <content type="html"><![CDATA[<h1 id="重要更新"><a href="#重要更新" class="headerlink" title="重要更新"></a>重要更新</h1><p>其他人写的代码还不如自己整的,详细<a href="https://gihub.com/darkin-blade/webGL">github</a></p><hr><h1 id="位置说明"><a href="#位置说明" class="headerlink" title="位置说明"></a>位置说明</h1><blockquote><p>注意不要重复使用一个API</p></blockquote><h2 id="文件位置"><a href="#文件位置" class="headerlink" title="文件位置"></a>文件位置</h2><h3 id="保证能用"><a href="#保证能用" class="headerlink" title="保证能用"></a>保证能用</h3><ul><li>fghrsh:<code>//live2d-cdn.fghrsh.net/assets/1.4.2/$file</code></li><li>zhangshuqiao:<code>https://cdn.jsdelivr.net/gh/stevenjoezhang/live2d-widget/$file</code></li><li>jsdelivr加载github:<code>https://cdn.jsdelivr.net/gh/NiaBie/live2d_lazy@version/$file</code></li><li>jquery和font-awesome什么的自己找</li></ul><h3 id="基本不能用"><a href="#基本不能用" class="headerlink" title="基本不能用"></a>基本不能用</h3><ul><li>hexo加载(默认是在<code>source/</code>里面):<code>https://niabie.github.io/$dir/$file</code></li><li>github原码:<code>https://raw.githubusercontent.com/NiaBie/live2d_lazy/master/$file</code></li></ul><h2 id="hexo的样式文件"><a href="#hexo的样式文件" class="headerlink" title="hexo的样式文件"></a>hexo的样式文件</h2><p><code>blog/themes/next/layout/_layout.swig</code>:</p><ul><li><code>&lt;head&gt;</code>最后一行:</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% include &#39;_third-party&#x2F;live2d_head&#39; %&#125;</span><br></pre></td></tr></table></figure><ul><li><code>&lt;body&gt;</code>最后一行:</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% include &#39;_third-party&#x2F;live2d_body&#39; %&#125;</span><br></pre></td></tr></table></figure><p>添加文件请直接修改这两个文件,注意html注释(不要嵌套<code>&lt;!-- --&gt;</code>)!</p><hr><h1 id="使用xiazeyu的hexo-live2d-widget-js"><a href="#使用xiazeyu的hexo-live2d-widget-js" class="headerlink" title="使用xiazeyu的hexo-live2d-widget.js"></a>使用xiazeyu的hexo-live2d-widget.js</h1><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>按照EYHN的手册用npm安装插件和模型</p><h2 id="添加模型"><a href="#添加模型" class="headerlink" title="添加模型"></a>添加模型</h2><p>手动下载zip,解压到<code>~/node_modules/</code>:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~&#x2F;node_modules&#x2F;$&#123;foldername&#125;&#x2F;--+--package.json</span><br><span class="line">                               |</span><br><span class="line">                               &#96;--assets&#x2F;-+-$&#123;name&#125;.moc</span><br><span class="line">                                          |</span><br><span class="line">                                          +-$&#123;name&#125;.model.json</span><br><span class="line">                                          |</span><br><span class="line">                                          +-textures&#x2F;---$&#123;你的材质图&#125;.png</span><br><span class="line">                                          |</span><br><span class="line">                                          +-modtions&#x2F;---$&#123;动作&#125;.mtn</span><br><span class="line">                                          | # 以下可选</span><br><span class="line">                                          +-expressions&#x2F;---$&#123;没研究过&#125;.json</span><br><span class="line">                                          |</span><br><span class="line">                                          +-sounds&#x2F;--$&#123;你懂的&#125;.mp3</span><br><span class="line">                                          |</span><br><span class="line">                                          +-$&#123;name&#125;.physics # 不知道干嘛的</span><br><span class="line">                                          |</span><br><span class="line">                                          &#96;-$&#123;name&#125;.pose.json # 不知道干嘛的</span><br></pre></td></tr></table></figure><ul><li><code>$&#123;foldername&#125;</code>随意,在<code>blog/_config.yml</code>中调用的模型名字为<code>$&#123;foldername&#125;</code></li><li><code>package.json</code>可以只留一对大括号</li><li><code>assert/</code>文件夹必须要有</li><li>注意模型的<code>json</code>文件后缀名为<code>model.json</code>,前缀名字随意</li><li>其余部分的命名都随意</li><li><code>package-lock.json</code>可不要</li></ul><h1 id="zhangshuqiao的live2d-widget"><a href="#zhangshuqiao的live2d-widget" class="headerlink" title="zhangshuqiao的live2d-widget"></a>zhangshuqiao的live2d-widget</h1><h2 id="启用"><a href="#启用" class="headerlink" title="启用"></a>启用</h2><p><code>&lt;head&gt;</code>:</p><ul><li><code>&lt;script src=&quot;$path/jquery.min.js&quot;&gt;&lt;/script&gt;</code></li><li><code>&lt;link rel=&quot;stylesheet&quot; href=&quot;$path/font-awesome.min.css&quot;/&gt;</code></li></ul><p><code>&lt;body&gt;</code>:</p><ul><li><code>&lt;script src=&quot;$path/autoload.js&quot;&gt;&lt;/script&gt;</code></li></ul><p>记得修改<code>autoload.js</code>中的github版本(安全的版本:<code>1.0.7</code>),其会调用:</p><ul><li><code>live2d.min.js</code></li><li><code>waifu-tips.js</code></li><li><code>waifu-tips.json</code></li></ul><p>由于作者没有提供修改大小的api,所以只能直接在js里面调,建议设置:</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;waifu&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;waifu-tips&quot;</span> <span class="attr">style</span>=<span class="string">&quot;opacity: 0; position: absolute; bottom: 210px; left: 10px;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">canvas</span> <span class="attr">id</span>=<span class="string">&quot;live2d&quot;</span> <span class="attr">width</span>=<span class="string">&quot;300&quot;</span> <span class="attr">height</span>=<span class="string">&quot;300&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width:200px; height:200px; left:60px;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;waifu-tool&quot;</span> <span class="attr">style</span>=<span class="string">&quot;position:absolute; left:250px; top:-30px;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="fghrsh的live2d-demo和live2d-api"><a href="#fghrsh的live2d-demo和live2d-api" class="headerlink" title="fghrsh的live2d-demo和live2d-api"></a>fghrsh的live2d-demo和live2d-api</h1><blockquote><p>直接使用示例网站的api</p></blockquote><h2 id="用autoload-js加载"><a href="#用autoload-js加载" class="headerlink" title="用autoload.js加载"></a>用<code>autoload.js</code>加载</h2><p><code>&lt;head&gt;</code>:</p><ul><li><code>&lt;script src=&quot;$pathto/jquery.min.js&quot;&gt;&lt;/script&gt;</code></li></ul><p><code>&lt;body&gt;</code>:</p><ul><li><code>&lt;script src=&quot;$pathto/autoload.js&quot;&gt;&lt;/script&gt;</code></li></ul><p>记得修改<code>autoload.js</code>中的github版本(安全的版本:<code>3.0.2</code>),其会调用:</p><ul><li><code>waifu.min.css</code></li><li><code>waifu-tips.json</code></li><li><code>live2d.min.js</code></li></ul><p>直接向<code>autoload</code>中的<code>function()</code>增加参数,不需要使用<code>waifu-tips.js</code></p><p>拖动效果需要另外的js,放在<code>&lt;head&gt;</code>或<code>&lt;body&gt;</code>(推荐)都可:</p><ul><li><code>&lt;script src=&quot;$pathto/jquery-ui.min.js&quot;&gt;&lt;/script&gt;</code></li></ul><p>注意需要:</p><ul><li><code>flat-ui-icons-regular.eot</code> </li><li><code>flat-ui-icons-regular.svg</code></li><li><code>flat-ui-icons-regular.ttf</code></li><li><code>flat-ui-icons-regular.woff</code></li></ul><h3 id="修改不同模型的位置"><a href="#修改不同模型的位置" class="headerlink" title="修改不同模型的位置"></a>修改不同模型的位置</h3><ol><li>修改<code>waifu-tips.js</code></li></ol><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">loadlive2d(<span class="string">&#x27;live2d&#x27;</span>, live2d_settings.modelAPI + <span class="string">&#x27;get/?id=&#x27;</span> + modelId + <span class="string">&#x27;-&#x27;</span> + modelTexturesId, (live2d_settings.showF12Status ? <span class="built_in">console</span>.log(<span class="string">&#x27;[Status]&#x27;</span>, <span class="string">&#x27;live2d&#x27;</span>, <span class="string">&#x27;模型&#x27;</span>, modelId + <span class="string">&#x27;-&#x27;</span> + modelTexturesId, <span class="string">&#x27;加载完成&#x27;</span>) : <span class="literal">null</span>));</span><br><span class="line">+++ <span class="keyword">var</span> temp_body  = <span class="built_in">document</span>.getElementsByTagName(<span class="string">&#x27;body&#x27;</span>)[<span class="number">0</span>];</span><br><span class="line">+++ <span class="keyword">var</span> temp_style = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;live2d_lazy_data&#x27;</span>);</span><br><span class="line">+++ <span class="keyword">if</span> (temp_style == <span class="literal">null</span>)</span><br><span class="line">+++ &#123;</span><br><span class="line">+++   <span class="keyword">var</span> temp_style = <span class="built_in">document</span>.createElement(<span class="string">&#x27;style&#x27;</span>);</span><br><span class="line">+++   temp_style.id = <span class="string">&quot;live2d_lazy_data&quot;</span>;</span><br><span class="line">+++   temp_body.append(temp_style);</span><br><span class="line">+++ &#125;</span><br><span class="line">+++ temp_style.modelId = modelId;</span><br><span class="line">+++ temp_style.modelTexturesId = modelTexturesId;</span><br></pre></td></tr></table></figure><p>通过在每次加载模型后,在<code>&lt;body&gt;</code>尾部创建/搜索一个没用的模型,将live2d的数据赋值给这个<code>&lt;style&gt;</code></p><ol start="2"><li>增加<code>third_party/my_js/live2d.swig</code></li></ol><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">live2d_lazy_start</span>(<span class="params">para</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">  <span class="built_in">setTimeout</span>(<span class="string">&quot;live2d_lazy_execute()&quot;</span>, para);</span></span><br><span class="line"><span class="javascript">  <span class="built_in">setTimeout</span>(<span class="string">&quot;live2d_lazy_execute()&quot;</span>, para + <span class="number">100</span>);</span></span><br><span class="line"><span class="javascript">  <span class="built_in">setTimeout</span>(<span class="string">&quot;live2d_lazy_execute()&quot;</span>, para + <span class="number">1000</span>);</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">live2d_lazy_execute</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">var</span> temp_style = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;live2d_lazy_data&#x27;</span>);</span></span><br><span class="line"><span class="javascript">  <span class="comment">// var live2d_lazy_sheet = document.getElementById(&#x27;live2d&#x27;).sheet;</span></span></span><br><span class="line"><span class="javascript">  <span class="keyword">var</span> live2d_lazy_model = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;live2d&#x27;</span>);</span></span><br><span class="line"><span class="javascript">  <span class="keyword">var</span> live2d_lazy_tips = <span class="built_in">document</span>.getElementsByClassName(<span class="string">&#x27;waifu-tips&#x27;</span>)[<span class="number">0</span>];</span></span><br><span class="line"><span class="javascript">  <span class="keyword">var</span> live2d_lazy_tool = <span class="built_in">document</span>.getElementsByClassName(<span class="string">&#x27;waifu-tool&#x27;</span>)[<span class="number">0</span>];</span></span><br><span class="line"><span class="javascript">  <span class="keyword">var</span> modelTexturesId = temp_style.modelTexturesId;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">var</span> modelId = temp_style.modelId;</span></span><br><span class="line"><span class="javascript">  <span class="built_in">console</span>.log(<span class="string">&#x27;id: &#x27;</span> + modelId + <span class="string">&#x27;,texture: &#x27;</span> + modelTexturesId);</span></span><br><span class="line"><span class="javascript">  <span class="keyword">switch</span> (<span class="built_in">Number</span>(modelId)) &#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">case</span> <span class="number">1</span>:</span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> live2d_lazy_offset = <span class="number">150</span>;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">break</span>;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">case</span> <span class="number">2</span>:</span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> live2d_lazy_offset = <span class="number">135</span>;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">break</span>;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">case</span> <span class="number">3</span>:</span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> live2d_lazy_offset = <span class="number">120</span>;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">break</span>;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">case</span> <span class="number">4</span>:</span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> live2d_lazy_offset = <span class="number">120</span>;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">break</span>;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">case</span> <span class="number">5</span>:</span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> live2d_lazy_offset = <span class="number">120</span>;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">break</span>;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">case</span> <span class="number">6</span>:</span></span><br><span class="line">    &#123;</span><br><span class="line"><span class="javascript">      <span class="keyword">switch</span> (<span class="built_in">Number</span>(modelTexturesId))&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">case</span> <span class="number">0</span>:</span></span><br><span class="line"><span class="javascript">        <span class="keyword">case</span> <span class="number">1</span>:</span></span><br><span class="line"><span class="javascript">        <span class="keyword">case</span> <span class="number">2</span>:</span></span><br><span class="line"><span class="javascript">        <span class="keyword">case</span> <span class="number">3</span>:</span></span><br><span class="line"><span class="javascript">        <span class="keyword">case</span> <span class="number">4</span>:</span></span><br><span class="line"><span class="javascript">        <span class="keyword">case</span> <span class="number">5</span>:</span></span><br><span class="line"><span class="javascript">          <span class="keyword">var</span> live2d_lazy_offset = <span class="number">85</span>;</span></span><br><span class="line"><span class="javascript">          <span class="built_in">console</span>.log(live2d_lazy_offset);</span></span><br><span class="line"><span class="javascript">          <span class="keyword">break</span>;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">case</span> <span class="number">6</span>:</span></span><br><span class="line"><span class="javascript">        <span class="keyword">case</span> <span class="number">7</span>:</span></span><br><span class="line"><span class="javascript">        <span class="keyword">case</span> <span class="number">8</span>:</span></span><br><span class="line"><span class="javascript">        <span class="keyword">case</span> <span class="number">9</span>:</span></span><br><span class="line"><span class="javascript">        <span class="keyword">case</span> <span class="number">10</span>:</span></span><br><span class="line"><span class="javascript">        <span class="keyword">case</span> <span class="number">11</span>:</span></span><br><span class="line"><span class="javascript">        <span class="keyword">case</span> <span class="number">12</span>:</span></span><br><span class="line"><span class="javascript">        <span class="keyword">case</span> <span class="number">13</span>:</span></span><br><span class="line"><span class="javascript">        <span class="keyword">case</span> <span class="number">14</span>:</span></span><br><span class="line"><span class="javascript">        <span class="keyword">case</span> <span class="number">15</span>:</span></span><br><span class="line"><span class="javascript">        <span class="keyword">case</span> <span class="number">16</span>:</span></span><br><span class="line"><span class="javascript">        <span class="keyword">case</span> <span class="number">17</span>:</span></span><br><span class="line"><span class="javascript">        <span class="keyword">case</span> <span class="number">18</span>:</span></span><br><span class="line"><span class="javascript">          <span class="keyword">var</span> live2d_lazy_offset = <span class="number">50</span>;</span></span><br><span class="line"><span class="javascript">          <span class="built_in">console</span>.log(live2d_lazy_offset);</span></span><br><span class="line"><span class="javascript">          <span class="keyword">break</span>;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">case</span> <span class="number">19</span>:</span></span><br><span class="line"><span class="javascript">        <span class="keyword">case</span> <span class="number">20</span>:</span></span><br><span class="line"><span class="javascript">          <span class="keyword">var</span> live2d_lazy_offset = <span class="number">0</span>;</span></span><br><span class="line"><span class="javascript">          <span class="built_in">console</span>.log(live2d_lazy_offset);</span></span><br><span class="line"><span class="javascript">          <span class="keyword">break</span>;</span></span><br><span class="line">      &#125;</span><br><span class="line"><span class="javascript">      <span class="keyword">break</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="javascript">    <span class="keyword">case</span> <span class="number">7</span>:</span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> live2d_lazy_offset = <span class="number">150</span>;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">break</span>;</span></span><br><span class="line">  &#125;</span><br><span class="line"><span class="javascript">  <span class="built_in">console</span>.log(live2d_lazy_offset);</span></span><br><span class="line"><span class="javascript">  live2d_lazy_model.style = <span class="string">&quot;bottom: -&quot;</span> + live2d_lazy_offset + <span class="string">&quot;px;&quot;</span>;</span></span><br><span class="line"><span class="javascript">  live2d_lazy_tips.style = <span class="string">&quot;width: 170px; height: 70px; top: &quot;</span> + (live2d_lazy_offset + <span class="number">150</span>) + <span class="string">&quot;px; font-size: 12px; opacity: 0;&quot;</span>;</span></span><br><span class="line"><span class="javascript">  live2d_lazy_tool.style = <span class="string">&quot;font-size: 14px; top:&quot;</span> + (live2d_lazy_offset + <span class="number">200</span>) + <span class="string">&quot;px;&quot;</span>;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>start函数是便于其他地方调用以及延迟效果使用(因为有可能页面加载后live2d还没加载好,所以需要重复执行,且这个时间很难估计)</p><ol start="3"><li><code>third_party/my_js/main.swig</code></li></ol><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="built_in">setTimeout</span>(<span class="string">&quot;my_init()&quot;</span>, <span class="number">0</span>);</span></span><br><span class="line"><span class="javascript"><span class="built_in">setTimeout</span>(<span class="string">&quot;my_init()&quot;</span>, <span class="number">1000</span>);</span></span><br><span class="line"><span class="javascript"><span class="built_in">setTimeout</span>(<span class="string">&quot;my_init()&quot;</span>, <span class="number">3000</span>);</span></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">my_init</span>(<span class="params"></span>)</span></span></span><br><span class="line">&#123;</span><br><span class="line"><span class="javascript">  <span class="keyword">var</span> main_body = <span class="built_in">document</span>.getElementsByTagName(<span class="string">&#x27;body&#x27;</span>)[<span class="number">0</span>];</span></span><br><span class="line"><span class="javascript">  main_body.setAttribute(<span class="string">&#x27;onresize&#x27;</span>, <span class="string">&#x27;my_resize()&#x27;</span>);</span></span><br><span class="line"><span class="javascript">  main_body.setAttribute(<span class="string">&#x27;onload&#x27;</span>, <span class="string">&#x27;my_resize()&#x27;</span>);</span></span><br><span class="line"><span class="javascript">  main_body.setAttribute(<span class="string">&#x27;onclick&#x27;</span>, <span class="string">&#x27;live2d_lazy_start(50)&#x27;</span>);</span></span><br><span class="line"><span class="javascript">  main_body.setAttribute(<span class="string">&#x27;onmousemove&#x27;</span>, <span class="string">&#x27;bar_hide()&#x27;</span>);</span></span><br><span class="line">  bar_init();</span><br><span class="line"><span class="javascript">  <span class="comment">// window.onload = my_resize();</span></span></span><br><span class="line"><span class="javascript">  <span class="comment">// window.onresize = my_resize();</span></span></span><br><span class="line">&#125;</span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">my_resize</span>(<span class="params"></span>)</span></span></span><br><span class="line">&#123;</span><br><span class="line">  live2d_lazy_start(0);</span><br><span class="line">  layout_resize();</span><br><span class="line">  dfs_li_entry();</span><br><span class="line">  table_resize();</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这部分包含了hexo其他部分的js,会随时间而过时</p><h2 id="内嵌autoload-js和waifu-tips-js"><a href="#内嵌autoload-js和waifu-tips-js" class="headerlink" title="内嵌autoload.js和waifu-tips.js"></a>内嵌<code>autoload.js</code>和<code>waifu-tips.js</code></h2><p>还没调好,不能用</p><p><code>&lt;head&gt;</code>加<code>waifu.min.css</code>/<code>waifu.css</code>,css文件好像一定得静态存放</p><p><code>&lt;body&gt;</code>加<code>jquery.min.js</code>,<code>jquery-ui.min.js</code>,<code>waifu-tips.min.js</code>,<code>live2d.min.js</code></p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;waifu-tips&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--参数不要写上面,写源文件--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">canvas</span> <span class="attr">id</span>=<span class="string">&quot;live2d&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;waifu-tool&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;fui-home&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;fui-chat&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;fui-eye&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;fui-user&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;fui-photo&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;fui-info-circle&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;fui-cross&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">/* 可直接修改部分参数 */</span><br><span class="line">// 后端接口</span><br><span class="line">live2d_settings[&#x27;modelAPI&#x27;] = &#x27;//live2d.fghrsh.net/api/&#x27;; // 自建 API 修改这里</span><br><span class="line">live2d_settings[&#x27;tipsMessage&#x27;] = &#x27;waifu-tips.json&#x27;; // 同目录下可省略路径</span><br><span class="line">live2d_settings[&#x27;hitokotoAPI&#x27;] = &#x27;lwl12.com&#x27;; // 一言 API，可选 &#x27;lwl12.com&#x27;, &#x27;hitokoto.cn&#x27;, &#x27;jinrishici.com&#x27;(古诗词)</span><br><span class="line"></span><br><span class="line">// 默认模型</span><br><span class="line">live2d_settings[&#x27;modelId&#x27;] = 1; // 默认模型 ID，可在 F12 控制台找到</span><br><span class="line">live2d_settings[&#x27;modelTexturesId&#x27;] = 53; // 默认材质 ID，可在 F12 控制台找到</span><br><span class="line"></span><br><span class="line">// 工具栏设置</span><br><span class="line">live2d_settings[&#x27;showToolMenu&#x27;] = true; // 显示 工具栏          ，可选 true(真), false(假)</span><br><span class="line">live2d_settings[&#x27;canCloseLive2d&#x27;] = true; // 显示 关闭看板娘  按钮，可选 true(真), false(假)</span><br><span class="line">live2d_settings[&#x27;canSwitchModel&#x27;] = true; // 显示 模型切换    按钮，可选 true(真), false(假)</span><br><span class="line">live2d_settings[&#x27;canSwitchTextures&#x27;] = true; // 显示 材质切换    按钮，可选 true(真), false(假)</span><br><span class="line">live2d_settings[&#x27;canSwitchHitokoto&#x27;] = false; // 显示 一言切换    按钮，可选 true(真), false(假)</span><br><span class="line">live2d_settings[&#x27;canTakeScreenshot&#x27;] = false; // 显示 看板娘截图  按钮，可选 true(真), false(假)</span><br><span class="line">live2d_settings[&#x27;canTurnToHomePage&#x27;] = false; // 显示 返回首页    按钮，可选 true(真), false(假)</span><br><span class="line">live2d_settings[&#x27;canTurnToAboutPage&#x27;] = false; // 显示 跳转关于页  按钮，可选 true(真), false(假)</span><br><span class="line"></span><br><span class="line">// 模型切换模式</span><br><span class="line">live2d_settings[&#x27;modelStorage&#x27;] = true; // 记录 ID (刷新后恢复)，可选 true(真), false(假)</span><br><span class="line">live2d_settings[&#x27;modelRandMode&#x27;] = &#x27;switch&#x27;; // 模型切换，可选 &#x27;rand&#x27;(随机), &#x27;switch&#x27;(顺序)</span><br><span class="line">live2d_settings[&#x27;modelTexturesRandMode&#x27;] = &#x27;switch&#x27;; // 材质切换，可选 &#x27;rand&#x27;(随机), &#x27;switch&#x27;(顺序)</span><br><span class="line"></span><br><span class="line">// 提示消息选项</span><br><span class="line">live2d_settings[&#x27;showHitokoto&#x27;] = true; // 显示一言</span><br><span class="line">live2d_settings[&#x27;showF12Status&#x27;] = true; // 显示加载状态</span><br><span class="line">live2d_settings[&#x27;showF12Message&#x27;] = false; // 显示看板娘消息</span><br><span class="line">live2d_settings[&#x27;showF12OpenMsg&#x27;] = true; // 显示控制台打开提示</span><br><span class="line">live2d_settings[&#x27;showCopyMessage&#x27;] = true; // 显示 复制内容 提示</span><br><span class="line">live2d_settings[&#x27;showWelcomeMessage&#x27;] = true; // 显示进入面页欢迎词</span><br><span class="line"></span><br><span class="line">//看板娘样式设置</span><br><span class="line">live2d_settings[&#x27;waifuSize&#x27;] = &#x27;200x250&#x27;; // 看板娘大小，例如 &#x27;280x250&#x27;, &#x27;600x535&#x27;</span><br><span class="line">live2d_settings[&#x27;waifuTipsSize&#x27;] = &#x27;170x70&#x27;; // 提示框大小，例如 &#x27;250x70&#x27;, &#x27;570x150&#x27;</span><br><span class="line">live2d_settings[&#x27;waifuFontSize&#x27;] = &#x27;12px&#x27;; // 提示框字体，例如 &#x27;12px&#x27;, &#x27;30px&#x27;</span><br><span class="line">live2d_settings[&#x27;waifuToolFont&#x27;] = &#x27;14px&#x27;; // 工具栏字体，例如 &#x27;14px&#x27;, &#x27;36px&#x27;</span><br><span class="line">live2d_settings[&#x27;waifuToolLine&#x27;] = &#x27;20px&#x27;; // 工具栏行高，例如 &#x27;20px&#x27;, &#x27;36px&#x27;</span><br><span class="line">live2d_settings[&#x27;waifuToolTop&#x27;] = &#x27;0px&#x27; // 工具栏顶部边距，例如 &#x27;0px&#x27;, &#x27;-60px&#x27;</span><br><span class="line">live2d_settings[&#x27;waifuMinWidth&#x27;] = &#x27;400px&#x27;; // 面页小于 指定宽度 隐藏看板娘，例如 &#x27;disable&#x27;(禁用), &#x27;768px&#x27;</span><br><span class="line">live2d_settings[&#x27;waifuEdgeSide&#x27;] = &#x27;left:60&#x27;; // 看板娘贴边方向，例如 &#x27;left:0&#x27;(靠左 0px), &#x27;right:30&#x27;(靠右 30px)</span><br><span class="line">live2d_settings[&#x27;waifuDraggable&#x27;] = &#x27;unlimited&#x27;; // 拖拽样式，例如 &#x27;disable&#x27;(禁用), &#x27;axis-x&#x27;(只能水平拖拽), &#x27;unlimited&#x27;(自由拖拽)</span><br><span class="line">live2d_settings[&#x27;waifuDraggableRevert&#x27;] = false; // 松开鼠标还原拖拽位置，可选 true(真), false(假)</span><br><span class="line"></span><br><span class="line">// 其他杂项设置</span><br><span class="line">live2d_settings[&#x27;l2dVersion&#x27;] = &#x27;1.4.2&#x27;; // 当前版本</span><br><span class="line">live2d_settings[&#x27;l2dVerDate&#x27;] = &#x27;2018.11.12&#x27;; // 版本更新日期</span><br><span class="line">live2d_settings[&#x27;homePageUrl&#x27;] = &#x27;auto&#x27;; // 主页地址，可选 &#x27;auto&#x27;(自动), &#x27;&#123;URL 网址&#125;&#x27;</span><br><span class="line">live2d_settings[&#x27;aboutPageUrl&#x27;] = &#x27;https://www.fghrsh.net/post/123.html&#x27;; // 关于页地址, &#x27;&#123;URL 网址&#125;&#x27;</span><br><span class="line">live2d_settings[&#x27;screenshotCaptureName&#x27;] = &#x27;live2d.png&#x27;; // 看板娘截图文件名，例如 &#x27;live2d.png&#x27;</span><br><span class="line">/* 在 initModel 前添加 */</span><br><span class="line">initModel(&quot;https://raw.githubusercontent.com/NiaBie/live2d_lazy/master/waifu-tips.json&quot;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> live2d </tag>
            
            <tag> html </tag>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo配置</title>
      <link href="/2019/02/24/hexo%E9%85%8D%E7%BD%AE/"/>
      <url>/2019/02/24/hexo%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="自定义排序"><a href="#自定义排序" class="headerlink" title="自定义排序"></a>自定义排序</h1><h2 id="修改-config-yml"><a href="#修改-config-yml" class="headerlink" title="修改_config.yml"></a>修改<code>_config.yml</code></h2><p><code>blog/_config.yml</code>:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">index_generator:</span><br><span class="line">  order_by:</span><br><span class="line">    updated: -1 # -1表示降序</span><br></pre></td></tr></table></figure><h2 id="updated脚本"><a href="#updated脚本" class="headerlink" title="updated脚本"></a>updated脚本</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> filename <span class="keyword">in</span> *.md</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">  changed=$(git diff <span class="variable">$&#123;filename&#125;</span>)</span><br><span class="line">  changed_num=<span class="variable">$&#123;#changed&#125;</span></span><br><span class="line">  <span class="keyword">if</span> [ <span class="variable">$&#123;changed_num&#125;</span> -ge 10 ]</span><br><span class="line">    <span class="comment"># 计算修改程度</span></span><br><span class="line">  <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$&#123;filename&#125;</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$&#123;changed_num&#125;</span></span><br><span class="line">    old=$(sed -n <span class="string">&quot;3p&quot;</span> <span class="variable">$&#123;filename&#125;</span>)</span><br><span class="line">    new=<span class="string">&quot;<span class="variable">$&#123;old#updated&#125;</span>&quot;</span></span><br><span class="line">    updated=<span class="string">&quot;updated: &quot;</span>$(date <span class="string">&quot;+%s&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$&#123;new&#125;</span>&quot;</span> != <span class="string">&quot;<span class="variable">$&#123;old&#125;</span>&quot;</span> ]</span><br><span class="line">    <span class="keyword">then</span></span><br><span class="line">      <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$&#123;filename&#125;</span>&quot;</span> <span class="string">&quot;has updated tab&quot;</span></span><br><span class="line">        <span class="comment"># 有updated这一栏</span></span><br><span class="line">      sed -i <span class="string">&#x27;&#x27;</span> -e <span class="string">&#x27;3c \</span></span><br><span class="line"><span class="string">      &#x27;</span><span class="variable">$&#123;updated&#125;</span> <span class="variable">$&#123;filename&#125;</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$&#123;filename&#125;</span>&quot;</span> <span class="string">&quot;no updated tab&quot;</span></span><br><span class="line">        <span class="comment"># 没有updated这一栏</span></span><br><span class="line">      sed -i <span class="string">&#x27;&#x27;</span> -e <span class="string">&#x27;3i \</span></span><br><span class="line"><span class="string">      &#x27;</span><span class="variable">$&#123;updated&#125;</span> <span class="variable">$&#123;filename&#125;</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h1 id="跳过渲染"><a href="#跳过渲染" class="headerlink" title="跳过渲染"></a>跳过渲染</h1><h2 id="修改-config-yml-1"><a href="#修改-config-yml-1" class="headerlink" title="修改_config_yml"></a>修改<code>_config_yml</code></h2><p><code>blog/_config.yml</code>:</p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">skip_render:</span></span><br><span class="line"> <span class="bullet">-</span> <span class="string">&#x27;_post/*.html&#x27;</span></span><br></pre></td></tr></table></figure><h1 id="shiyong"><a href="#shiyong" class="headerlink" title="shiyong"></a>shiyong</h1><h2 id="插入图片"><a href="#插入图片" class="headerlink" title="插入图片"></a>插入图片</h2><h3 id="hexo自带功能-不建议使用"><a href="#hexo自带功能-不建议使用" class="headerlink" title="hexo自带功能(不建议使用)"></a>hexo自带功能(不建议使用)</h3><p><a href="https://blog.csdn.net/Sugar_Rainbow/article/details/57415705">CSDN</a></p><blockquote><p><code>npm</code>包是否需要安装不知道</p></blockquote><ol><li><p>post_asset_folder: false</p></li><li><p>relative_link: true</p></li><li><p>图片命名不需要任何路径前缀</p></li><li><p><code>hexo g</code></p></li></ol><h3 id="在source放置图片"><a href="#在source放置图片" class="headerlink" title="在source放置图片"></a>在<code>source</code>放置图片</h3><ol><li><p>在<code>source</code>里创建<code>img</code>文件夹,把图片放到这个文件夹里面</p></li><li><p>调用图片</p><ul><li><code>&lt;img src=&quot;/img/name.png&quot;&gt;</code></li><li><code>&lt;embed src=&quot;/img/name.png&quot;&gt;</code></li><li><code>![](/img/name.png)</code></li></ul></li></ol><h2 id="搜索功能-只适用Next主题"><a href="#搜索功能-只适用Next主题" class="headerlink" title="搜索功能(只适用Next主题)"></a>搜索功能(只适用Next主题)</h2><p><a href="https://blog.csdn.net/ganzhilin520/article/details/79047983">CSDN</a></p><h2 id="新建页面"><a href="#新建页面" class="headerlink" title="新建页面"></a>新建页面</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo n page <span class="string">&quot;name&quot;</span></span><br></pre></td></tr></table></figure><p><code>blog/theme/next/_config.yml</code></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">menu:</span><br><span class="line">  menu_name: position || icon_name</span><br></pre></td></tr></table></figure><h2 id="自定义端口"><a href="#自定义端口" class="headerlink" title="自定义端口"></a>自定义端口</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo s -p 99999999</span><br></pre></td></tr></table></figure><p>局域网访问:<code>$&#123;IP&#125;:$port</code></p><h2 id="急救-待定"><a href="#急救-待定" class="headerlink" title="急救(待定)"></a>急救(待定)</h2><ul><li>显示<code>Cannot GET /</code></li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo npm install</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jsdelivr笔记</title>
      <link href="/2019/02/24/jsdelivr%E7%AC%94%E8%AE%B0/"/>
      <url>/2019/02/24/jsdelivr%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="文件路径-public"><a href="#文件路径-public" class="headerlink" title="文件路径(public)"></a>文件路径(public)</h2><h3 id="未发布的文件"><a href="#未发布的文件" class="headerlink" title="未发布的文件"></a>未发布的文件</h3><p>github:</p><ul><li><code>https://github.com/NiaBie/repository_name/blob/master/path_to_your_file</code></li></ul><p>或</p><ul><li><code>https://github.com/NiaBie/repository_name/blob/master/path_to_your_file</code></li></ul><p>暂时没有弄清楚<code>blob</code>和<code>tree</code>的区别</p><p>jsdelivr:</p><ul><li><code>https://cdn.jsdelivr.net/gh/NiaBie/repository_name/path_to_your_file</code></li></ul><p>或</p><ul><li><code>https://cdn.jsdelivr.net/gh/NiaBie/repository_name@branch/path_to_your_file</code></li></ul><h2 id="release后的文件"><a href="#release后的文件" class="headerlink" title="release后的文件"></a>release后的文件</h2><p>github:</p><ul><li><code>https://github.com/NiaBie/repository_name@version/path_to_your_file</code></li></ul><p>jsdelivr:</p><ul><li><code>https://cdn.jsdelivr.net/gh/NiaBie/repository_name@version/path_to_your_file</code></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> git </tag>
            
            <tag> hexo </tag>
            
            <tag> jsdelivr </tag>
            
            <tag> jquery </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vundle笔记</title>
      <link href="/2019/02/20/vundle%E7%AC%94%E8%AE%B0/"/>
      <url>/2019/02/20/vundle%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h2><p>现在官方推荐使用<code>PluginXX</code>,不再推荐使用<code>Bundle</code>,而且原先是<code>call vundle#rc</code>,现在是<code>call vundle#begin()</code>和<code>call vundle#end()</code></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">:PluginList &quot;列举出已经安装的所有插件</span><br><span class="line">:PluginInstall &quot;安装列表中全部插件</span><br><span class="line">:PluginInstall! &quot;更新列表中全部插件</span><br><span class="line">:PluginSearch foo &quot;查找foo插件</span><br><span class="line">:PluginSearch! foo &quot;刷新foo插件缓存</span><br><span class="line">:PluginClean &quot;清除(vundle)列表中没有的插件</span><br><span class="line">:PluginClean! &quot;(慎用)会将vim-plug的插件清除</span><br></pre></td></tr></table></figure><ul><li><a href="https://blog.csdn.net/zhangpower1993/article/details/52184581">vimrc</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> vim </tag>
            
            <tag> vundle </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ubuntu配置sublime</title>
      <link href="/2019/02/20/ubuntu%E9%85%8D%E7%BD%AEsublime/"/>
      <url>/2019/02/20/ubuntu%E9%85%8D%E7%BD%AEsublime/</url>
      
        <content type="html"><![CDATA[<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a><a href="https://www.sublimetext.com/docs/3/linux_repositories.html">安装</a></h2><p>Install the GPG key:</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -qO - https://download.sublimetext.com/sublimehq-pub.gpg | sudo apt-key add -</span><br></pre></td></tr></table></figure><p>Ensure apt is set up to work with https sources:</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get install apt-transport-https</span><br></pre></td></tr></table></figure><p>Select the channel to use:</p><ul><li>Stable</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;deb https://download.sublimetext.com/ apt/stable/&quot;</span> | sudo tee /etc/apt/sources.list.d/sublime-text.list</span><br></pre></td></tr></table></figure><ul><li>Dev</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;deb https://download.sublimetext.com/ apt/dev/&quot;</span> | sudo tee /etc/apt/sources.list.d/sublime-text.list</span><br></pre></td></tr></table></figure><p>Update apt sources and install Sublime Text</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install sublime-text</span><br></pre></td></tr></table></figure><h3 id="sublime-merge"><a href="#sublime-merge" class="headerlink" title="sublime-merge"></a><a href="https://www.sublimemerge.com/docs/linux_repositories">sublime-merge</a></h3><p>在之前的基础上</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get install sublime-merge</span><br></pre></td></tr></table></figure><h2 id="不能输入中文"><a href="#不能输入中文" class="headerlink" title="不能输入中文"></a>不能输入中文</h2><h3 id="在终端输入subl后能输入中文"><a href="#在终端输入subl后能输入中文" class="headerlink" title="在终端输入subl后能输入中文"></a>在终端输入<code>subl</code>后能输入中文</h3><p><a href="https://www.jianshu.com/p/bf05fb3a4709">简书</a></p><h3 id="固定到收藏夹"><a href="#固定到收藏夹" class="headerlink" title="固定到收藏夹"></a>固定到收藏夹</h3><p>参考:<a href="https://blog.csdn.net/jpch89/article/details/81739176">CSDN</a></p><p>创建<code>sublime.sh</code>:</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">LD_PRELOAD=/opt/sublime_text/libsublime-imfix.so subl</span><br></pre></td></tr></table></figure><p>创建<code>my_sublime.desktop</code>:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[Desktop Entry]</span><br><span class="line">Name &#x3D; my_sublime</span><br><span class="line">Icon &#x3D; 还没有</span><br><span class="line">Type &#x3D; Application</span><br><span class="line">Exec &#x3D; path_to&#x2F;sublime.sh</span><br></pre></td></tr></table></figure><p>修改<code>my_sublime.desktop</code>的权限,然后</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo cp my_sublime.desktop /usr/share/applications/</span><br></pre></td></tr></table></figure><p>将<code>my_sublime</code>添加到收藏夹</p><h2 id="latex"><a href="#latex" class="headerlink" title="latex"></a>latex</h2><ol><li><p>安装texlive</p></li><li><p>安装latex-tools</p></li><li><p><code>Preference</code>$\to$<code>Packages Settings</code>$\to$<code>LaTeXTools</code></p></li></ol><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&quot;linux&quot; : &#123;</span><br><span class="line">    &#x2F;&#x2F; Path used when invoking tex &amp; friends; MUST include $PATH</span><br><span class="line">    &quot;texpath&quot; : &quot;$PATH:&#x2F;usr&#x2F;local&#x2F;texlive&#x2F;2018&#x2F;bin&#x2F;x86_64-linux&quot;,</span><br><span class="line">          &#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>如果编译错误,在<code>latex</code>语法下按<code>ctrl</code>+<code>shift</code>+<code>b</code>选择用<code>xelatex</code>编译</li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> sublime </tag>
            
            <tag> ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>远程控制</title>
      <link href="/2019/02/17/ssh%E7%AC%94%E8%AE%B0/"/>
      <url>/2019/02/17/ssh%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="本地局域网ssh"><a href="#本地局域网ssh" class="headerlink" title="本地局域网ssh"></a>本地局域网<code>ssh</code></h1><h2 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h2><ul><li>准备</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get install openssh-server</span><br><span class="line">sudo apt-get install net-tools</span><br><span class="line">sudo ifconfig</span><br></pre></td></tr></table></figure><ul><li><p>配置文件(修改<code>ssh</code>端口号):<code>/etc/ssh/sshd_config</code></p></li><li><p>检查</p></li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">netstat -tlp</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ps -e | grep ssh</span><br></pre></td></tr></table></figure><ul><li>运行图形界面程序</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh -X lynx@192.168.1.100</span><br></pre></td></tr></table></figure><h2 id="mac"><a href="#mac" class="headerlink" title="mac"></a>mac</h2><p><code>设置</code>$\to$<code>共享</code>$\to$<code>远程登录</code></p><h2 id="termux"><a href="#termux" class="headerlink" title="termux"></a>termux</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pkg install openssh</span><br><span class="line">sshd</span><br><span class="line">sshd -p 22222</span><br><span class="line">whoami</span><br><span class="line">passwd</span><br></pre></td></tr></table></figure><h2 id="windows"><a href="#windows" class="headerlink" title="windows"></a><del>windows</del></h2><ul><li>安装<code>freeSSHd</code></li><li><code>Users</code>$\to$<code>Add</code>,设置密码</li><li>开启<code>Shell</code>等</li><li>powershell:<code>ipconfig</code></li></ul><blockquote><p>windows真他妈没卵用</p></blockquote><h1 id="外网ssh访问公网ip"><a href="#外网ssh访问公网ip" class="headerlink" title="外网ssh访问公网ip"></a>外网<code>ssh</code>访问公网ip</h1><p>必须保证wlan分配的ip为公网ip:<code>ip138.com</code>上与<code>上网设置</code>中的ip地址要一致</p><h2 id="Linux-1"><a href="#Linux-1" class="headerlink" title="Linux"></a>Linux</h2><h3 id="配置路由-tp-link"><a href="#配置路由-tp-link" class="headerlink" title="配置路由(tp-link)"></a>配置路由(tp-link)</h3><ol><li><p>在<code>192.186.1.1</code>安装<code>虚拟服务器</code>应用</p></li><li><p>端口映射</p></li></ol><table><thead><tr><th align="center">外部端口</th><th align="center">内部端口</th><th align="center">ip地址</th><th align="center">协议类型</th></tr></thead><tbody><tr><td align="center">用于外网访问的端口</td><td align="center">进程的实际端口,ssh默认为22</td><td align="center">局域网ip</td><td align="center"><code>ALL</code></td></tr></tbody></table><h3 id="连接内网"><a href="#连接内网" class="headerlink" title="连接内网"></a>连接内网</h3><ol><li>ubuntu查看外网ip</li></ol><p><strong>TODO</strong></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl ifconfig.me</span><br></pre></td></tr></table></figure><h1 id="外网访问私网ip"><a href="#外网访问私网ip" class="headerlink" title="外网访问私网ip"></a>外网访问私网ip</h1><h2 id="ngrok-内网穿透软件"><a href="#ngrok-内网穿透软件" class="headerlink" title="ngrok:内网穿透软件"></a>ngrok:内网穿透软件</h2><ol><li><p>注册ngrok账号</p></li><li><p><code>./ngrok authtoken ***</code></p></li><li><p><code>./ngrok tcp 80</code>(例)</p></li><li><p>另一台电脑<code>./ssh -X lynx@***.ngrok.io -p ***</code>,端口在<code>Status</code>查看</p></li></ol><p>nat123:<strong>TODO</strong><br>teamviewer</p>]]></content>
      
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> ssh </tag>
            
            <tag> windows </tag>
            
            <tag> mac </tag>
            
            <tag> termux </tag>
            
            <tag> 内网穿透 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git免验证</title>
      <link href="/2019/02/17/git%E5%85%8D%E9%AA%8C%E8%AF%81/"/>
      <url>/2019/02/17/git%E5%85%8D%E9%AA%8C%E8%AF%81/</url>
      
        <content type="html"><![CDATA[<h2 id="法一"><a href="#法一" class="headerlink" title="法一"></a>法一</h2><p><a href="https://williamlfang.github.io/post/2018-09-05-github%E4%BD%BF%E7%94%A8ssh%E5%85%8D%E5%AF%86%E7%A0%81%E7%99%BB%E5%BD%95/">详细</a></p><ol><li><p>设置全局</p></li><li><p>生成ssh key</p></li></ol><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;1197225628@qq.com&quot;</span></span><br></pre></td></tr></table></figure><ol start="3"><li><p>github.com$\to$<code>Settings</code>$\to$<code>SSH and GPG keys</code>$\to$<code>New SSH key</code>,将<code>./.ssh/id_rsa.pub</code>中的文本复制过去</p></li><li><p>检查</p></li></ol><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><ol start="5"><li>不知道怎么办了(修改remote为ssh?)</li></ol><h2 id="法二"><a href="#法二" class="headerlink" title="法二"></a>法二</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config --global credential.helper store</span><br></pre></td></tr></table></figure><p>取消自动保存(方便多个账号)</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config --global credential.helper <span class="string">&quot;&quot;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> git </tag>
            
            <tag> ssh </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>shell脚本笔记</title>
      <link href="/2019/02/16/shell%E8%84%9A%E6%9C%AC%E7%AC%94%E8%AE%B0/"/>
      <url>/2019/02/16/shell%E8%84%9A%E6%9C%AC%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="传参"><a href="#传参" class="headerlink" title="传参"></a>传参</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">zsh ./fuck.sh <span class="variable">$1</span> <span class="variable">$2</span> <span class="variable">$3</span> ...</span><br></pre></td></tr></table></figure><h2 id="赋值"><a href="#赋值" class="headerlink" title="赋值"></a>赋值</h2><ul><li>不要加空格</li></ul><h2 id="if"><a href="#if" class="headerlink" title="if"></a>if</h2><p>示例:</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$&#123;message&#125;</span>&quot;</span>x = x ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;equal&quot;</span></span><br><span class="line"><span class="keyword">elif</span> [ <span class="string">&quot;<span class="variable">$&#123;message&#125;</span>&quot;</span>x = <span class="string">&quot;shitx&quot;</span> ] || [ <span class="string">&quot;<span class="variable">$&#123;message&#125;</span>&quot;</span>x = <span class="string">&quot;SHIT&quot;</span> ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;shit&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;fuck&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><ul><li>注意<code>[``]</code>的空格和关系运算符的空格</li><li>注意字符串比较时为空的情况</li><li><a href="https://www.jb51.net/article/56553.htm">更多</a></li></ul><h2 id="for"><a href="#for" class="headerlink" title="for"></a>for</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h2 id="while"><a href="#while" class="headerlink" title="while"></a>while</h2><p>一个修改缩进的脚本</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">line_num=$(wc -l <span class="variable">$1</span>)</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;line_num&#125;</span></span><br><span class="line">i=0</span><br><span class="line"><span class="keyword">while</span> [ <span class="variable">$&#123;line_num:$&#123;i&#125;</span>:1&#125; != <span class="string">&quot; &quot;</span> ]</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">  ((i++))<span class="comment"># 寻找空格</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">line_num=<span class="variable">$&#123;line_num:0:$&#123;i&#125;</span>&#125;</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;line_num&#125;</span></span><br><span class="line">version=$(uname)</span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$&#123;version&#125;</span>&quot;</span> = <span class="string">&quot;Linux&quot;</span> ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">  sed -i <span class="string">&#x27;s/\t/  /g&#x27;</span> <span class="variable">$1</span></span><br><span class="line">  sed -i <span class="string">&#x27;s/  / /g&#x27;</span> <span class="variable">$1</span></span><br><span class="line"><span class="keyword">elif</span> [ <span class="string">&quot;<span class="variable">$&#123;version&#125;</span>&quot;</span> = <span class="string">&quot;Darwin&quot;</span> ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">  sed -i <span class="string">&#x27;&#x27;</span> <span class="string">&#x27;s/&lt;C-v&gt;&lt;tab&gt;/  /g&#x27;</span> <span class="variable">$1</span> <span class="comment">#这个地方指按下ctrl+v,然后再按一下tab,输出tab字符</span></span><br><span class="line">  sed -i <span class="string">&#x27;&#x27;</span> <span class="string">&#x27;s/  / /g&#x27;</span> <span class="variable">$1</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><ul><li><a href="http://www.cnblogs.com/iloveyoucc/archive/2012/07/11/2585559.html">变量自增的方法</a></li></ul><h2 id="字符串处理"><a href="#字符串处理" class="headerlink" title="字符串处理"></a>字符串处理</h2><p><a href="http://www.cnblogs.com/chengmo/archive/2010/10/02/1841355.html">cnblogs</a></p><h2 id="sed"><a href="#sed" class="headerlink" title="sed"></a>sed</h2><h3 id="mac-FreeBSD"><a href="#mac-FreeBSD" class="headerlink" title="mac(FreeBSD)"></a>mac(FreeBSD)</h3><p>示例</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed -i <span class="string">&#x27;&#x27;</span> -e <span class="string">&#x27;4a\</span></span><br><span class="line"><span class="string">&#x27;</span><span class="variable">$&#123;message&#125;</span> <span class="variable">$&#123;filename&#125;</span></span><br></pre></td></tr></table></figure><p>或</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed -i <span class="string">&#x27;&#x27;</span> -e <span class="string">&#x27;4a\</span></span><br><span class="line"><span class="string">shit&#x27;</span> <span class="variable">$&#123;filename&#125;</span></span><br></pre></td></tr></table></figure><h3 id="linux"><a href="#linux" class="headerlink" title="linux"></a>linux</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed -i <span class="string">&#x27;4a\shit&#x27;</span> <span class="variable">$&#123;filename&#125;</span></span><br></pre></td></tr></table></figure><p>或</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed -i <span class="string">&#x27;4a\&#x27;</span><span class="variable">$&#123;message&#125;</span> <span class="variable">$&#123;filename&#125;</span></span><br></pre></td></tr></table></figure><p><a href="https://www.cnblogs.com/ggjucheng/archive/2013/01/13/2856901.html">参数</a></p><h2 id="计算字符长度"><a href="#计算字符长度" class="headerlink" title="计算字符长度"></a>计算字符长度</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="variable">$&#123;#string&#125;</span></span><br></pre></td></tr></table></figure><h2 id="sleep"><a href="#sleep" class="headerlink" title="sleep"></a>sleep</h2><h2 id="read"><a href="#read" class="headerlink" title="read"></a>read</h2><h2 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sh=()</span><br><span class="line">sh+=(1)</span><br><span class="line">sh+=(2)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="variable">$sh</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="variable">$i</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>grub2启动windows</title>
      <link href="/2019/02/13/grub2%E5%90%AF%E5%8A%A8windows/"/>
      <url>/2019/02/13/grub2%E5%90%AF%E5%8A%A8windows/</url>
      
        <content type="html"><![CDATA[<h2 id=""><a href="#" class="headerlink" title="??"></a>??</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">set</span> root=<span class="string">&#x27;hd0,1&#x27;</span></span><br><span class="line">chainloader +1</span><br></pre></td></tr></table></figure><blockquote><p>hd后的数字视具体情况而定</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> windows </tag>
            
            <tag> grub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ubuntu安装texlive</title>
      <link href="/2019/02/13/ubuntu%E5%AE%89%E8%A3%85texlive/"/>
      <url>/2019/02/13/ubuntu%E5%AE%89%E8%A3%85texlive/</url>
      
        <content type="html"><![CDATA[<h2 id="安装texlive"><a href="#安装texlive" class="headerlink" title="安装texlive"></a>安装texlive</h2><p><a href="https://mirrors.tuna.tsinghua.edu.cn/CTAN/systems/texlive/Images/">清华镜像</a></p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get install perl-tk</span><br><span class="line">sudo mount -o loop texlive.iso /mnt</span><br><span class="line"><span class="built_in">cd</span> /mnt</span><br><span class="line">sudo ./install-tl -gui</span><br></pre></td></tr></table></figure><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>.bashrc/.zshrc添加</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">PATH&#x3D;$PATH:&#x2F;usr&#x2F;local&#x2F;texlive&#x2F;2018&#x2F;bin&#x2F;x86_64-linux</span><br></pre></td></tr></table></figure><p>其余见<a href="https://niabie.github.io/2019/02/13/mactex%E9%85%8D%E7%BD%AE/">mactex配置</a>,pdf打开方式<code>open - a Preview.app</code>$\to$<code>evince</code></p>]]></content>
      
      
      
        <tags>
            
            <tag> latex </tag>
            
            <tag> ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mactex配置</title>
      <link href="/2019/02/13/mactex%E9%85%8D%E7%BD%AE/"/>
      <url>/2019/02/13/mactex%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h2 id="mac安装gvim"><a href="#mac安装gvim" class="headerlink" title="mac安装gvim"></a>mac安装gvim</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">brew install macvim</span><br></pre></td></tr></table></figure><p>转移.gvimrc</p><h2 id="安装vim-latex"><a href="#安装vim-latex" class="headerlink" title="安装vim-latex"></a>安装vim-latex</h2><p>自行从<code>sourceforge</code>下载</p><h3 id="修改配置"><a href="#修改配置" class="headerlink" title="修改配置"></a>修改配置</h3><blockquote><p>~/.vim/ftplugin/latex-suite/texrc</p></blockquote><ul><li><p>默认生成格式<code>dvi</code>$\to$<code>pdf</code></p></li><li><p>默认调用的编译程序<code>pdflatex</code>$\to$<code>xelatex</code></p></li><li><p>默认<code>pdf</code>查看程序<code>xpdf</code>$\to$<code>open</code></p></li></ul><p><a href="https://blog.csdn.net/iscape/article/details/6880957">CSDN</a></p><h2 id="vimrc"><a href="#vimrc" class="headerlink" title="vimrc"></a>vimrc</h2><h3 id="启用vim-latex"><a href="#启用vim-latex" class="headerlink" title="启用vim-latex"></a>启用<code>vim-latex</code></h3><p><a href="https://www.jianshu.com/p/fde4e8fbb049">简书</a></p><h3 id="解决-lv报错"><a href="#解决-lv报错" class="headerlink" title="解决\lv报错"></a>解决<code>\lv</code>报错</h3><p><a href="https://sourceforge.net/p/vim-latex/mailman/message/25265559/">sourceforge</a></p><blockquote><p>In Vim, just type <code>:echo(has(&quot;unix&quot;))</code> and <code>:echo(has(&quot;macunix&quot;))</code> to check the value of these settings. The Mac OS X bundled Vim declares itself only as unix, while MacVim declares itself as both unix and macunix. MacVim is also compiled with more options, like ruby support, and it provides a GUI (the VimLatex menus can be handy) and better OS integration (like simple copy/paste between Vim and other apps). But make sure to use the latest snapshot on Snow Leopard, as the stable is not stable :)</p></blockquote><blockquote><p>Generally, its better to set options in .vimrc (in your home folder) than modifying vim-latex itself, since that makes updating vim-latex easier. Just put</p></blockquote><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">let g:Tex_ViewRule_pdf &#x3D; &#39;open -a Preview.app&#39; </span><br></pre></td></tr></table></figure><blockquote><p>in your $HOME/.vimrc (~/.vimrc that is). If you need to detect mac (say you want to sync the .vimrc between different computers), don’t rely on has(“macunix”), but use something like this:</p></blockquote><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">if has(&quot;unix&quot;) &amp;&amp; match(system(&quot;uname&quot;),&#39;Darwin&#39;) !&#x3D; -1</span><br><span class="line">    &quot; It&#39;s a Mac!</span><br><span class="line">    let g:Tex_ViewRule_pdf &#x3D; &#39;open -a Preview.app&#39; </span><br><span class="line">endif      </span><br></pre></td></tr></table></figure><blockquote><p>Dan Michael</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> vim </tag>
            
            <tag> latex </tag>
            
            <tag> mac </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pip笔记</title>
      <link href="/2019/02/13/pip%E7%AC%94%E8%AE%B0/"/>
      <url>/2019/02/13/pip%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h2><ul><li><code>-m</code></li></ul><p><a href="https://www.cnblogs.com/xtt-w/p/6085646.html">cnblogs</a></p><h2 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pip uninstall <span class="variable">$file</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> pip </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python之sklearn</title>
      <link href="/2019/02/12/python%E4%B9%8Bsklearn/"/>
      <url>/2019/02/12/python%E4%B9%8Bsklearn/</url>
      
        <content type="html"><![CDATA[<h2 id="NumPy"><a href="#NumPy" class="headerlink" title="NumPy"></a>NumPy</h2><h3 id="ndarray"><a href="#ndarray" class="headerlink" title="ndarray"></a>ndarray</h3><ul><li>切片</li></ul><p><a href="http://www.runoob.com/numpy/numpy-ndexing-and-slicing.html">菜鸟教程</a></p><ul><li>平均值<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">a.mean()</span><br></pre></td></tr></table></figure></li></ul><h2 id="模块导入"><a href="#模块导入" class="headerlink" title="模块导入"></a>模块导入</h2><ul><li>训练测试分离</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> train_test_split</span><br></pre></td></tr></table></figure><ul><li>可视化学习过程<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> learning_curve</span><br></pre></td></tr></table></figure></li></ul><h2 id="函数调用"><a href="#函数调用" class="headerlink" title="函数调用"></a>函数调用</h2><ul><li>均方误差评估</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">cross_val_score(knn, X, y, cv = <span class="number">10</span>, scoring = <span class="string">&#x27;neg_mean_squared_error&#x27;</span>)</span><br></pre></td></tr></table></figure><p>前4个参数视具体情况而定</p><h2 id="图像化工具matplotlib"><a href="#图像化工具matplotlib" class="headerlink" title="图像化工具matplotlib"></a>图像化工具<code>matplotlib</code></h2><ul><li>安装<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">python3 -m pip install matplotlib </span><br></pre></td></tr></table></figure></li></ul><h2 id="亂七八糟的問題"><a href="#亂七八糟的問題" class="headerlink" title="亂七八糟的問題"></a>亂七八糟的問題</h2><ul><li><p>ubuntu</p><ol><li><p><code>... return error code 1 ...</code></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get intall python3-matplotlib</span><br></pre></td></tr></table></figure></li><li><p><code>Consider using the &#39;--user&#39; option or check the permissions.</code></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">python -m pip install matplotlib --user</span><br></pre></td></tr></table></figure></li><li><p><code>No module named functools_lru_cache</code></p><p>取消注释原软件源</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get upgrade</span><br><span class="line">sudo apt-get install python-tk</span><br></pre></td></tr></table></figure></li></ol></li><li><p>mac</p><ol><li><p><code>Cannot uninstall &#39;numpy&#39;. It is a distutils installed project and thus we cannot accurately determine which files belong to it which would lead to only a partial uninstall.</code></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">python -m pip install sklearn --ignore-installed --user</span><br></pre></td></tr></table></figure></li></ol></li></ul><blockquote><p>有些平台安装部分模块不能通过pip安装?</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> numpy </tag>
            
            <tag> sklearn </tag>
            
            <tag> matplotlib </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>chrome配置</title>
      <link href="/2019/01/26/chrome%E9%85%8D%E7%BD%AE/"/>
      <url>/2019/01/26/chrome%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h2 id="常用插件"><a href="#常用插件" class="headerlink" title="常用插件"></a>常用插件</h2><ul><li><p>crxMouse Chrome</p></li><li><p>Free VPN</p></li><li><p>Adblock Plus</p></li></ul><h2 id="手动安装插件"><a href="#手动安装插件" class="headerlink" title="手动安装插件"></a>手动安装插件</h2><p><a href="https://jingyan.baidu.com/article/5552ef479b1e53518ffbc928.html">百度经验</a></p><h2 id="插件位置"><a href="#插件位置" class="headerlink" title="插件位置"></a>插件位置</h2><ul><li><p>Ubuntu:<code>~/.config/google-chrome/Default/Extensions</code></p></li><li><p>Windows<code>C:/Users/$Administrator/Appdata/Local/Google/Chrome/UserData/Default/Extensions</code></p></li><li><p>MacOSX:<code>./Users/$Administrator/Library/Application Support/Chrome/Default/Extensions</code></p><blockquote><p>不确定</p></blockquote></li></ul><h2 id="从qq浏览器转移过来"><a href="#从qq浏览器转移过来" class="headerlink" title="从qq浏览器转移过来"></a>从qq浏览器转移过来</h2><h3 id="qq浏览器插件位置"><a href="#qq浏览器插件位置" class="headerlink" title="qq浏览器插件位置"></a>qq浏览器插件位置</h3><ul><li><p>Windows<code>C:/Users/$Administrator/Appdata/Local/Tencent/QQBrowser/User Data/Default/Extensions</code></p></li><li><p>MacOSX:<code>./Users/$Administrator/Library/Application Support/QQBrowser2/Default/Extensions</code> </p></li></ul><h2 id="搜索引擎"><a href="#搜索引擎" class="headerlink" title="搜索引擎"></a>搜索引擎</h2><p><code>bing.com</code>:<code>https://cn.bing.com/search?q=%s&amp;go=%E6%8F%90%E4%BA%A4&amp;qs=n&amp;form=QBLH&amp;sp=-1&amp;pq=*&amp;sc=0-1&amp;sk=&amp;cvid=D05D5CA983874ACFBCFDB6645E6B646A</code></p><h2 id="允许跨域"><a href="#允许跨域" class="headerlink" title="允许跨域"></a>允许跨域</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">google-chrome --allow-file-access-from-files</span><br></pre></td></tr></table></figure><h2 id="chrome和chromium配置转移"><a href="#chrome和chromium配置转移" class="headerlink" title="chrome和chromium配置转移"></a><code>chrome</code>和<code>chromium</code>配置转移</h2><p><code>.config/google-chrome</code>和<code>.config/chromium</code></p>]]></content>
      
      
      
        <tags>
            
            <tag> chrome </tag>
            
            <tag> qqbrowser </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mac配置win10</title>
      <link href="/2019/01/22/mac%E9%85%8D%E7%BD%AEwin10/"/>
      <url>/2019/01/22/mac%E9%85%8D%E7%BD%AEwin10/</url>
      
        <content type="html"><![CDATA[<h2 id="启动盘制作软件"><a href="#启动盘制作软件" class="headerlink" title="启动盘制作软件"></a>启动盘制作软件</h2><ol><li><p>rufus</p></li><li><p>balena Etcher</p></li></ol><h2 id="系统偏好设置"><a href="#系统偏好设置" class="headerlink" title="系统偏好设置"></a>系统偏好设置</h2><p>启动磁盘</p>]]></content>
      
      
      
        <tags>
            
            <tag> windows </tag>
            
            <tag> mac </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ubuntu配置</title>
      <link href="/2019/01/22/ubuntu%E9%85%8D%E7%BD%AE/"/>
      <url>/2019/01/22/ubuntu%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><h2 id="SATA设置"><a href="#SATA设置" class="headerlink" title="SATA设置"></a>SATA设置</h2><p>Dell默认的是raid,在BIOS中改为AHCI再进行安装.如有安装windows,在调至AHCI前现在windows中用msconfig的引导中开启安全模式,调成AHCI后重启windows,然后取消安全模式</p><h2 id="分盘"><a href="#分盘" class="headerlink" title="分盘"></a>分盘</h2><ol><li>安装失败 </li></ol><ul><li><code>swap</code>:1024M,主分区</li><li><code>/</code>:10G,主分区</li><li><code>/boot</code>:128M,主分区</li><li><code>/home</code>:剩余,主分区</li></ul><ol start="2"><li>安装成功</li></ol><ul><li><code>swap</code>:4096M,逻辑分区</li><li><code>/</code>:剩余,主分区</li></ul><ol start="3"><li>未知</li></ol><ul><li><code>swap</code>:4096M,逻辑分区</li><li><code>/boot</code>:200M,主分区</li><li><code>/</code>:10G,主分区</li><li><code>/home</code>:剩余,逻辑分区</li></ul><ol start="4"><li>未知</li></ol><ul><li><code>/</code>:全部,主分区</li></ul><h1 id="系统设置"><a href="#系统设置" class="headerlink" title="系统设置"></a>系统设置</h1><h2 id="笔记本行为设定"><a href="#笔记本行为设定" class="headerlink" title="笔记本行为设定"></a>笔记本行为设定</h2><ul><li>合盖不休眠:<code>/etc/systemd/logind.conf</code></li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">HandleLidSwitch&#x3D;ignore</span><br></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/xiaoxiao133/article/details/82847936">CSDN</a></p><h2 id="密钥环"><a href="#密钥环" class="headerlink" title="密钥环"></a>密钥环</h2><ul><li>ubuntu 18.x</li></ul><p><code>密码和密钥</code>$\to$<code>默认密钥环</code>$\overset{\mbox{右键}}{\to}$<code>更改密码</code>$\to$空白</p><ul><li>ubuntu 19.x</li></ul><p><code>密码和密钥</code>$\to$<code>登录</code>$\overset{\mbox{右键}}{\to}$<code>更改密码</code>$\to$空白</p><h2 id="grub配置"><a href="#grub配置" class="headerlink" title="grub配置"></a>grub配置</h2><ul><li>位置</li></ul><p>/etc/default/grub</p><ul><li>内容修改</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">GRUB_DEFAULT&#x3D;saved</span><br><span class="line">GRUB_SAVEDEFAULT&#x3D;true</span><br></pre></td></tr></table></figure><ul><li>生效设置</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo grub-set-default 2</span><br><span class="line">sudo update-grub</span><br></pre></td></tr></table></figure><blockquote><p>数字任意</p></blockquote><h2 id="时间配置"><a href="#时间配置" class="headerlink" title="时间配置"></a>时间配置</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get install ntpdate</span><br><span class="line">sudo ntpdate time.windows.com</span><br><span class="line">sudo hwclock --localtime --systohc</span><br></pre></td></tr></table></figure><h2 id="gnome-shell-entensions"><a href="#gnome-shell-entensions" class="headerlink" title="gnome-shell-entensions"></a><code>gnome-shell-entensions</code></h2><ul><li><a href="https://www.sysgeek.cn/things-installing-ubuntu-18-10/">sysgeek</a></li><li><a href="https://linux.cn/article-9447-1.html">linux.cn</a></li></ul><h3 id="chrome扩展"><a href="#chrome扩展" class="headerlink" title="chrome扩展"></a>chrome扩展</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get install chrome-gnome-shell</span><br></pre></td></tr></table></figure><p><a href="https://chrome.google.com/webstore/detail/gnome-shell-integration/gphhapmejobijbbhgpjhcjognlahblep/related">chrome浏览器插件</a></p><h3 id="重启gnome-shell"><a href="#重启gnome-shell" class="headerlink" title="重启gnome-shell"></a>重启<code>gnome-shell</code></h3><p><code>alt+f2</code>$\to$<code>r</code></p><h3 id="extension位置"><a href="#extension位置" class="headerlink" title="extension位置"></a><code>extension</code>位置</h3><ul><li><code>~/.local/share/gnome-shell/extensions</code></li><li><code>/usr/share/gnome-shell/extensions</code></li></ul><h3 id="解决显示应用程序2个dock"><a href="#解决显示应用程序2个dock" class="headerlink" title="解决显示应用程序2个dock"></a>解决<code>显示应用程序</code>2个dock</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/share/gnome-shell/extensions</span><br><span class="line">sudo rm -rf ubuntu-dock@ubuntu.com</span><br></pre></td></tr></table></figure><h3 id="解决桌面图标在重启后乱序"><a href="#解决桌面图标在重启后乱序" class="headerlink" title="解决桌面图标在重启后乱序"></a>解决桌面图标在重启后乱序</h3><p>安装一个新的桌面图标扩展,关闭<code>gnome-tweaks</code>的桌面图标显示</p><h2 id="外观修改"><a href="#外观修改" class="headerlink" title="外观修改"></a>外观修改</h2><h3 id="修改登录背景图片"><a href="#修改登录背景图片" class="headerlink" title="修改登录背景图片"></a>修改登录背景图片</h3><p><code>/etc/alternatives/gdm3.css</code>:</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#lockDialogGroup</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">url</span>(file:///usr/share/backgrounds/Aatrox.jpg);</span><br><span class="line">  <span class="attribute">background-position</span>: center;</span><br><span class="line">  <span class="attribute">background-size</span>: cover; &#125;</span><br></pre></td></tr></table></figure><h3 id="默认开机动画"><a href="#默认开机动画" class="headerlink" title="默认开机动画"></a>默认开机动画</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo update-alternatives --config default.plymouth</span><br></pre></td></tr></table></figure><h3 id="修改开机动画"><a href="#修改开机动画" class="headerlink" title="修改开机动画"></a>修改开机动画</h3><p><a href="http://www.ubuntugeek.com/quick-tipplymouth-themes-in-ubuntu-10-04-lucid-lynx.html">ubuntugeek</a><br><a href="http://brej.org/blog/?cat=16">更多</a></p><ol><li>创建新文件夹</li></ol><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo mkdir /usr/share/plymouth/themes/myTheme</span><br></pre></td></tr></table></figure><ol start="2"><li><code>vi myTheme/myTheme.plymouth</code></li></ol><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[Plymouth Theme]</span><br><span class="line">Name&#x3D;MyTheme</span><br><span class="line">Description&#x3D;随你</span><br><span class="line">ModuleName&#x3D;script</span><br><span class="line"></span><br><span class="line">[script]</span><br><span class="line">ImageDir&#x3D;&#x2F;usr&#x2F;share&#x2F;plymouth&#x2F;themes&#x2F;myTheme</span><br><span class="line">ScriptFile&#x3D;&#x2F;usr&#x2F;share&#x2F;plymouth&#x2F;themes&#x2F;myTheme.script</span><br></pre></td></tr></table></figure><ol start="3"><li><p>复制<code>png</code>(必须)图片到<code>myTheme</code></p></li><li><p><code>vi myTheme/myTheme.script</code></p></li></ol><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">wallpaper_image &#x3D; Image(&quot;Aatrox_1080.png&quot;);</span><br><span class="line">screen_width &#x3D; Window.GetWidth();</span><br><span class="line">screen_height &#x3D; Window.GetHeight();</span><br><span class="line">resized_wallpaper_img &#x3D; wallpaper_image.Scale(screen_width, screen_height);</span><br><span class="line">wallpaper_sprite &#x3D; Sprite(resized_wallpaper_img);</span><br><span class="line">wallpaper_sprite.SetZ(-100);</span><br></pre></td></tr></table></figure><ol start="5"><li>安装主题</li></ol><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo update-alternatives --install /usr/share/plymouth/themes/default.plymouth default.plymouth /usr/share/plymouth/themes/myTheme/myTheme.plymouth 100</span><br><span class="line">sudo update-alternatives --config default.plymouth</span><br><span class="line">sudo update-initramfs -u</span><br></pre></td></tr></table></figure><h3 id="修改grub主题"><a href="#修改grub主题" class="headerlink" title="修改grub主题"></a>修改grub主题</h3><ol><li><code>/boot/grub/themes</code>文件夹创建</li><li>配置文件<code>/etc/grub.d/00_header</code>:</li></ol><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># You should have received a copy of the GNU General Public License</span><br><span class="line"># along with GRUB.  If not, see &lt;http:&#x2F;&#x2F;www.gnu.org&#x2F;licenses&#x2F;&gt;.</span><br><span class="line"></span><br><span class="line">GRUB_THEME&#x3D;&quot;&#x2F;boot&#x2F;grub&#x2F;themes&#x2F;Vimix&#x2F;theme.txt&quot;</span><br><span class="line">GRUB_GFXMODE&#x3D;&quot;1920x1080x32&quot;</span><br></pre></td></tr></table></figure><blockquote><p>可按照尺寸修改背景图片</p></blockquote><ol start="3"><li>更新配置</li></ol><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo update-grub</span><br></pre></td></tr></table></figure><h2 id="语言和文字"><a href="#语言和文字" class="headerlink" title="语言和文字"></a>语言和文字</h2><ul><li><p>对彩色表情的支持(TODO):</p><ul><li><code>fonts-noto-color-emoji</code></li><li><code>fonts-emojione</code></li></ul></li><li><p>对特定软件使用特定语言打开(不能已经打开其他窗口)</p></li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sh -c <span class="string">&quot;LANGUAGE=en /bin/chromium-browser %U&quot;</span></span><br></pre></td></tr></table></figure><ul><li><p>修改语言和编码</p><ul><li>位置:<code>/etc/default/locale</code></li><li>查看当前语言:<code>locale</code></li></ul></li><li><p><code>locale</code>备份</p></li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">LANG&#x3D;zh_CN.UTF-8</span><br><span class="line">LANGUAGE&#x3D;zh_CN:en_US:en</span><br><span class="line">LC_CTYPE&#x3D;&quot;zh_CN.UTF-8&quot;</span><br><span class="line">LC_NUMERIC&#x3D;&quot;zh_CN.UTF-8&quot;</span><br><span class="line">LC_TIME&#x3D;&quot;zh_CN.UTF-8&quot;</span><br><span class="line">LC_COLLATE&#x3D;&quot;zh_CN.UTF-8&quot;</span><br><span class="line">LC_MONETARY&#x3D;&quot;zh_CN.UTF-8&quot;</span><br><span class="line">LC_MESSAGES&#x3D;&quot;zh_CN.UTF-8&quot;</span><br><span class="line">LC_PAPER&#x3D;&quot;zh_CN.UTF-8&quot;</span><br><span class="line">LC_NAME&#x3D;&quot;zh_CN.UTF-8&quot;</span><br><span class="line">LC_ADDRESS&#x3D;&quot;zh_CN.UTF-8&quot;</span><br><span class="line">LC_TELEPHONE&#x3D;&quot;zh_CN.UTF-8&quot;</span><br><span class="line">LC_MEASUREMENT&#x3D;&quot;zh_CN.UTF-8&quot;</span><br><span class="line">LC_IDENTIFICATION&#x3D;&quot;zh_CN.UTF-8&quot;</span><br><span class="line">LC_ALL&#x3D;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> gnome </tag>
            
            <tag> grub </tag>
            
            <tag> mac </tag>
            
            <tag> ubuntu </tag>
            
            <tag> hyper </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo插入latex公式</title>
      <link href="/2019/01/22/hexo%E6%8F%92%E5%85%A5latex%E5%85%AC%E5%BC%8F/"/>
      <url>/2019/01/22/hexo%E6%8F%92%E5%85%A5latex%E5%85%AC%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<h1 id="mathjax"><a href="#mathjax" class="headerlink" title="mathjax"></a>mathjax</h1><p><a href="http://catx.me/2014/03/09/hexo-mathjax-plugin">参考</a></p><h2 id="使用官方cdn-完整版功能-但是写latex公式可能不会都用到"><a href="#使用官方cdn-完整版功能-但是写latex公式可能不会都用到" class="headerlink" title="使用官方cdn(完整版功能,但是写latex公式可能不会都用到)"></a>使用官方cdn(完整版功能,但是写latex公式可能不会都用到)</h2><p>标准使用,<code>layout</code>中插入</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcss.com/mathjax/2.7.1/latest.js?config=TeX-AMS-MML_HTMLorMML&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/x-mathjax-config&quot;</span>&gt;</span></span><br><span class="line"><span class="javascript">  $(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span></span></span><br><span class="line">  &#123;</span><br><span class="line">    MathJax.Hub.Config(</span><br><span class="line">    &#123;</span><br><span class="line">      tex2jax:</span><br><span class="line">      &#123;</span><br><span class="line">        inlineMath: [</span><br><span class="line"><span class="javascript">          [<span class="string">&#x27;$&#x27;</span>, <span class="string">&#x27;$&#x27;</span>]</span></span><br><span class="line">        ],</span><br><span class="line"><span class="javascript">        processEscapes: <span class="literal">true</span>,</span></span><br><span class="line"><span class="javascript">        skipTags: [<span class="string">&#x27;script&#x27;</span>, <span class="string">&#x27;noscript&#x27;</span>, <span class="string">&#x27;style&#x27;</span>, <span class="string">&#x27;textarea&#x27;</span>, <span class="string">&#x27;pre&#x27;</span>, <span class="string">&#x27;code&#x27;</span>]</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line"><span class="javascript">    MathJax.Hub.Queue(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)// 重新渲染</span></span></span><br><span class="line"><span class="javascript">    &#123;<span class="comment">// 函数体内部不清楚作用</span></span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> all = MathJax.Hub.getAllJax(),</span></span><br><span class="line">      i;</span><br><span class="line"><span class="handlebars"><span class="xml">      for (i = 0; i <span class="tag">&lt; <span class="attr">all.length</span>; <span class="attr">i</span> += <span class="string">1)</span></span></span></span></span><br><span class="line">      &#123;</span><br><span class="line"><span class="javascript">        all[i].SourceElement().parentNode.className += <span class="string">&#x27; has-jax&#x27;</span>;</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="使用自建的tex2jax-删减版-目前只测试过latex公式"><a href="#使用自建的tex2jax-删减版-目前只测试过latex公式" class="headerlink" title="使用自建的tex2jax(删减版,目前只测试过latex公式)"></a>使用自建的tex2jax(删减版,目前只测试过latex公式)</h2><p><a href="https://docs.mathjax.org/en/latest/options/preprocessors/tex2jax.html">官方参考(tex2jax)</a></p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/x-mathjax-config&quot;</span>&gt;</span></span><br><span class="line">  MathJax.Hub.Config(&#123;</span><br><span class="line">    tex2jax: &#123;inlineMath: [</span><br><span class="line"><span class="javascript">      [<span class="string">&quot;$&quot;</span>,<span class="string">&quot;$&quot;</span>]</span></span><br><span class="line">    ]&#125;</span><br><span class="line">  &#125;);</span><br><span class="line"><span class="javascript">  MathJax.Hub.Queue([<span class="string">&quot;Typeset&quot;</span>, MathJax.Hub]);<span class="comment">// 重新渲染</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;../MathJax.js?config=TeX-AMS_HTML-full&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="katex"><a href="#katex" class="headerlink" title="katex"></a>katex</h1><h2 id="修改文章换行"><a href="#修改文章换行" class="headerlink" title="修改文章换行"></a>修改文章换行</h2><p>因为垃圾katex不能处理换行的公式,所以需要将所有<code>&lt;br&gt;</code>先删除再进行渲染</p><p>例如,将<code>&lt;br&gt;</code>先改成不可见字符<code>&amp;nbsp;</code>,然后渲染,再将<code>&amp;nbsp;</code>改回<code>&lt;br&gt;</code></p><p>katex代码</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">renderMathInElement(<span class="built_in">document</span>.body,</span><br><span class="line">&#123;</span><br><span class="line">  <span class="comment">// ...options...</span></span><br><span class="line">  delimiters: [</span><br><span class="line">    &#123; <span class="attr">left</span>: <span class="string">&quot;$$&quot;</span>, <span class="attr">right</span>: <span class="string">&quot;$$&quot;</span>, <span class="attr">display</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">left</span>: <span class="string">&quot;$&quot;</span>, <span class="attr">right</span>: <span class="string">&quot;$&quot;</span>, <span class="attr">display</span>: <span class="literal">false</span> &#125;</span><br><span class="line">    <span class="comment">// &#123; left: &quot;\\[&quot;, right: &quot;\\]&quot;, display: true &#125;</span></span><br><span class="line">  ]</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h1 id="hexo的markdown解析注意点"><a href="#hexo的markdown解析注意点" class="headerlink" title="hexo的markdown解析注意点"></a>hexo的markdown解析注意点</h1><ul><li>注意换行是<code>\\\\</code></li><li><code>&lt;</code>,<code>&gt;</code>两边记得加空格(如果<code>&lt;</code>之后直接接字母会被解析成html元素)</li><li>公式内部<code>_</code>转义:<code>\_</code></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> latex </tag>
            
            <tag> hexo </tag>
            
            <tag> mathjax </tag>
            
            <tag> katex </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sublime笔记</title>
      <link href="/2019/01/20/sublime%E7%AC%94%E8%AE%B0/"/>
      <url>/2019/01/20/sublime%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="windows"><a href="#windows" class="headerlink" title="windows"></a>windows</h2><ul><li><p>多行增加光标<code>ctrl</code>+<code>alt</code>+<code>up</code>/<code>down</code></p></li><li><p>多行同时生成光标<code>ctrl</code>+<code>shift</code>+<code>l</code></p></li><li><p>绑定<code>quartus</code></p></li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&quot;E:\Sublime Text 3\sublime_text.exe&quot; %f:%l</span><br></pre></td></tr></table></figure><ul><li><p>上次编辑位置<code>alt</code>+<code>-</code></p></li><li><p>括号匹配<code>ctrl</code>+<code>m</code></p></li></ul><h2 id="插件位置"><a href="#插件位置" class="headerlink" title="插件位置"></a>插件位置</h2><ul><li>windows:<code>C:/Users/$username/AppData/Roaming/Sublime Text 3/Packages</code></li><li>ubuntu:<code>/home/lynx/.config/sublime-text-3/Packages</code></li><li>mac:<code>/Users/lynx/Library/Application Support/Sublime Text 3/Packages</code></li></ul><h2 id="无法安装插件"><a href="#无法安装插件" class="headerlink" title="无法安装插件"></a>无法安装插件</h2><h3 id="安装package-control"><a href="#安装package-control" class="headerlink" title="安装package control"></a>安装package control</h3><ul><li>直接从github上考到Installed Packages</li><li>控制台安装(<strong>我觉得不行</strong>)</li></ul><h3 id="channel-v3-json地址"><a href="#channel-v3-json地址" class="headerlink" title="channel_v3.json地址"></a>channel_v3.json地址</h3><p>本地,jsdelivr,raw.github都可以.来源:</p><ul><li><a href="http://static.bolin.site/channel_v3.json">http://static.bolin.site/channel_v3.json</a></li></ul><p>在<code>package control</code>的设置文件中</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;channels&quot;</span>:</span><br><span class="line">    [</span><br><span class="line">    <span class="string">&quot;https://raw.githubusercontent.com/fayou147/GitOrder/master/json/channel_v3.json&quot;</span></span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="常用插件"><a href="#常用插件" class="headerlink" title="常用插件"></a>常用插件</h2><ul><li>LateXTools:<code>latex</code>编译</li><li>SublimeAstyleFormatter:格式化<code>c</code>/<code>java</code></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> sublime </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>cpp笔记</title>
      <link href="/2019/01/20/cpp%E7%AC%94%E8%AE%B0/"/>
      <url>/2019/01/20/cpp%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="二分搜索，默认升序"><a href="#二分搜索，默认升序" class="headerlink" title="二分搜索，默认升序"></a>二分搜索，默认升序</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">lower_bound(a,a + n,b,cmp)</span><br></pre></td></tr></table></figure><p>前闭后开<code>[first, last)</code>区间进行二分查找，返回大于或等于val的第一个元素位置<br>如果所有元素都小于val，则返回last的位置，且last的位置是越界的</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">upper_bound(a,a + n,b,cmp)</span><br></pre></td></tr></table></figure><p>返回序列<code>[first, last)</code>中的第一个大于值val的位置</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">binary_search(a,a + n,b,cmp)</span><br></pre></td></tr></table></figure><p>在已排序的<code>[first, last)</code>中寻找元素val，如果<code>[first, last)</code>内有等于val的元素，它会返回true，否则返回false，它不返回查找位置</p><h2 id="全排列，默认next升序"><a href="#全排列，默认next升序" class="headerlink" title="全排列，默认next升序"></a>全排列，默认next升序</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">next_permutation(a, a + n, b, cmp);</span><br><span class="line">prev_permutation(a, a + n, b, cmp);</span><br></pre></td></tr></table></figure><p>循环？</p><h2 id="运算符重载？"><a href="#运算符重载？" class="headerlink" title="运算符重载？"></a>运算符重载？</h2><h3 id="重载的例子（class之外）"><a href="#重载的例子（class之外）" class="headerlink" title="=重载的例子（class之外）"></a><code>=</code>重载的例子（<code>class</code>之外）</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">sb&amp; sb::<span class="keyword">operator</span>=(<span class="keyword">const</span> sb&amp; a)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">this</span> == &amp;a)</span><br><span class="line">    <span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">  x = a.y;</span><br><span class="line">  y = a.x;</span><br><span class="line">  <span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="重载"><a href="#重载" class="headerlink" title="==重载"></a><code>==</code>重载</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">bool</span> <span class="keyword">operator</span>==(sb a, sb b)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">if</span> (a.x == b.x&amp;&amp;a.y == b.y)</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="浮点数精度控制"><a href="#浮点数精度控制" class="headerlink" title="浮点数精度控制"></a>浮点数精度控制</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cout</span> &lt;&lt; fixed &lt;&lt; setprecision(<span class="number">9</span>) &lt;&lt; a &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; setiosflags(ios::scientific) &lt;&lt; setprecision(<span class="number">4</span>) &lt;&lt; a &lt;&lt; <span class="built_in">endl</span>;</span><br></pre></td></tr></table></figure><h2 id="vector使用"><a href="#vector使用" class="headerlink" title="vector使用"></a><code>vector</code>使用</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="built_in">vector</span> &lt;fuck&gt; edge[<span class="number">100</span>];</span><br><span class="line">edge[<span class="number">1</span>].push_back(temp);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; edge[<span class="number">1</span>].size(); i ++)</span><br><span class="line">&#123;</span><br><span class="line">  edge[<span class="number">1</span>].at(i).u = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">edge[<span class="number">1</span>].clear();</span><br></pre></td></tr></table></figure><h2 id="queue"><a href="#queue" class="headerlink" title="queue"></a><code>queue</code></h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">q.front();</span><br></pre></td></tr></table></figure><h3 id="priority-queue"><a href="#priority-queue" class="headerlink" title="priority_queue"></a><code>priority_queue</code></h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">vfuck</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  <span class="keyword">long</span> <span class="keyword">long</span> dis;</span><br><span class="line">&#125;vnode[<span class="number">50001</span>];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">cmp</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  <span class="function"><span class="keyword">bool</span> <span class="title">operator</span><span class="params">()</span><span class="params">(vfuck a, vfuck b)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a.dis &gt; b.dis;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="built_in">priority_queue</span> &lt;vfuck, <span class="built_in">vector</span>&lt;vfuck&gt;, cmp&gt; pq;<span class="comment">// 最小堆</span></span><br><span class="line"><span class="keyword">while</span> (pq.empty() == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">  tmp = pq.top();</span><br><span class="line">  pq.push(tmp);</span><br><span class="line">  pq.pop();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">path</span> &#123;</span></span><br><span class="line">  <span class="keyword">int</span> len;<span class="comment">// 长度</span></span><br><span class="line">  <span class="keyword">friend</span> <span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (path a, path b) &#123;<span class="comment">// 不能是 &gt;</span></span><br><span class="line">    <span class="keyword">return</span> a.len &gt; b.len;<span class="comment">// 最小堆</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">priority_queue</span> &lt;path&gt; paths;<span class="comment">// 最小堆</span></span><br></pre></td></tr></table></figure><h2 id="map"><a href="#map" class="headerlink" title="map"></a>map</h2><h3 id="赋值-输出"><a href="#赋值-输出" class="headerlink" title="赋值/输出"></a>赋值/输出</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="built_in">map</span> &lt;<span class="built_in">string</span>, <span class="keyword">int</span>&gt; fuck;</span><br><span class="line"><span class="built_in">map</span> &lt;<span class="built_in">string</span>, <span class="keyword">int</span>&gt;::iter;</span><br><span class="line"><span class="keyword">for</span> (iter = fuck.begin(); iter != fuck.end(); iter ++)</span><br><span class="line">&#123;</span><br><span class="line">  fuck[<span class="string">&quot;***&quot;</span>] = <span class="number">1</span>;</span><br><span class="line">  <span class="built_in">cout</span> &lt;&lt; iter-&gt;first &lt;&lt; iter-&gt;second;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><p><a href="https://www.cnblogs.com/fnlingnzb-learner/p/5833051.html">cnblog</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> cpp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>c笔记</title>
      <link href="/2019/01/20/c%E7%AC%94%E8%AE%B0/"/>
      <url>/2019/01/20/c%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="随机数"><a href="#随机数" class="headerlink" title="随机数"></a>随机数</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  srand((<span class="keyword">unsigned</span>)time(<span class="literal">NULL</span>)); </span><br><span class="line">  rand()%x;                 <span class="comment">//  取得(0,x)的随机整数：</span></span><br><span class="line">  rand()%(b - a);             <span class="comment">//  取得(a,b)的随机整数：</span></span><br><span class="line">  rand()%(b - a) + a;           <span class="comment">//  取得[a,b)的随机整数：</span></span><br><span class="line">  rand()%(b - a + <span class="number">1</span>) + a;         <span class="comment">//  取得[a,b]的随机整数：</span></span><br><span class="line">  rand()%(b - a) + a + <span class="number">1</span>;         <span class="comment">//  取得(a,b]的随机整数：</span></span><br><span class="line">  rand()/<span class="keyword">double</span>(RAND_MAX);  <span class="comment">//  取得0-1之间的浮点数：</span></span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="struct"><a href="#struct" class="headerlink" title="struct"></a>struct</h2><h3 id="strcut的声明"><a href="#strcut的声明" class="headerlink" title="strcut的声明"></a><a href="https://blog.csdn.net/dawn_after_dark/article/details/73555562">strcut的声明</a></h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 1</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> $<span class="title">struct_name</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  ...;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> $<span class="title">struct_name</span> $<span class="title">variable_name</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 2</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> $<span class="title">struct_name</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  ...;</span><br><span class="line">&#125;$struct_alias;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> $<span class="title">struct_name</span> $<span class="title">variable_name</span>;</span></span><br><span class="line">$struct_alias $variable_name;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 3</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> $<span class="title">struct_name</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  ...;</span><br><span class="line">&#125;$variable_name;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> $<span class="title">struct_name</span> $<span class="title">variable_name</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 4</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  ...;</span><br><span class="line">&#125;$variable_name;</span><br></pre></td></tr></table></figure><h3 id="struct的创建和初始化"><a href="#struct的创建和初始化" class="headerlink" title="struct的创建和初始化"></a><a href="https://blog.csdn.net/fuyufjh/article/details/46040095">struct的创建和初始化</a></h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> new(type, ...) (&#123;\</span></span><br><span class="line">       type* <span class="keyword">__t</span> = (type*) <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(type));\</span><br><span class="line">       *<span class="keyword">__t</span> = (type)&#123;__VA_ARGS__&#125;;\</span><br><span class="line">       <span class="keyword">__t</span>; &#125;)</span><br></pre></td></tr></table></figure><h2 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/types.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;regex.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> status, i;</span><br><span class="line">  <span class="keyword">int</span> cflags = REG_EXTENDED;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">regmatch_t</span> time_match[<span class="number">1</span>];</span><br><span class="line">  <span class="keyword">const</span> <span class="keyword">size_t</span> nmatch = <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">regex_t</span> reg;</span><br><span class="line">  <span class="keyword">const</span> <span class="keyword">char</span> *pattern = <span class="string">&quot;s&quot;</span>;</span><br><span class="line">  <span class="keyword">char</span> *buf = <span class="string">&quot;sdsdfdfdffdfdfdf&quot;</span>;</span><br><span class="line"></span><br><span class="line">  regcomp(&amp;reg, pattern, cflags);</span><br><span class="line">  status = regexec(&amp;reg, buf, nmatch, time_match, <span class="number">0</span>);</span><br><span class="line">  <span class="keyword">if</span> (status == REG_NOMATCH)</span><br><span class="line">    Log(<span class="string">&quot;No match&quot;</span>);</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> (status == <span class="number">0</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    Log(<span class="string">&quot;Match:&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (i = time_match[<span class="number">0</span>].rm_so; i &lt; time_match[<span class="number">0</span>].rm_eo; i ++)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">putchar</span>(buf[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">putchar</span>(<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  regfree(&amp;reg);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="画图"><a href="#画图" class="headerlink" title="画图"></a>画图</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;termios.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">draw_rect</span><span class="params">(<span class="keyword">int</span> color_num, <span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> w, <span class="keyword">int</span> h)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init_screen</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">move_cursor</span><span class="params">(<span class="keyword">int</span> direct_num, <span class="keyword">int</span> dis)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">enum</span> colors&#123;BLACK, RED, GREEN, YELLOW, BLUE, MAGENTA, CYAN, WHITE&#125;;</span><br><span class="line"><span class="keyword">enum</span> direct&#123;UP, DOWN, RIGHT, LEFT&#125;;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> height = <span class="number">30</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">int</span></span><br><span class="line">main()</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">char</span> position[<span class="number">32</span>];</span><br><span class="line">  system(<span class="string">&quot;tput clear&quot;</span>);</span><br><span class="line">  init_screen();</span><br><span class="line">  draw_rect(RED, <span class="number">7</span>, <span class="number">0</span>, <span class="number">5</span>, <span class="number">5</span>);</span><br><span class="line">  draw_rect(GREEN, <span class="number">17</span>, <span class="number">0</span>, <span class="number">5</span>, <span class="number">10</span>);</span><br><span class="line">  draw_rect(CYAN, <span class="number">0</span>, <span class="number">11</span>, <span class="number">20</span>, <span class="number">6</span>);</span><br><span class="line">  <span class="keyword">while</span> (<span class="number">1</span>);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">draw_rect</span><span class="params">(<span class="keyword">int</span> color_num, <span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> w, <span class="keyword">int</span> h)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">char</span> offset[<span class="number">16</span>];</span><br><span class="line">  move_cursor(RIGHT, x);</span><br><span class="line">  move_cursor(DOWN, y);</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; h; i ++)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; w; j ++)</span><br><span class="line">      <span class="keyword">switch</span> (color_num)</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">case</span> BLACK:</span><br><span class="line">          <span class="built_in">printf</span>(<span class="string">&quot;\033[40m \33[0m&quot;</span>);</span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> RED:</span><br><span class="line">          <span class="built_in">printf</span>(<span class="string">&quot;\033[41m \33[0m&quot;</span>);</span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> GREEN:</span><br><span class="line">          <span class="built_in">printf</span>(<span class="string">&quot;\033[42m \33[0m&quot;</span>);</span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> YELLOW:</span><br><span class="line">          <span class="built_in">printf</span>(<span class="string">&quot;\033[43m \33[0m&quot;</span>);</span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> BLUE:</span><br><span class="line">          <span class="built_in">printf</span>(<span class="string">&quot;\033[44m \33[0m&quot;</span>);</span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> MAGENTA:</span><br><span class="line">          <span class="built_in">printf</span>(<span class="string">&quot;\033[45m \33[0m&quot;</span>);</span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> CYAN:</span><br><span class="line">          <span class="built_in">printf</span>(<span class="string">&quot;\033[46m \33[0m&quot;</span>);</span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> WHITE:</span><br><span class="line">          <span class="built_in">printf</span>(<span class="string">&quot;\033[47m \33[0m&quot;</span>);</span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    move_cursor(RIGHT, x);</span><br><span class="line">  &#125;</span><br><span class="line">  move_cursor(LEFT, x + w);</span><br><span class="line">  move_cursor(UP, y + h);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">move_cursor</span><span class="params">(<span class="keyword">int</span> direct_num, <span class="keyword">int</span> dis)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; dis; i ++)</span><br><span class="line">    <span class="keyword">switch</span> (direct_num)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">case</span> UP:</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\033[A&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> DOWN:</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\033[B&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> RIGHT:</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\033[C&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> LEFT:</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\033[D&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init_screen</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; height; i ++)</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">  move_cursor(UP, height);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="信号处理"><a href="#信号处理" class="headerlink" title="信号处理"></a>信号处理</h2><ul><li><a href="http://www.runoob.com/cplusplus/cpp-signal-handling.html">菜鸟教程</a></li></ul><h2 id="mmap"><a href="#mmap" class="headerlink" title="mmap"></a>mmap</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">my_mmap</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *filename)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="class"><span class="keyword">struct</span> <span class="title">stat</span> <span class="title">sb</span>;</span><span class="comment">// statebuf</span></span><br><span class="line">  <span class="keyword">int</span> my_fd = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">char</span> *my_addr = <span class="literal">NULL</span>;<span class="comment">// mmap地址</span></span><br><span class="line"></span><br><span class="line">  my_fd = open(filename, O_RDONLY);<span class="comment">// 只读</span></span><br><span class="line">  <span class="keyword">if</span> (my_fd == <span class="number">-1</span>) &#123;</span><br><span class="line">    handle_error(<span class="string">&quot;open&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (fstat(my_fd, &amp;sb) == <span class="number">-1</span>) &#123;</span><br><span class="line">    handle_error(<span class="string">&quot;fstat&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  my_addr = mmap(</span><br><span class="line">      <span class="literal">NULL</span>, sb.st_size,<span class="comment">// size</span></span><br><span class="line">      PROT_READ,</span><br><span class="line">      MAP_PRIVATE,<span class="comment">// MAP_SHARED</span></span><br><span class="line">      my_fd,</span><br><span class="line">      <span class="number">0</span><span class="comment">// offset</span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="pthread"><a href="#pthread" class="headerlink" title="pthread"></a>pthread</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;assert.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;pthread.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;errno.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ctype.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> GREEN(format, ...) \</span></span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;\033[1;32m&quot;</span> format <span class="string">&quot;\33[0m\n&quot;</span>, ## __VA_ARGS__)</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> YELLOW(format, ...) \</span></span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;\033[1;33m&quot;</span> format <span class="string">&quot;\33[0m\n&quot;</span>, ## __VA_ARGS__)</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> RED(format, ...) \</span></span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;\033[1;31m[%s, %d]&quot;</span> format <span class="string">&quot;\33[0m\n&quot;</span>, __func__, __LINE__, ## __VA_ARGS__)</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAGENTA(format, ...) \</span></span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;\033[1;35m[%s]&quot;</span> format <span class="string">&quot;\33[0m\n&quot;</span>, __func__, ## __VA_ARGS__)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">thread_info</span> &#123;</span><span class="comment">// thread_start的参数</span></span><br><span class="line">  <span class="keyword">pthread_t</span> thread_id;<span class="comment">// 存放pthread_create的返回值(id)</span></span><br><span class="line">  <span class="keyword">int</span>       thread_num;<span class="comment">// 自己定义的线程号</span></span><br><span class="line">  <span class="keyword">char</span>     *argv_string;<span class="comment">// 命令行的字符串</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> *<span class="title">thread_start</span><span class="params">(<span class="keyword">void</span> *arg)</span></span>;</span><br><span class="line"><span class="comment">// display address near top of our stack, and return upper-cased copy of argv_string</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> num_threads;<span class="comment">// 线程数</span></span><br><span class="line">  <span class="class"><span class="keyword">struct</span> <span class="title">thread_info</span> *<span class="title">tinfo</span>;</span></span><br><span class="line">  <span class="keyword">pthread_attr_t</span> attr;<span class="comment">// 线程属性</span></span><br><span class="line">  <span class="keyword">void</span> *res;</span><br><span class="line"></span><br><span class="line">  num_threads = argc - optind;<span class="comment">// 线程数</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (pthread_attr_init(&amp;attr) != <span class="number">0</span>) &#123;<span class="comment">// 初始化线程属性</span></span><br><span class="line">    RED(<span class="string">&quot;pthread_attr_init&quot;</span>);</span><br><span class="line">    assert(<span class="number">0</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  tinfo = <span class="built_in">calloc</span>(num_threads, <span class="keyword">sizeof</span>(struct thread_info));<span class="comment">// 申请线程空间</span></span><br><span class="line">  <span class="keyword">if</span> (tinfo == <span class="literal">NULL</span>) &#123;</span><br><span class="line">    RED(<span class="string">&quot;calloc&quot;</span>);</span><br><span class="line">    assert(<span class="number">0</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; num_threads; i ++) &#123;</span><br><span class="line">    tinfo[i].thread_num = i;</span><br><span class="line">    tinfo[i].argv_string = argv[optind + i];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (pthread_create(&amp;tinfo[i].thread_id, &amp;attr,</span><br><span class="line">        &amp;thread_start, &amp;tinfo[i]) != <span class="number">0</span>) &#123;<span class="comment">// 创建线程</span></span><br><span class="line">      RED(<span class="string">&quot;pthread_create&quot;</span>);</span><br><span class="line">      assert(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (pthread_attr_destroy(&amp;attr) != <span class="number">0</span>) &#123;<span class="comment">// 删除线程属性</span></span><br><span class="line">    RED(<span class="string">&quot;pthread_attr_destroy&quot;</span>);</span><br><span class="line">    assert(<span class="number">0</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; num_threads; i++) &#123;</span><br><span class="line">    <span class="keyword">if</span> (pthread_join(tinfo[i].thread_id, &amp;res) != <span class="number">0</span>) &#123;<span class="comment">// 合并线程</span></span><br><span class="line">      RED(<span class="string">&quot;pthread_join&quot;</span>);</span><br><span class="line">    assert(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    GREEN(<span class="string">&quot;Joined with thread %d; returned value was %s&quot;</span>,</span><br><span class="line">        tinfo[i].thread_num, (<span class="keyword">char</span> *) res);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">free</span>(res);<span class="comment">// 释放结构体中字符串的空间</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="built_in">free</span>(tinfo);<span class="comment">// 释放线程空间</span></span><br><span class="line">  <span class="built_in">exit</span>(EXIT_SUCCESS);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> *<span class="title">thread_start</span><span class="params">(<span class="keyword">void</span> *arg)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="class"><span class="keyword">struct</span> <span class="title">thread_info</span> *<span class="title">tinfo</span> = <span class="title">arg</span>;</span><span class="comment">// &amp;tinfo[num]</span></span><br><span class="line">  <span class="keyword">char</span> *uargv, *p;</span><br><span class="line"></span><br><span class="line">  YELLOW(<span class="string">&quot;Thread %d: top of stack near %p; argv_string=%s&quot;</span>,</span><br><span class="line">      tinfo-&gt;thread_num, &amp;p, tinfo-&gt;argv_string);</span><br><span class="line"></span><br><span class="line">  uargv = strdup(tinfo-&gt;argv_string);<span class="comment">// 复制字符串(申请内存)</span></span><br><span class="line">  <span class="keyword">if</span> (uargv == <span class="literal">NULL</span>) &#123;</span><br><span class="line">    RED(<span class="string">&quot;strdup&quot;</span>);</span><br><span class="line">    assert(<span class="number">0</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> (p = uargv; *p != <span class="string">&#x27;\0&#x27;</span>; p++) &#123;<span class="comment">// 修改uargv</span></span><br><span class="line">    *p = <span class="built_in">toupper</span>(*p);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> uargv;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="简易http服务器"><a href="#简易http服务器" class="headerlink" title="简易http服务器"></a>简易http服务器</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;assert.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;netinet/in.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/socket.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">sockaddr_in</span> <span class="title">servaddr</span>;</span></span><br><span class="line"><span class="keyword">char</span> buf[<span class="number">4096</span>];</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span> *msg =</span><br><span class="line">  <span class="string">&quot;HTTP/1.1 200 OK\n&quot;</span></span><br><span class="line">  <span class="string">&quot;Content-Type: text/html\n&quot;</span></span><br><span class="line">  <span class="string">&quot;Content-Length: 48\n&quot;</span></span><br><span class="line">  <span class="string">&quot;\n&quot;</span></span><br><span class="line">  <span class="string">&quot;&lt;html&gt;&lt;body&gt;&lt;h1&gt;Hello, World!&lt;/h1&gt;&lt;/body&gt;&lt;/html&gt;\n&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">int</span> res, fd = socket(AF_INET, SOCK_STREAM, <span class="number">0</span>);</span><br><span class="line">  assert(fd != <span class="number">-1</span>);</span><br><span class="line">  servaddr.sin_family = AF_INET;</span><br><span class="line">  servaddr.sin_addr.s_addr = htonl(INADDR_ANY);</span><br><span class="line">  servaddr.sin_port = htons(<span class="number">8898</span>);</span><br><span class="line"></span><br><span class="line">  res = bind(fd, (struct sockaddr*)&amp;servaddr, <span class="keyword">sizeof</span>(servaddr));</span><br><span class="line">  <span class="keyword">if</span> (res == <span class="number">-1</span>) &#123; perror(<span class="string">&quot;cannot bind&quot;</span>); <span class="built_in">exit</span>(<span class="number">-1</span>); &#125;</span><br><span class="line"></span><br><span class="line">  listen(fd, <span class="number">10</span>);</span><br><span class="line">  <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">    <span class="keyword">int</span> conn = accept(fd, <span class="literal">NULL</span>, <span class="literal">NULL</span>);</span><br><span class="line">    <span class="keyword">if</span> (conn != <span class="number">-1</span>) &#123;</span><br><span class="line">      <span class="keyword">int</span> nread = recv(conn, buf, <span class="keyword">sizeof</span>(buf), <span class="number">0</span>);</span><br><span class="line">      send(conn, msg, <span class="built_in">strlen</span>(msg), <span class="number">0</span>);</span><br><span class="line">      close(conn);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  close(fd);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> c </tag>
            
            <tag> 正则表达式 </tag>
            
            <tag> http </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python笔记</title>
      <link href="/2019/01/20/python%E7%AC%94%E8%AE%B0/"/>
      <url>/2019/01/20/python%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="变量类型"><a href="#变量类型" class="headerlink" title="变量类型"></a>变量类型</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">type(a)</span><br></pre></td></tr></table></figure><h2 id="判断文件存在"><a href="#判断文件存在" class="headerlink" title="判断文件存在"></a>判断文件存在</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">name = str(<span class="string">&quot;&quot;</span>%(...))</span><br><span class="line">os.path.exists(name)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>termux从0开始配置</title>
      <link href="/2019/01/20/termux%E4%BB%8E0%E5%BC%80%E5%A7%8B%E9%85%8D%E7%BD%AE/"/>
      <url>/2019/01/20/termux%E4%BB%8E0%E5%BC%80%E5%A7%8B%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<ul><li><a href="https://www.sqlsec.com/2018/05/termux.html">参考</a></li><li><a href="https://zhuanlan.zhihu.com/p/32338964">参考</a></li></ul><h2 id="在home生成storage"><a href="#在home生成storage" class="headerlink" title="在home生成storage"></a>在home生成storage</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">termux-setup-storage</span><br></pre></td></tr></table></figure><h2 id="软链接"><a href="#软链接" class="headerlink" title="软链接"></a>软链接</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ln -s /data/data/com.termux/files/home/storage/shared/... 名字</span><br></pre></td></tr></table></figure><h2 id="某版本zsh"><a href="#某版本zsh" class="headerlink" title="某版本zsh"></a>某版本zsh</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sh - O <span class="string">&quot;<span class="subst">$(curl -fsSL https://github.com/Cabbagec/termux-ohmyzsh/raw/master/install.sh)</span>&quot;</span></span><br></pre></td></tr></table></figure><h3 id="颜色及字体重新配置"><a href="#颜色及字体重新配置" class="headerlink" title="颜色及字体重新配置"></a>颜色及字体重新配置</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="variable">$HOME</span>/.termux/colors.sh</span><br><span class="line"><span class="variable">$HOME</span>/.termux/fonts.sh</span><br></pre></td></tr></table></figure><ul><li>一键配置</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/NiaBie/termux.git</span><br><span class="line">mv termux termux</span><br></pre></td></tr></table></figure><h2 id="oh-my-tmux"><a href="#oh-my-tmux" class="headerlink" title="oh-my-tmux"></a>oh-my-tmux</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/gpakosz/.tmux.git</span><br><span class="line">ln -s -f .tmux/.tmux.conf .tmux.conf</span><br><span class="line">cp .tmux/.tmux.conf.local .</span><br></pre></td></tr></table></figure><h2 id="修改源"><a href="#修改源" class="headerlink" title="修改源"></a>修改源</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">export EDITOR&#x3D;vi</span><br><span class="line">apt edit-sources</span><br></pre></td></tr></table></figure><p><code>http://mirrors.tuna.tsinghua.edu.cn/termux</code></p>]]></content>
      
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> zsh </tag>
            
            <tag> termux </tag>
            
            <tag> tmux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>latex笔记</title>
      <link href="/2019/01/20/latex%E7%AC%94%E8%AE%B0/"/>
      <url>/2019/01/20/latex%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<blockquote><p>以下均只用<code>CTeX</code>使用过</p></blockquote><h2 id="调整行距，x为倍数"><a href="#调整行距，x为倍数" class="headerlink" title="调整行距，x为倍数"></a>调整行距，x为倍数</h2><figure class="highlight tex"><table><tr><td class="code"><pre><span class="line"><span class="tag">\<span class="name">renewcommand</span><span class="string">&#123;\baselinestretch&#125;</span><span class="string">&#123;x&#125;</span></span><span class="tag">\<span class="name">normalsize</span></span></span><br></pre></td></tr></table></figure><h2 id="修改页边距-详细"><a href="#修改页边距-详细" class="headerlink" title="修改页边距,详细"></a>修改页边距,<a href="http://blog.sina.com.cn/s/blog_531bb7630101832g.html">详细</a></h2><figure class="highlight tex"><table><tr><td class="code"><pre><span class="line"><span class="tag">\<span class="name">usepackage</span><span class="string">&#123;geometry&#125;</span></span></span><br><span class="line"><span class="tag">\<span class="name">geometry</span><span class="string">&#123;a4paper,left=2cm,right=2cm,top=1cm,bottom=1cm&#125;</span></span></span><br></pre></td></tr></table></figure><h2 id="页码-更多"><a href="#页码-更多" class="headerlink" title="页码,更多"></a>页码,<a href="https://blog.csdn.net/japinli/article/details/51418977">更多</a></h2><figure class="highlight tex"><table><tr><td class="code"><pre><span class="line"><span class="tag">\<span class="name">pagestyle</span><span class="string">&#123;type(不要页码就写empty)&#125;</span></span></span><br></pre></td></tr></table></figure><h3 id="设置样式"><a href="#设置样式" class="headerlink" title="设置样式"></a>设置样式</h3><figure class="highlight tex"><table><tr><td class="code"><pre><span class="line"><span class="tag">\<span class="name">thispagestyle</span><span class="string">&#123;type&#125;</span></span></span><br></pre></td></tr></table></figure><h2 id="特定位置横线"><a href="#特定位置横线" class="headerlink" title="特定位置横线:"></a>特定位置横线:</h2><figure class="highlight tex"><table><tr><td class="code"><pre><span class="line"><span class="tag">\<span class="name">cline</span><span class="string">&#123;x-y&#125;</span></span></span><br></pre></td></tr></table></figure><h2 id="合并行"><a href="#合并行" class="headerlink" title="合并行?"></a>合并行?</h2><figure class="highlight tex"><table><tr><td class="code"><pre><span class="line"><span class="tag">\<span class="name">multirow</span><span class="string">&#123;num&#125;</span><span class="string">&#123;width(通常为*)&#125;</span><span class="string">&#123;文字&#125;</span></span> (要<span class="tag">\<span class="name">usepackage</span><span class="string">&#123;multirow&#125;</span></span>)</span><br></pre></td></tr></table></figure><h2 id="下几行被合并的内容"><a href="#下几行被合并的内容" class="headerlink" title="下几行被合并的内容~?"></a>下几行被合并的内容<code>~</code>?</h2><figure class="highlight tex"><table><tr><td class="code"><pre><span class="line">和并列<span class="tag">\<span class="name">multicolumn</span><span class="string">&#123;num&#125;</span><span class="string">&#123;|c|(这里是格式吗)&#125;</span><span class="string">&#123;文字&#125;</span></span></span><br></pre></td></tr></table></figure><h2 id="调整表格行距的骚操作"><a href="#调整表格行距的骚操作" class="headerlink" title="调整表格行距的骚操作:"></a>调整表格行距的骚操作:</h2><figure class="highlight tex"><table><tr><td class="code"><pre><span class="line"><span class="tag">\<span class="name">usepackage</span><span class="string">&#123;booktabs&#125;</span></span></span><br><span class="line"><span class="tag">\<span class="name">specialrule</span><span class="string">&#123;0em&#125;</span><span class="string">&#123;0pt&#125;</span><span class="string">&#123;3pt&#125;</span></span></span><br><span class="line">&#123;线宽&#125;&#123;与上方距离&#125;&#123;与下方距离&#125;(线宽为0则透明)</span><br></pre></td></tr></table></figure><h2 id="section取消标号同时保持链接-用一次即可"><a href="#section取消标号同时保持链接-用一次即可" class="headerlink" title="section取消标号同时保持链接(用一次即可)"></a><code>section</code>取消标号同时保持链接(用一次即可)</h2><figure class="highlight tex"><table><tr><td class="code"><pre><span class="line"><span class="tag">\<span class="name">setcounter</span><span class="string">&#123;secnumdepth&#125;</span><span class="string">&#123;-number&#125;</span></span></span><br></pre></td></tr></table></figure><h2 id="颜色网站colors"><a href="#颜色网站colors" class="headerlink" title="颜色网站colors"></a>颜色网站<a href="http://latexcolor.com/">colors</a></h2><figure class="highlight tex"><table><tr><td class="code"><pre><span class="line"><span class="tag">\<span class="name">definecolor</span><span class="string">&#123;brightpink&#125;</span><span class="string">&#123;rgb&#125;</span><span class="string">&#123;1.0, 0.0, 0.5&#125;</span></span></span><br></pre></td></tr></table></figure><h3 id="背景颜色"><a href="#背景颜色" class="headerlink" title="背景颜色"></a>背景颜色</h3><figure class="highlight tex"><table><tr><td class="code"><pre><span class="line"><span class="tag">\<span class="name">pagecolor</span><span class="string">&#123;ao&#125;</span></span></span><br><span class="line"><span class="tag">\<span class="name">pagecolor</span><span class="string">[rgb]</span><span class="string">&#123;0.0 0.0 0.0&#125;</span></span></span><br></pre></td></tr></table></figure><h2 id="正文取消缩进"><a href="#正文取消缩进" class="headerlink" title="正文取消缩进"></a>正文取消缩进</h2><figure class="highlight tex"><table><tr><td class="code"><pre><span class="line"><span class="tag">\<span class="name">raggedright</span></span></span><br></pre></td></tr></table></figure><h2 id="section取消缩进"><a href="#section取消缩进" class="headerlink" title="section取消缩进"></a><code>section</code>取消缩进</h2><figure class="highlight tex"><table><tr><td class="code"><pre><span class="line"><span class="tag">\<span class="name">CTEXsetup</span><span class="string">[format=&#123;\Large\bfseries&#125;]</span><span class="string">&#123;section&#125;</span></span></span><br></pre></td></tr></table></figure><h3 id="不要用bftext"><a href="#不要用bftext" class="headerlink" title="不要用bftext"></a>不要用<code>bftext</code></h3><h2 id="链接-任意"><a href="#链接-任意" class="headerlink" title="链接(任意)"></a>链接(任意)</h2><figure class="highlight tex"><table><tr><td class="code"><pre><span class="line"><span class="tag">\<span class="name">hyperlink</span><span class="string">&#123;target&#125;</span><span class="string">&#123;show&#125;</span></span></span><br><span class="line"><span class="tag">\<span class="name">hypertarget</span><span class="string">&#123;target&#125;</span><span class="string">&#123;show&#125;</span></span></span><br></pre></td></tr></table></figure><h3 id="设定-tableofcontents到section"><a href="#设定-tableofcontents到section" class="headerlink" title="设定(tableofcontents到section)"></a>设定(<code>tableofcontents</code>到<code>section</code>)</h3><figure class="highlight tex"><table><tr><td class="code"><pre><span class="line"><span class="tag">\<span class="name">usepackage</span><span class="string">[colorlinks,linkcolor=green,anchorcolor=blue,citecolor=green,CJKbookmarks=True]</span><span class="string">&#123;hyperref&#125;</span></span></span><br><span class="line"><span class="tag">\<span class="name">tableofcontents</span></span></span><br></pre></td></tr></table></figure><h2 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h2><p><a href="https://www.overleaf.com/learn/latex/Hyperlinks">overleaf</a></p><hr><blockquote><p>以下经过<code>TexLive</code>使用过</p></blockquote><h2 id="页面大小与页边距"><a href="#页面大小与页边距" class="headerlink" title="页面大小与页边距"></a>页面大小与页边距</h2><figure class="highlight tex"><table><tr><td class="code"><pre><span class="line"><span class="tag">\<span class="name">usepackage</span><span class="string">&#123;geometry&#125;</span></span></span><br><span class="line"><span class="tag">\<span class="name">special</span><span class="string">&#123;papersize=1cm,1cm&#125;</span></span></span><br><span class="line"><span class="tag">\<span class="name">begin</span><span class="string">&#123;document&#125;</span></span></span><br><span class="line">...</span><br></pre></td></tr></table></figure><h2 id="插入c代码"><a href="#插入c代码" class="headerlink" title="插入c代码"></a>插入c代码</h2><figure class="highlight tex"><table><tr><td class="code"><pre><span class="line"><span class="tag">\<span class="name">usepackage</span><span class="string">&#123;listings&#125;</span></span></span><br><span class="line"><span class="tag">\<span class="name">usepackage</span><span class="string">&#123;fontspec&#125;</span></span></span><br><span class="line"><span class="tag">\<span class="name">newfontfamily</span></span><span class="tag">\<span class="name">DejaVu</span><span class="string">&#123;DejaVu Sans Mono for Powerline&#125;</span></span></span><br><span class="line"><span class="tag">\<span class="name">def</span></span><span class="tag">\<span class="name">codes</span><span class="string">&#123;\DejaVu\small&#125;</span></span></span><br><span class="line"><span class="tag">\<span class="name">lstset</span><span class="string">&#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">    language=&#123;[ANSI]C&#125;</span></span>,</span><br><span class="line">    <span class="comment">%行号</span></span><br><span class="line">    numbers=left,</span><br><span class="line">    rulesepcolor=<span class="tag">\<span class="name">color</span><span class="string">&#123;red!20!green!20!blue!20&#125;</span></span>,</span><br><span class="line">    escapeinside=``,</span><br><span class="line">    <span class="comment">%背景色</span></span><br><span class="line">    <span class="comment">%backgroundcolor=\color[RGB]&#123;245,245,244&#125;,</span></span><br><span class="line">    <span class="comment">%样式</span></span><br><span class="line">    basicstyle=<span class="tag">\<span class="name">codes</span></span>,</span><br><span class="line">    keywordstyle=<span class="tag">\<span class="name">color</span><span class="string">&#123;blue&#125;</span></span><span class="tag">\<span class="name">bf</span></span><span class="tag">\<span class="name">codes</span></span>,</span><br><span class="line">    identifierstyle=<span class="tag">\<span class="name">bf</span></span><span class="tag">\<span class="name">codes</span></span>,</span><br><span class="line">    numberstyle=<span class="tag">\<span class="name">color</span><span class="string">[RGB]</span><span class="string">&#123;0,192,192&#125;</span></span><span class="tag">\<span class="name">bf</span></span><span class="tag">\<span class="name">codes</span></span>,</span><br><span class="line">    commentstyle=<span class="tag">\<span class="name">color</span><span class="string">[RGB]</span><span class="string">&#123;96,96,96&#125;</span></span><span class="tag">\<span class="name">codes</span></span>,</span><br><span class="line">    stringstyle=<span class="tag">\<span class="name">color</span><span class="string">[RGB]</span><span class="string">&#123;128,0,0&#125;</span></span><span class="tag">\<span class="name">codes</span></span>,</span><br><span class="line">    <span class="comment">%显示空格</span></span><br><span class="line">    showstringspaces=false</span><br><span class="line">    extendedchars=false <span class="comment">%这一条命令可以解决代码跨页时，章节标题，页眉等汉字不显示的问题</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> latex </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux命令笔记</title>
      <link href="/2019/01/20/Linux%E5%91%BD%E4%BB%A4%E7%AC%94%E8%AE%B0/"/>
      <url>/2019/01/20/Linux%E5%91%BD%E4%BB%A4%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="声卡驱动"><a href="#声卡驱动" class="headerlink" title="声卡驱动"></a>声卡驱动</h2><ul><li>重启声卡</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo /sbin/alsa force-reload</span><br></pre></td></tr></table></figure><h2 id="gnome"><a href="#gnome" class="headerlink" title="gnome"></a>gnome</h2><ul><li>重置桌面配置</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dconf reset -f /org/gnome/</span><br></pre></td></tr></table></figure><ul><li>重启桌面</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo /etc/init.d/gdm3 restart</span><br></pre></td></tr></table></figure><h2 id="sudo"><a href="#sudo" class="headerlink" title="sudo"></a>sudo</h2><p>在sudo模式下使用用户的<code>.vimrc</code></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -E vim file</span><br></pre></td></tr></table></figure><h2 id="当前目录-只保留file"><a href="#当前目录-只保留file" class="headerlink" title="当前目录,只保留file"></a>当前目录,只保留file</h2><ul><li><code>xargs</code></li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">find /当前目录 -<span class="built_in">type</span> f ! -name <span class="string">&quot;file&quot;</span>|xargs rm -f</span><br></pre></td></tr></table></figure><ul><li><code>find</code>自带命令</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">find /当前目录 -<span class="built_in">type</span> f ! -name <span class="string">&quot;file&quot;</span> -<span class="built_in">exec</span> rm -f &#123;&#125; \</span><br></pre></td></tr></table></figure><h2 id="递归删除"><a href="#递归删除" class="headerlink" title="递归删除"></a>递归删除</h2><p> 除<code>.java</code></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">find ./ -name <span class="string">&quot;*.java&quot;</span> | xargs rm -rfv</span><br></pre></td></tr></table></figure><h2 id="批量修改文件名"><a href="#批量修改文件名" class="headerlink" title="批量修改文件名"></a>批量修改文件名</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rename <span class="string">&#x27;s/原内容/改后内容/&#x27;</span> *</span><br></pre></td></tr></table></figure><h2 id="打包"><a href="#打包" class="headerlink" title="打包"></a>打包</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tar czvf FileName.tar DirName</span><br></pre></td></tr></table></figure><ul><li>计算目录大小</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">du -h --max-depth=1 .</span><br></pre></td></tr></table></figure><ul><li>合并文件夹</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cp -frp new/* old/</span><br></pre></td></tr></table></figure><p><code>-f</code>强制覆盖,<code>-r</code>递归,<code>-p</code>保持新文件的属性不变</p><h2 id="dpkg"><a href="#dpkg" class="headerlink" title="dpkg"></a>dpkg</h2><ul><li>查找已装软件?</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dpkg -l|grep filename</span><br></pre></td></tr></table></figure><ul><li>卸载软件</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dpkg -r filename</span><br></pre></td></tr></table></figure><p>或?</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dpkg -P filename</span><br></pre></td></tr></table></figure><ul><li>彻底删除标识为<code>rc</code>的配置信息</li></ul><blockquote><p><code>rc</code>:软件已卸载,配置文件还在</p></blockquote><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dpkg -l | grep ^rc | cut -d<span class="string">&#x27; &#x27;</span> -f3 | sudo xargs dpkg --purge</span><br></pre></td></tr></table></figure><h2 id="目录分析-du"><a href="#目录分析-du" class="headerlink" title="目录分析(du)"></a>目录分析(du)</h2><p>示例</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">du -d1 -b -a .</span><br><span class="line">du -d0 -m .</span><br></pre></td></tr></table></figure><h2 id="cat"><a href="#cat" class="headerlink" title="cat"></a>cat</h2><ul><li>输出固定行数</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cat <span class="variable">$file</span> | head -n +6</span><br><span class="line">``` </span><br><span class="line"></span><br><span class="line">[详细](https://blog.csdn.net/NFR413/article/details/78966085)</span><br><span class="line"></span><br><span class="line"><span class="comment">## curl</span></span><br><span class="line"></span><br><span class="line">- 下载`<span class="variable">$file</span>`</span><br><span class="line"></span><br><span class="line">```bash</span><br><span class="line">curl -O <span class="variable">$pathtofile</span></span><br></pre></td></tr></table></figure><ul><li>命令行中输出表达式的值</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> $[1 == 2]</span><br></pre></td></tr></table></figure><p><a href="https://www.cnblogs.com/newcaoguo/p/5980913.html">Linux的算术运算</a></p><h2 id="进程"><a href="#进程" class="headerlink" title="进程"></a>进程</h2><ul><li>切换到后台</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;ctrl+z&gt;</span><br></pre></td></tr></table></figure><ul><li>查看后台进程</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">jobs</span></span><br></pre></td></tr></table></figure><ul><li>使第<code>N</code>个进程在前台/后台运行</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">fg</span> %N</span><br><span class="line"><span class="built_in">bg</span> %N</span><br></pre></td></tr></table></figure><p>不加<code>N</code>默认对最后一个进程操作</p><h2 id="ctags"><a href="#ctags" class="headerlink" title="ctags"></a>ctags</h2><ul><li>vim设定源</li></ul><p>固定</p><figure class="highlight vim"><table><tr><td class="code"><pre><span class="line"><span class="keyword">set</span> <span class="keyword">tags</span>=$path</span><br></pre></td></tr></table></figure><p>先当前目录,后向上找</p><figure class="highlight vim"><table><tr><td class="code"><pre><span class="line">set tags=tags;</span><br><span class="line"><span class="keyword">set</span> autochdir</span><br></pre></td></tr></table></figure><h2 id="ln链接"><a href="#ln链接" class="headerlink" title="ln链接"></a><code>ln</code>链接</h2><ul><li>文件夹软链接</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ln -s <span class="variable">$exists</span> <span class="variable">$new</span></span><br></pre></td></tr></table></figure><h2 id="wc统计行数"><a href="#wc统计行数" class="headerlink" title="wc统计行数"></a><code>wc</code>统计行数</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">find -maxdepth 10 -<span class="built_in">type</span> f | xargs wc -l</span><br><span class="line">wc -l `find -name <span class="string">&#x27;*.*&#x27;</span>`</span><br></pre></td></tr></table></figure><h2 id="更改用户-权限"><a href="#更改用户-权限" class="headerlink" title="更改用户/权限"></a>更改用户/权限</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo chmod -R 777 *</span><br><span class="line">sudo chown -R user * <span class="comment"># sudo chown -R user:usergroup *</span></span><br></pre></td></tr></table></figure><h2 id="parallel并行-TODO"><a href="#parallel并行-TODO" class="headerlink" title="parallel并行(TODO)"></a><code>parallel</code>并行(TODO)</h2><p><a href="https://www.linuxprobe.com/gnu-parallel-linux.html">参考</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> gnome </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git笔记</title>
      <link href="/2019/01/20/git%E7%AC%94%E8%AE%B0/"/>
      <url>/2019/01/20/git%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="文件"><a href="#文件" class="headerlink" title="文件"></a>文件</h1><h2 id="不同版本文件对比"><a href="#不同版本文件对比" class="headerlink" title="不同版本文件对比"></a>不同版本文件对比</h2><ul><li>同一文件</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git diff branch1 branch2 file</span><br></pre></td></tr></table></figure><ul><li>不同文件</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git diff branch1:(绝对路径) branch2:(绝对路径)</span><br></pre></td></tr></table></figure><h2 id="从版本中删除文件"><a href="#从版本中删除文件" class="headerlink" title="从版本中删除文件(?)"></a>从版本中删除文件(?)</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git rm 文件 --cached</span><br></pre></td></tr></table></figure><blockquote><p><a href="http://www.cnblogs.com/flying_bat/p/4172435.html">博客园</a><br><a href="https://stackoverflow.com/a/30274113/10336529">stackoverflow</a></p></blockquote><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git filter-branch --tree-filter <span class="string">&#x27;rm -f &#123;file&#125;&#x27;</span> HEAD</span><br></pre></td></tr></table></figure><h2 id="不跟踪已删除的文件"><a href="#不跟踪已删除的文件" class="headerlink" title="不跟踪已删除的文件"></a>不跟踪已删除的文件</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git add --update</span><br></pre></td></tr></table></figure><h2 id="显示新增文件"><a href="#显示新增文件" class="headerlink" title="显示新增文件"></a><a href="https://stackoverflow.com/questions/9000163/git-list-new-files-only">显示新增文件</a></h2><ul><li>不需要<code>git add</code></li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git ls-files --others --exclude-standard</span><br><span class="line">git status --porcelain</span><br></pre></td></tr></table></figure><ul><li>在<code>git add</code> 之后</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git diff --name-only --diff-filter&#x3D;A --cached # All new files in the index  </span><br><span class="line">git diff --name-only --diff-filter&#x3D;A          # All files that are not staged  </span><br><span class="line">git diff --name-only --diff-filter&#x3D;A HEAD     # All new files not yet committed</span><br></pre></td></tr></table></figure><h2 id="更新单个文件"><a href="#更新单个文件" class="headerlink" title="更新单个文件"></a>更新单个文件</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git checkout origin/master path_to_file</span><br></pre></td></tr></table></figure><h2 id="恢复单个文件到历史版本"><a href="#恢复单个文件到历史版本" class="headerlink" title="恢复单个文件到历史版本"></a>恢复单个文件到历史版本</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git checkout -- <span class="variable">$filepath</span></span><br><span class="line">git reset <span class="variable">$commit_id</span> <span class="variable">$pathtofile</span></span><br></pre></td></tr></table></figure><h2 id="查看历史版本的文件"><a href="#查看历史版本的文件" class="headerlink" title="查看历史版本的文件"></a>查看历史版本的文件</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git show &#123;<span class="built_in">log</span>&#125;:&#123;filename&#125;</span><br></pre></td></tr></table></figure><h1 id="版本控制"><a href="#版本控制" class="headerlink" title="版本控制"></a>版本控制</h1><h2 id="回复到上一版本"><a href="#回复到上一版本" class="headerlink" title="回复到上一版本"></a>回复到上一版本</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git reset --hard HEAD</span><br><span class="line">git reset --hard HEAD^</span><br><span class="line">git reset --hard HEAD^^</span><br><span class="line">git reset --hard HEAD~100</span><br></pre></td></tr></table></figure><h2 id="回复到新版本"><a href="#回复到新版本" class="headerlink" title="回复到新版本"></a>回复到新版本</h2><p><a href="https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/0013744142037508cf42e51debf49668810645e02887691000">廖雪峰</a></p><h2 id="删除commit"><a href="#删除commit" class="headerlink" title="删除commit"></a>删除commit</h2><p><strong>TODO</strong></p><h1 id="分支"><a href="#分支" class="headerlink" title="分支"></a>分支</h1><h2 id="删除本地分支"><a href="#删除本地分支" class="headerlink" title="删除本地分支"></a>删除本地分支</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git branch -d branchname</span><br></pre></td></tr></table></figure><h2 id="重命名本地分支"><a href="#重命名本地分支" class="headerlink" title="重命名本地分支"></a>重命名本地分支</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git branch -m branchname1 branchname2</span><br></pre></td></tr></table></figure><h2 id="删除远程分支"><a href="#删除远程分支" class="headerlink" title="删除远程分支"></a>删除远程分支</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git push origin --delete branchname</span><br></pre></td></tr></table></figure><p>删除master需要在github上修改默认分支后才能删除</p><h1 id="仓库"><a href="#仓库" class="headerlink" title="仓库"></a>仓库</h1><h2 id="查看远程仓库"><a href="#查看远程仓库" class="headerlink" title="查看远程仓库"></a>查看远程仓库</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git remote -v</span><br></pre></td></tr></table></figure><h2 id="增加仓库"><a href="#增加仓库" class="headerlink" title="增加仓库"></a>增加仓库</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git remote add 名字 地址</span><br></pre></td></tr></table></figure><h2 id="删除仓库"><a href="#删除仓库" class="headerlink" title="删除仓库"></a>删除仓库</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git remote rm 名字</span><br></pre></td></tr></table></figure><h2 id="添加-gitignore后重新跟踪"><a href="#添加-gitignore后重新跟踪" class="headerlink" title="添加.gitignore后重新跟踪"></a>添加<code>.gitignore</code>后重新跟踪</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git rm -r --cached .</span><br><span class="line">git add .</span><br></pre></td></tr></table></figure><h2 id="强制覆盖本地"><a href="#强制覆盖本地" class="headerlink" title="强制覆盖本地"></a>强制覆盖本地</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git fetch</span><br><span class="line">git reset --hard origin/master</span><br><span class="line">git pull</span><br></pre></td></tr></table></figure><h2 id="修改remote"><a href="#修改remote" class="headerlink" title="修改remote"></a>修改remote</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git remote <span class="built_in">set</span>-url origin [url]</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vim笔记</title>
      <link href="/2019/01/20/vim%E7%AC%94%E8%AE%B0/"/>
      <url>/2019/01/20/vim%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="粘贴不覆盖缓冲区"><a href="#粘贴不覆盖缓冲区" class="headerlink" title="粘贴不覆盖缓冲区"></a>粘贴不覆盖缓冲区</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nnoremap y &quot;ay</span><br><span class="line">vnoremap y &quot;ay</span><br><span class="line">nnoremap p &quot;ap</span><br><span class="line">vnoremap p &quot;ap</span><br><span class="line">nnoremap d &quot;ad</span><br><span class="line">vnoremap d &quot;ad</span><br></pre></td></tr></table></figure><h2 id="多屏"><a href="#多屏" class="headerlink" title="多屏"></a>多屏</h2><ul><li>切换屏幕</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;C-W&gt;h &quot;左</span><br><span class="line">&lt;C-W&gt;j &quot;下</span><br><span class="line">&lt;C-W&gt;k &quot;上</span><br><span class="line">&lt;C-W&gt;l &quot;右</span><br></pre></td></tr></table></figure><ul><li>在分屏打开文件</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">:vsp filename &quot;左右</span><br><span class="line">:sp filename &quot;上下</span><br></pre></td></tr></table></figure><ul><li>关闭多屏</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;C-W&gt;c &quot;关闭当前</span><br><span class="line">&lt;C-W&gt;w &quot;保留当前</span><br></pre></td></tr></table></figure><p><a href="https://www.cnblogs.com/ini_always/archive/2011/09/21/2184446.html">参考</a></p><ul><li>分屏互换</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;C-W&gt;x</span><br><span class="line">&lt;C-w&gt;r</span><br></pre></td></tr></table></figure><p><a href="https://www.cnblogs.com/bkylee/p/6120060.html">详细</a></p><ul><li>宏录制</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">qa</span><br><span class="line">你的操作</span><br><span class="line">q</span><br><span class="line">@a</span><br><span class="line">7@a</span><br><span class="line">@@</span><br></pre></td></tr></table></figure><ul><li>折叠常用命令</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">zi</span><br><span class="line">zm</span><br><span class="line">zc</span><br><span class="line">zC</span><br><span class="line">zo</span><br><span class="line">zO</span><br></pre></td></tr></table></figure><p><a href="http://www.cnblogs.com/welkinwalker/archive/2011/05/30/2063587.html">详细</a></p><ul><li>大小写</li></ul><p>vmode下</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">u</span><br><span class="line">&lt;S-U&gt;</span><br></pre></td></tr></table></figure><ul><li>搜索区分大小写</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">:set noignorecase</span><br></pre></td></tr></table></figure><h2 id="关于高亮"><a href="#关于高亮" class="headerlink" title="关于高亮"></a>关于高亮</h2><ul><li>解决突然失效</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">:set syntax&#x3D;c</span><br><span class="line">:set filetype&#x3D;sh</span><br></pre></td></tr></table></figure><ul><li>修改colorscheme</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">:colorscheme $scheme</span><br></pre></td></tr></table></figure><ul><li>设置c缩进</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">:set cindent</span><br></pre></td></tr></table></figure><h2 id="增加系统剪切板功能"><a href="#增加系统剪切板功能" class="headerlink" title="增加系统剪切板功能"></a>增加系统剪切板功能</h2><ul><li>查看是否有该功能</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim --version | grep <span class="string">&quot;clipboard&quot;</span></span><br></pre></td></tr></table></figure><p><code>clipboard</code>之前有<code>-</code>说明不支持</p><ul><li>安装</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get install vim-gnome</span><br></pre></td></tr></table></figure><ul><li>复制到系统剪切板</li></ul><p><code>vmode</code>下<code>&quot;</code>+<code>+</code>+<code>&lt;S-y&gt;</code></p><h2 id="与tmux颜色冲突"><a href="#与tmux颜色冲突" class="headerlink" title="与tmux颜色冲突"></a>与tmux颜色冲突</h2><p><a href="http://stackoverflow.com/a/15378816/390643">stackoverflow</a><br><a href="https://gist.github.com/limingjie/4975c36d13d0927613e6">github</a></p><ul><li>tmux:<code>~/.tmux.conf</code></li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">set -g default-terminal &quot;screen-256color&quot;</span><br></pre></td></tr></table></figure><ul><li>screen:<code>~/.screenrc</code></li></ul><figure class="highlight vim"><table><tr><td class="code"><pre><span class="line">term <span class="string">&quot;screen-256color&quot;</span></span><br></pre></td></tr></table></figure><ul><li>vim:<code>~/.vimrc</code></li></ul><figure class="highlight vim"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> &amp;term == <span class="string">&quot;screen&quot;</span></span><br><span class="line">  <span class="keyword">set</span> t_Co = <span class="number">256</span></span><br><span class="line"><span class="keyword">endif</span></span><br></pre></td></tr></table></figure><ul><li>自动加载</li></ul><figure class="highlight vim"><table><tr><td class="code"><pre><span class="line"><span class="keyword">au</span> FileType * <span class="keyword">call</span> MyView()</span><br><span class="line">fun! MyView()</span><br><span class="line">  <span class="keyword">if</span> (&amp;<span class="keyword">filetype</span> != <span class="string">&quot;&quot;</span>)</span><br><span class="line">    <span class="keyword">au</span> VimLeave * <span class="keyword">silent</span> <span class="keyword">mkview</span></span><br><span class="line">    <span class="keyword">au</span> VimEnter * <span class="keyword">silent</span> <span class="keyword">loadview</span></span><br><span class="line">  <span class="keyword">endif</span></span><br><span class="line">endfun</span><br></pre></td></tr></table></figure><ul><li>语言设定</li></ul><figure class="highlight vim"><table><tr><td class="code"><pre><span class="line"><span class="keyword">lan</span> en_US.utf-<span class="number">8</span><span class="comment">&quot; 自己&lt;c-d&gt;看有什么</span></span><br></pre></td></tr></table></figure><h2 id="替换"><a href="#替换" class="headerlink" title="替换"></a>替换</h2><p><code>:s/\n/\r/</code>:替换当前行第一个<code>\n</code>为<code>\r</code><br><code>:s/\n/\r/g</code>:替换当前行所有<code>\n</code>为<code>\r</code><br><code>:n,$s/\n/\r/</code>:替换第<code>n</code>行开始到最后一行中每一行的第一个<code>\n</code>为<code>\r</code><br><code>:n,$s/\n/\r/g</code>:替换第<code>n</code>行开始到最后一行中每一行所有<code>\n</code>为<code>\r</code><br><code>:%s/\n/\r</code>(<code>:g/\n/s//\r/</code>):替换每一行的第一个<code>\n</code>为<code>\r</code><br><code>:%s/\n/\r/g</code>(<code>:g/\n/s//\r/g</code>):替换每一行中所有<code>\n</code>为<code>\r</code></p><h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><ul><li><p>按键乱映射:<code>rm -rf .vim/view</code></p></li><li><p>markdown格式下的高亮问题</p><ol><li><code>*</code>:数学公式中使用<code>\ast</code></li><li><code>&lt;</code>:左右要加空格</li></ol></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> vim </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo搭建博客</title>
      <link href="/2019/01/20/hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
      <url>/2019/01/20/hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<h1 id="搭建"><a href="#搭建" class="headerlink" title="搭建"></a>搭建</h1><h2 id="git全局配置"><a href="#git全局配置" class="headerlink" title="git全局配置"></a>git全局配置</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;Lynx&quot;</span> <span class="comment"># your student ID and name</span></span><br><span class="line">git config --global user.email <span class="string">&quot;1197225628@qq.com&quot;</span>   <span class="comment"># your email</span></span><br><span class="line">git config --global core.editor vim                 <span class="comment"># your favorite editor</span></span><br><span class="line">git config --global color.ui <span class="literal">true</span></span><br></pre></td></tr></table></figure><h2 id="安装node-js"><a href="#安装node-js" class="headerlink" title="安装node.js"></a>安装node.js</h2><h2 id="安装npm和hexo-搭建博客"><a href="#安装npm和hexo-搭建博客" class="headerlink" title="安装npm和hexo,搭建博客"></a>安装npm和hexo,搭建博客</h2><p><a href="https://zhuanlan.zhihu.com/p/34654952">知乎</a></p><h3 id="简要过程"><a href="#简要过程" class="headerlink" title="简要过程"></a>简要过程</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get install nodejs <span class="comment"># ubuntu</span></span><br><span class="line">sudo apt-get install npm <span class="comment"># ubuntu</span></span><br><span class="line">sudo npm install -g hexo</span><br><span class="line"><span class="comment"># 如果出现错误: sudo npm cache clean --force # 一定要加 sudo</span></span><br><span class="line"><span class="comment"># 进入到文件夹</span></span><br><span class="line">hexo init</span><br><span class="line">npm cache clean --force</span><br><span class="line">sudo npm install <span class="comment"># 安装必须的npm包</span></span><br><span class="line"><span class="comment"># npm install hexo-deployer-git --save # 找不到deployer</span></span><br><span class="line"><span class="comment"># npm install hexo-server # hexo s 无效</span></span><br></pre></td></tr></table></figure><h3 id="绑定个人域名"><a href="#绑定个人域名" class="headerlink" title="绑定个人域名"></a>绑定个人域名</h3><ul><li>阿里云<ol><li>购买域名(aaaatrox.club)</li><li>实名认证</li><li>进入域名控制台,点击对应域名(aaaatrox.club)的<code>解析</code></li><li>添加记录<ul><li>记录类型:<code>CNAME</code></li><li>主机记录:<code>@</code>.aaaatrox.club</li><li>解析线路:<code>默认</code></li><li>记录值:<code>niabie.github.io</code></li></ul></li><li><del>在github的仓库中-&gt;<code>setting</code>-&gt;<code>GitHub Pages</code>-&gt;<code>Custom domain</code>填写aaaatrox.club,选择<code>Enforce HTTPS</code></del></li><li>在本地<code>source/</code>下创建<code>CNAME</code>,内容为域名(aaaatrox.club)</li></ol></li></ul><h1 id="常见错误"><a href="#常见错误" class="headerlink" title="常见错误"></a>常见错误</h1><ol><li>不缺失主题的前提下<code>no layout</code><ul><li>直接<code>hexo clean</code></li><li>使用<code>npm ls</code>查看是否存在缺失,<code>npm install</code>+<code>npm audit fix</code>安装缺失的包</li></ul></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> git </tag>
            
            <tag> hexo </tag>
            
            <tag> 阿里云 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mac从0开始配置</title>
      <link href="/2019/01/20/mac%E4%BB%8E0%E5%BC%80%E5%A7%8B%E9%85%8D%E7%BD%AE/"/>
      <url>/2019/01/20/mac%E4%BB%8E0%E5%BC%80%E5%A7%8B%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h2 id="软件"><a href="#软件" class="headerlink" title="软件"></a>软件</h2><h3 id="常用"><a href="#常用" class="headerlink" title="常用"></a>常用</h3><ul><li>qq</li><li>qq浏览器</li><li>dukto:mac,linux,windows互传软件</li><li>iterm2</li><li>sublime</li><li>mactex</li></ul><h3 id="功能性"><a href="#功能性" class="headerlink" title="功能性"></a>功能性</h3><ul><li>The Uarchiver:解压</li><li>fliqlo:屏保</li><li>Spectacle:键位设置</li><li>mos(<a href="https://github.com/Caldis/Mos">github</a>):鼠标和触控板反向控制</li><li>Hard Disk Manager(无限试用版):磁盘分区</li><li>Dr. Cleaner Pro:磁盘分析</li></ul><h2 id="git"><a href="#git" class="headerlink" title="git"></a>git</h2><ul><li>会自动提示安装命令行工具</li></ul><h2 id="brew"><a href="#brew" class="headerlink" title="brew"></a>brew</h2><ul><li>权限问题</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo chown -R $(whoami) /usr/loacal</span><br></pre></td></tr></table></figure><h2 id="升级后出现的问题"><a href="#升级后出现的问题" class="headerlink" title="升级后出现的问题"></a>升级后出现的问题</h2><h3 id="xcode-select"><a href="#xcode-select" class="headerlink" title="xcode-select"></a>xcode-select</h3><h4 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">xcrun: error: invalid active developer path (&#x2F;Library&#x2F;Developer&#x2F;CommandLineTools), missing xcrun at: &#x2F;Library&#x2F;Developer&#x2F;CommandLineTools&#x2F;usr&#x2F;bin&#x2F;xcrun</span><br></pre></td></tr></table></figure><h4 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">xcode-select --install</span><br></pre></td></tr></table></figure><h2 id="安装refind"><a href="#安装refind" class="headerlink" title="安装refind"></a>安装refind</h2><p><a href="https://blog.csdn.net/xiaoshaxs/article/details/52016628">CSDN</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> git </tag>
            
            <tag> mac </tag>
            
            <tag> brew </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux从0开始配置</title>
      <link href="/2019/01/20/Linux%E4%BB%8E0%E5%BC%80%E5%A7%8B%E9%85%8D%E7%BD%AE/"/>
      <url>/2019/01/20/Linux%E4%BB%8E0%E5%BC%80%E5%A7%8B%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="安装的软件"><a href="#安装的软件" class="headerlink" title="安装的软件"></a>安装的软件</h1><ul><li>vscode</li><li>hyper</li><li>搜狗拼音<ul><li>如果出现<code>qt4</code>的依赖错误,见下方代码区(参考:<a href="https://www.cnblogs.com/cocode/p/12875555.html">cnblogs</a>)</li></ul></li><li>chrome</li><li>dukto<ul><li>如出现依赖错误:<code>sudo add-apt-repository ppa:rock-core/qt4</code></li></ul></li><li>EasyConnect<ul><li>在新版ubuntu中出现错误<code>Pango-ERROR **: 10:23:45.377: Harfbuzz version too old </code><ol><li>降级<code>Pango</code><a href="https://www.cnblogs.com/cocode/p/12890684.html">cnblogs</a><br>在<a href="https://pkgs.org/">https://pkgs.org/</a>下载<ul><li><code>libpangocairo-1.0.so.0</code></li><li><code>libpango-1.0.so.0</code></li><li><code>libpangoft2-1.0.so.0</code><br>注意在选择包的时候请选择<code>Ubuntu 18.04 LTS</code>或以下的版本,使依赖的<code>Harfbuzz</code>版本降低</li><li>解压这3个deb包(<code>dpkg -X &#123;src&#125; &#123;dst&#125;</code>),放到<code>/usr/share/sangfor/EasyConnect</code>目录下</li><li><code>ldd EasyConnect | grep pango</code></li></ul></li></ol></li></ul><ol start="2"><li>升级<code>Harfbuzz</code>(<strong>TODO</strong>)<br><a href="https://www.cnblogs.com/4geek/p/13085039.html">cnblogs</a></li></ol></li></ul><h1 id="code"><a href="#code" class="headerlink" title="code"></a>code</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt install git -y</span><br><span class="line">git config --global user.email <span class="string">&quot;2104934038@qq.com&quot;</span></span><br><span class="line">git config --global credential.helper store</span><br><span class="line">mkdir ~/darkin_blade &amp;&amp; <span class="built_in">cd</span> ~/darkin_blade</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/Linux-setting/my_rc</span><br><span class="line">rm -f ~/.vimrc &amp;&amp; ln ~/darkin_blade/my_rc/vimrc ~/.vimrc</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/Linux-setting/vim</span><br><span class="line">mv vim ~/.vim</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/Linux-setting/powerline.git</span><br><span class="line">mv powerline ~/.config</span><br><span class="line"></span><br><span class="line">sudo apt install vim-gtk3 -y</span><br><span class="line">sudo apt install zsh -y</span><br><span class="line">sudo apt install python3-pip -y</span><br><span class="line">python3 -m pip install powerline-status</span><br><span class="line">sudo apt install powerline-gitstatus -y</span><br><span class="line">mkdir ~/trash &amp;&amp; <span class="built_in">cd</span> ~/trash</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/powerline/fonts.git</span><br><span class="line"><span class="built_in">cd</span> fonts</span><br><span class="line">./install.sh</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> ~/trash</span><br><span class="line">sh -c <span class="string">&quot;<span class="subst">$(wget https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh -O -)</span>&quot;</span></span><br><span class="line">rm -f ~/.zshrc &amp;&amp; ln ~/darkin_blade/my_rc/zshrc ~/.zshrc</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/zsh-users/zsh-syntax-highlighting.git</span><br><span class="line">mv zsh-syntax-highlighting ~/.config</span><br><span class="line"></span><br><span class="line">wget -qO - https://download.sublimetext.com/sublimehq-pub.gpg | sudo apt-key add -</span><br><span class="line">sudo apt install apt-transport-https</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;deb https://download.sublimetext.com/ apt/stable/&quot;</span> | sudo tee /etc/apt/sources.list.d/sublime-text.list</span><br><span class="line">sudo apt update</span><br><span class="line">sudo apt install sublime-text -y</span><br><span class="line"></span><br><span class="line">sudo apt install axel -y</span><br><span class="line">sudo apt install chromium-browser -y</span><br><span class="line">sudo apt install exo-utils -y</span><br><span class="line">sudo apt install exfat-utils -y</span><br><span class="line">sudo apt install pcmanfm -y</span><br><span class="line">sudo apt remove nautilus -y</span><br><span class="line">sudo apt install gnome-tweaks -y</span><br><span class="line">sudo apt install gparted baobab -y</span><br><span class="line">sudo apt install net-tools -y</span><br><span class="line">sudo apt install locate apt-file aptitude -y</span><br><span class="line">sudo apt install fcitx-mozc -y</span><br><span class="line">sudo apt install byzanz -y</span><br><span class="line"></span><br><span class="line"><span class="comment"># ubuntu 20 安装搜狗</span></span><br><span class="line">wget -qO - <span class="string">&#x27;https://keyserver.ubuntu.com/pks/lookup?&amp;op=get&amp;search=0x73BC8FBCF5DE40C6ADFCFFFA9C949F2093F565FF&#x27;</span> | sudo apt-key add -</span><br><span class="line">sudo apt-add-repository <span class="string">&#x27;deb http://archive.ubuntukylin.com/ukui focal main&#x27;</span></span><br><span class="line">sudo apt update</span><br><span class="line">sudo apt install sogouimebs</span><br><span class="line"></span><br><span class="line">sudo apt install npm -y</span><br><span class="line">sudo npm install -g hexo</span><br><span class="line"><span class="built_in">cd</span> ~/darkin_blade</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/darkin-blade/ejs_2</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> ~ &amp;&amp; mkdir blog &amp;&amp; <span class="built_in">cd</span> blog</span><br><span class="line">hexo init</span><br><span class="line">git init &amp;&amp; git remote add origin https://github.com/niabie/hexo_source</span><br><span class="line">git fetch &amp;&amp; git reset --hard origin/master</span><br><span class="line">npm cache clean --force</span><br><span class="line">sudo npm install</span><br><span class="line"><span class="built_in">cd</span> themes &amp;&amp; ln -s ~/darkin_blade/ejs_2 ./ejs_2</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> ~ &amp;&amp; mkdir aaaatrox &amp;&amp; <span class="built_in">cd</span> aaaatrox</span><br><span class="line">hexo init</span><br><span class="line">git init &amp;&amp; git remote add origin https://github.com/aaaatrox/hexo_source</span><br><span class="line">git fetch &amp;&amp; git reset --hard origin/master</span><br><span class="line">npm cache clean --force</span><br><span class="line">sudo npm install</span><br><span class="line"><span class="built_in">cd</span> themes &amp;&amp; ln -s ~/darkin_blade/ejs_2 ./ejs_2</span><br><span class="line"></span><br><span class="line">sudo apt install ntpdate</span><br><span class="line">sudo ntpdate time.windows.com</span><br><span class="line">sudo hwclock --localtime --systohc</span><br></pre></td></tr></table></figure><h1 id="重要步骤"><a href="#重要步骤" class="headerlink" title="重要步骤"></a>重要步骤</h1><h2 id="git"><a href="#git" class="headerlink" title="git"></a>git</h2><ol><li>全局设置</li></ol><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;Lynx&quot;</span> <span class="comment"># your student ID and name</span></span><br><span class="line">git config --global user.email <span class="string">&quot;1197225628@qq.com&quot;</span>   <span class="comment"># your email</span></span><br><span class="line">git config --global core.editor vim                 <span class="comment"># your favorite editor</span></span><br><span class="line">git config --global color.ui <span class="literal">true</span></span><br></pre></td></tr></table></figure><h2 id="powerline"><a href="#powerline" class="headerlink" title="powerline"></a>powerline</h2><ol><li>python安装pip</li></ol><p><a href="http://www.runoob.com/w3cnote/python-pip-install-usage.html">菜鸟教程</a></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py</span><br><span class="line">sudo python get-pip.py</span><br><span class="line"><span class="comment"># or</span></span><br><span class="line">sudo apt-get install python3-pip</span><br></pre></td></tr></table></figure><ol start="2"><li>pip安装powerline</li></ol><p><a href="http://cenalulu.github.io/linux/mac-powerline/">详细</a></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pip install powerline-status</span><br><span class="line">pip3 install powerline-status</span><br></pre></td></tr></table></figure><ol start="3"><li>pip安装powerline-gitstatus</li></ol><p><a href="https://github.com/jaspernbrouwer/powerline-gitstatus">github</a></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt install powerline-gitstatus</span><br><span class="line"><span class="comment"># or</span></span><br><span class="line">pip install powerline-gitstatus</span><br><span class="line">pip3 install powerline-gitstatus</span><br></pre></td></tr></table></figure><ol start="4"><li><p>复制配置文件</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/Linux-setting/powerline.git</span><br><span class="line">mv powerline .config/</span><br></pre></td></tr></table></figure></li><li><p>安装powerline字体</p></li></ol><p><a href="http://cenalulu.github.io/linux/mac-powerline/">详细</a></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/powerline/fonts.git</span><br><span class="line"><span class="built_in">cd</span> fonts</span><br><span class="line">./install.sh</span><br></pre></td></tr></table></figure><ol start="6"><li><p>修改终端字体设置</p></li><li><p>找不到<code>powerline-config</code></p><ol><li><code>mkdir $HOME/.local/lib/python3.6/site-packages/scripts/</code> if not exists</li><li>Find where <code>powerline-config</code> locates. For example <code>$HOME/.local/bin/powerline-config</code></li><li><code>cp $HOME/.local/bin/powerline* $HOME/.local/lib/python3.6/site-packages/scripts/.</code></li></ol></li></ol><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># export PATH=$PATH:$HOME/.local/bin/</span></span><br><span class="line"><span class="comment"># export PATH=&#123;path-to-powerline-config&#125;:$PATH</span></span><br></pre></td></tr></table></figure><h2 id="vim"><a href="#vim" class="headerlink" title="vim"></a>vim</h2><ol><li>install vim with clipboard</li></ol><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt install vim-gtk3</span><br></pre></td></tr></table></figure><ol start="2"><li>转移.vimrc,修改powerline相对路径</li></ol><p>安装支持python的vim(查看<code>vim --version</code>),<a href="http://cenalulu.github.io/linux/mac-powerline/">详细</a>:</p><ul><li>macOS</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">brew install vim --with-python</span><br></pre></td></tr></table></figure><ul><li>Linux</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt install vim-gnome</span><br></pre></td></tr></table></figure><blockquote><p>如果需要使用系统剪切板功能,必须安装<code>vim-gnome</code></p></blockquote><ol start="3"><li>复制插件(<code>branch clean</code>)<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/Linux-setting/vim.git</span><br><span class="line">mv vim .vim</span><br></pre></td></tr></table></figure></li></ol><ul><li><p>注意:</p><ul><li><code>ubuntu</code>默认只装了<code>vi</code>而不是<code>vim</code></li><li>如果出现无法写入<code>.vim/view</code>的问题,直接把文件夹删掉</li></ul></li><li><p><del>插件包含:</del>推荐插件</p><ul><li>vim的gitdiff标识<a href="https://www.diycode.cc/projects/airblade/vim-gitgutter">vim-gitgutter</a></li><li>彩虹括号升级版<a href="https://github.com/luochen1990/rainbow">rainbow</a></li><li>插件管理器<a href="https://github.com/junegunn/vim-plug">vim-plug</a></li><li>魔改自<code>tokyo-metro</code>的配色<code>my.vim</code> </li><li>手写的仿sublime补全插件<a href="htts://github.com/niabie/vim-sb-complete">vim-sb-complete</a></li></ul></li></ul><ol start="4"><li>修改rtp</li></ol><h2 id="zsh"><a href="#zsh" class="headerlink" title="zsh"></a>zsh</h2><ol><li><p>安装zsh</p></li><li><p>wget安装oh-my-zsh</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sh -c &quot;$(wget https:&#x2F;&#x2F;raw.github.com&#x2F;robbyrussell&#x2F;oh-my-zsh&#x2F;master&#x2F;tools&#x2F;install.sh -O -)&quot; </span><br></pre></td></tr></table></figure></li><li><p>转移.zshrc,修改powerline相对路径</p></li><li><p>安装zsh-syntax-highlighting</p><p><a href="https://blog.csdn.net/caiqiiqi/article/details/52139288">详细</a></p><ul><li>macOS</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">brew install zsh-syntax-highlighting</span><br></pre></td></tr></table></figure><p>然后将<code>source /usr/local/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh</code>加到<code>.zshrc</code></p><ul><li>oh-my-zsh</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"> git <span class="built_in">clone</span> https://github.com/zsh-users/zsh-syntax-highlighting.git</span><br><span class="line">mv zsh-syntax-highlighting ~/.config/zsh-syntax-highlighting</span><br></pre></td></tr></table></figure><p>然后将<code>source $HOME/zsh-syntax-highlighting/zsh-syntax-highlighting.git</code>加到<code>.zshrc</code></p></li><li><p>设置zsh为默认shell</p></li></ol><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">chsh -s /bin/zsh</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> powerline </tag>
            
            <tag> zsh </tag>
            
            <tag> vim </tag>
            
            <tag> git </tag>
            
            <tag> pip </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
